node {
  name: "conv2d_1_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 224
        }
        dim {
          size: 224
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "conv2d_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "conv2d_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "conv2d_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4239305
    }
  }
}
node {
  name: "conv2d_1/random_uniform/sub"
  op: "Sub"
  input: "conv2d_1/random_uniform/max"
  input: "conv2d_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/random_uniform/mul"
  op: "Mul"
  input: "conv2d_1/random_uniform/RandomUniform"
  input: "conv2d_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/random_uniform"
  op: "Add"
  input: "conv2d_1/random_uniform/mul"
  input: "conv2d_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_1/kernel/Assign"
  op: "Assign"
  input: "conv2d_1/kernel"
  input: "conv2d_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_1/kernel/read"
  op: "Identity"
  input: "conv2d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_1/bias/Assign"
  op: "Assign"
  input: "conv2d_1/bias"
  input: "conv2d_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_1/bias/read"
  op: "Identity"
  input: "conv2d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/bias"
      }
    }
  }
}
node {
  name: "conv2d_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_1/convolution"
  op: "Conv2D"
  input: "conv2d_1_input"
  input: "conv2d_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_1/convolution"
  input: "conv2d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_1/gamma"
  input: "batch_normalization_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1/gamma/read"
  op: "Identity"
  input: "batch_normalization_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1/beta/Assign"
  op: "Assign"
  input: "batch_normalization_1/beta"
  input: "batch_normalization_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1/beta/read"
  op: "Identity"
  input: "batch_normalization_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_1/moving_mean"
  input: "batch_normalization_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_1/moving_variance"
  input: "batch_normalization_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_1/moments/mean"
  op: "Mean"
  input: "conv2d_1/BiasAdd"
  input: "batch_normalization_1/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "conv2d_1/BiasAdd"
  input: "batch_normalization_1/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_1/moments/variance"
  op: "Mean"
  input: "batch_normalization_1/moments/SquaredDifference"
  input: "batch_normalization_1/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_1/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_1/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/add"
  op: "Add"
  input: "batch_normalization_1/moments/Squeeze_1"
  input: "batch_normalization_1/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_1/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_1/batchnorm/Rsqrt"
  input: "batch_normalization_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/mul_1"
  op: "Mul"
  input: "conv2d_1/BiasAdd"
  input: "batch_normalization_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_1/moments/Squeeze"
  input: "batch_normalization_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_1/beta/read"
  input: "batch_normalization_1/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_1/batchnorm/mul_1"
  input: "batch_normalization_1/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_1/moving_mean/read"
  input: "batch_normalization_1/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_1/AssignMovingAvg/sub"
  input: "batch_normalization_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_1/moving_mean"
  input: "batch_normalization_1/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_1/moving_variance/read"
  input: "batch_normalization_1/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_1/AssignMovingAvg_1/sub"
  input: "batch_normalization_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_1/moving_variance"
  input: "batch_normalization_1/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_1/keras_learning_phase"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_1/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_1/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_1/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_1/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_1/batchnorm/add_1"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_1/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_1/cond/batchnorm/add/Switch"
  input: "batch_normalization_1/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_1/moving_variance/read"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_1/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_1/cond/batchnorm/Rsqrt"
  input: "batch_normalization_1/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_1/gamma/read"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_1/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_1/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv2d_1/BiasAdd"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_1/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_1/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_1/moving_mean/read"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_1/cond/batchnorm/sub/Switch"
  input: "batch_normalization_1/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_1/beta/read"
  input: "batch_normalization_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_1/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_1/cond/batchnorm/mul_1"
  input: "batch_normalization_1/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/cond/Merge"
  op: "Merge"
  input: "batch_normalization_1/cond/batchnorm/add_1"
  input: "batch_normalization_1/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_1/Elu"
  op: "Elu"
  input: "batch_normalization_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "max_pooling2d_1/MaxPool"
  op: "MaxPool"
  input: "activation_1/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "separable_conv2d_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "separable_conv2d_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6207015
    }
  }
}
node {
  name: "separable_conv2d_1/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_1/random_uniform/max"
  input: "separable_conv2d_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_1/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_1/random_uniform/RandomUniform"
  input: "separable_conv2d_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_1/random_uniform"
  op: "Add"
  input: "separable_conv2d_1/random_uniform/mul"
  input: "separable_conv2d_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_1/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_1/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_1/depthwise_kernel"
  input: "separable_conv2d_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_1/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_1/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_1/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_1/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_1/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "separable_conv2d_1/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "separable_conv2d_1/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_1/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1152391
    }
  }
}
node {
  name: "separable_conv2d_1/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_1/random_uniform_1/max"
  input: "separable_conv2d_1/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_1/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_1/random_uniform_1/RandomUniform"
  input: "separable_conv2d_1/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_1/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_1/random_uniform_1/mul"
  input: "separable_conv2d_1/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_1/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_1/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_1/pointwise_kernel"
  input: "separable_conv2d_1/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_1/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_1/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_1/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_1/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_1/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_1/bias"
  input: "separable_conv2d_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_1/bias/read"
  op: "Identity"
  input: "separable_conv2d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_1/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_1/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_1/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_1/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "max_pooling2d_1/MaxPool"
  input: "separable_conv2d_1/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_1/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_1/separable_conv2d/depthwise"
  input: "separable_conv2d_1/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_1/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_1/separable_conv2d"
  input: "separable_conv2d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_2/gamma"
  input: "batch_normalization_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2/gamma/read"
  op: "Identity"
  input: "batch_normalization_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_2/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2/beta/Assign"
  op: "Assign"
  input: "batch_normalization_2/beta"
  input: "batch_normalization_2/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2/beta/read"
  op: "Identity"
  input: "batch_normalization_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_2/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_2/moving_mean"
  input: "batch_normalization_2/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_2/moving_variance"
  input: "batch_normalization_2/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_2/moments/mean"
  op: "Mean"
  input: "separable_conv2d_1/BiasAdd"
  input: "batch_normalization_2/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_2/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_1/BiasAdd"
  input: "batch_normalization_2/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_2/moments/variance"
  op: "Mean"
  input: "batch_normalization_2/moments/SquaredDifference"
  input: "batch_normalization_2/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_2/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_2/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_2/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_2/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_2/batchnorm/add"
  op: "Add"
  input: "batch_normalization_2/moments/Squeeze_1"
  input: "batch_normalization_2/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_2/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_2/batchnorm/Rsqrt"
  input: "batch_normalization_2/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_1/BiasAdd"
  input: "batch_normalization_2/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_2/moments/Squeeze"
  input: "batch_normalization_2/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_2/beta/read"
  input: "batch_normalization_2/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_2/batchnorm/mul_1"
  input: "batch_normalization_2/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_2/moving_mean/read"
  input: "batch_normalization_2/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_2/AssignMovingAvg/sub"
  input: "batch_normalization_2/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_2/moving_mean"
  input: "batch_normalization_2/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_2/moving_variance/read"
  input: "batch_normalization_2/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_2/AssignMovingAvg_1/sub"
  input: "batch_normalization_2/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_2/moving_variance"
  input: "batch_normalization_2/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_2/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_2/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_2/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_2/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_2/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_2/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_2/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_2/batchnorm/add_1"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_2/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_2/cond/batchnorm/add/Switch"
  input: "batch_normalization_2/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_2/moving_variance/read"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_2/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_2/cond/batchnorm/Rsqrt"
  input: "batch_normalization_2/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_2/gamma/read"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_2/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_2/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_1/BiasAdd"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_1/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_2/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_2/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_2/moving_mean/read"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_2/cond/batchnorm/sub/Switch"
  input: "batch_normalization_2/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_2/beta/read"
  input: "batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_2/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_2/cond/batchnorm/mul_1"
  input: "batch_normalization_2/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/cond/Merge"
  op: "Merge"
  input: "batch_normalization_2/cond/batchnorm/add_1"
  input: "batch_normalization_2/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_2/Elu"
  op: "Elu"
  input: "batch_normalization_2/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "max_pooling2d_2/MaxPool"
  op: "MaxPool"
  input: "activation_2/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_2/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_2/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "separable_conv2d_2/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "separable_conv2d_2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_2/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6016911
    }
  }
}
node {
  name: "separable_conv2d_2/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_2/random_uniform/max"
  input: "separable_conv2d_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_2/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_2/random_uniform/RandomUniform"
  input: "separable_conv2d_2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_2/random_uniform"
  op: "Add"
  input: "separable_conv2d_2/random_uniform/mul"
  input: "separable_conv2d_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_2/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_2/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_2/depthwise_kernel"
  input: "separable_conv2d_2/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_2/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_2/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_2/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_2/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_2/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_2/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1767766922712326
      }
    }
  }
}
node {
  name: "separable_conv2d_2/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "separable_conv2d_2/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_2/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6859312
    }
  }
}
node {
  name: "separable_conv2d_2/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_2/random_uniform_1/max"
  input: "separable_conv2d_2/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_2/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_2/random_uniform_1/RandomUniform"
  input: "separable_conv2d_2/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_2/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_2/random_uniform_1/mul"
  input: "separable_conv2d_2/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_2/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_2/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_2/pointwise_kernel"
  input: "separable_conv2d_2/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_2/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_2/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_2/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_2/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_2/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_2/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_2/bias"
  input: "separable_conv2d_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_2/bias/read"
  op: "Identity"
  input: "separable_conv2d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_2/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_2/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_2/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_2/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "max_pooling2d_2/MaxPool"
  input: "separable_conv2d_2/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_2/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_2/separable_conv2d/depthwise"
  input: "separable_conv2d_2/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_2/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_2/separable_conv2d"
  input: "separable_conv2d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_3/gamma"
  input: "batch_normalization_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3/gamma/read"
  op: "Identity"
  input: "batch_normalization_3/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_3/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3/beta/Assign"
  op: "Assign"
  input: "batch_normalization_3/beta"
  input: "batch_normalization_3/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3/beta/read"
  op: "Identity"
  input: "batch_normalization_3/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_3/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_3/moving_mean"
  input: "batch_normalization_3/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_3/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_3/moving_variance"
  input: "batch_normalization_3/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_3/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_3/moments/mean"
  op: "Mean"
  input: "separable_conv2d_2/BiasAdd"
  input: "batch_normalization_3/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_3/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_2/BiasAdd"
  input: "batch_normalization_3/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_3/moments/variance"
  op: "Mean"
  input: "batch_normalization_3/moments/SquaredDifference"
  input: "batch_normalization_3/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_3/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_3/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_3/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_3/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_3/batchnorm/add"
  op: "Add"
  input: "batch_normalization_3/moments/Squeeze_1"
  input: "batch_normalization_3/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_3/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_3/batchnorm/Rsqrt"
  input: "batch_normalization_3/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_2/BiasAdd"
  input: "batch_normalization_3/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_3/moments/Squeeze"
  input: "batch_normalization_3/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_3/beta/read"
  input: "batch_normalization_3/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_3/batchnorm/mul_1"
  input: "batch_normalization_3/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_3/moving_mean/read"
  input: "batch_normalization_3/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_3/AssignMovingAvg/sub"
  input: "batch_normalization_3/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_3/moving_mean"
  input: "batch_normalization_3/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_3/moving_variance/read"
  input: "batch_normalization_3/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_3/AssignMovingAvg_1/sub"
  input: "batch_normalization_3/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_3/moving_variance"
  input: "batch_normalization_3/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_3/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_3/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_3/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_3/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_3/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_3/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_3/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_3/batchnorm/add_1"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_3/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_3/cond/batchnorm/add/Switch"
  input: "batch_normalization_3/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_3/moving_variance/read"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_3/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_3/cond/batchnorm/Rsqrt"
  input: "batch_normalization_3/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_3/gamma/read"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_3/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_3/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_2/BiasAdd"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_2/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_3/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_3/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_3/moving_mean/read"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_3/cond/batchnorm/sub/Switch"
  input: "batch_normalization_3/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_3/beta/read"
  input: "batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_3/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_3/cond/batchnorm/mul_1"
  input: "batch_normalization_3/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/cond/Merge"
  op: "Merge"
  input: "batch_normalization_3/cond/batchnorm/add_1"
  input: "batch_normalization_3/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_3/Elu"
  op: "Elu"
  input: "batch_normalization_3/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_3/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_3/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0718885138630867
      }
    }
  }
}
node {
  name: "separable_conv2d_3/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0718885138630867
      }
    }
  }
}
node {
  name: "separable_conv2d_3/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_3/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4710531
    }
  }
}
node {
  name: "separable_conv2d_3/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_3/random_uniform/max"
  input: "separable_conv2d_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_3/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_3/random_uniform/RandomUniform"
  input: "separable_conv2d_3/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_3/random_uniform"
  op: "Add"
  input: "separable_conv2d_3/random_uniform/mul"
  input: "separable_conv2d_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_3/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_3/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_3/depthwise_kernel"
  input: "separable_conv2d_3/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_3/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_3/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_3/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_3/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_3/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_3/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "separable_conv2d_3/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "separable_conv2d_3/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_3/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4668903
    }
  }
}
node {
  name: "separable_conv2d_3/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_3/random_uniform_1/max"
  input: "separable_conv2d_3/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_3/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_3/random_uniform_1/RandomUniform"
  input: "separable_conv2d_3/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_3/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_3/random_uniform_1/mul"
  input: "separable_conv2d_3/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_3/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_3/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_3/pointwise_kernel"
  input: "separable_conv2d_3/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_3/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_3/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_3/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_3/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_3/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_3/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_3/bias"
  input: "separable_conv2d_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_3/bias/read"
  op: "Identity"
  input: "separable_conv2d_3/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_3/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_3/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_3/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_3/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_3/Elu"
  input: "separable_conv2d_3/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_3/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_3/separable_conv2d/depthwise"
  input: "separable_conv2d_3/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_3/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_3/separable_conv2d"
  input: "separable_conv2d_3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_4/gamma"
  input: "batch_normalization_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4/gamma/read"
  op: "Identity"
  input: "batch_normalization_4/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_4/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4/beta/Assign"
  op: "Assign"
  input: "batch_normalization_4/beta"
  input: "batch_normalization_4/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4/beta/read"
  op: "Identity"
  input: "batch_normalization_4/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_4/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_4/moving_mean"
  input: "batch_normalization_4/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_4/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_4/moving_variance"
  input: "batch_normalization_4/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_4/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_4/moments/mean"
  op: "Mean"
  input: "separable_conv2d_3/BiasAdd"
  input: "batch_normalization_4/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_4/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_3/BiasAdd"
  input: "batch_normalization_4/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_4/moments/variance"
  op: "Mean"
  input: "batch_normalization_4/moments/SquaredDifference"
  input: "batch_normalization_4/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_4/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_4/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_4/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_4/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_4/batchnorm/add"
  op: "Add"
  input: "batch_normalization_4/moments/Squeeze_1"
  input: "batch_normalization_4/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_4/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_4/batchnorm/Rsqrt"
  input: "batch_normalization_4/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_3/BiasAdd"
  input: "batch_normalization_4/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_4/moments/Squeeze"
  input: "batch_normalization_4/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_4/beta/read"
  input: "batch_normalization_4/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_4/batchnorm/mul_1"
  input: "batch_normalization_4/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_4/moving_mean/read"
  input: "batch_normalization_4/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_4/AssignMovingAvg/sub"
  input: "batch_normalization_4/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_4/moving_mean"
  input: "batch_normalization_4/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_4/moving_variance/read"
  input: "batch_normalization_4/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_4/AssignMovingAvg_1/sub"
  input: "batch_normalization_4/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_4/moving_variance"
  input: "batch_normalization_4/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_4/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_4/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_4/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_4/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_4/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_4/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_4/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_4/batchnorm/add_1"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_4/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_4/cond/batchnorm/add/Switch"
  input: "batch_normalization_4/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_4/moving_variance/read"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_4/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_4/cond/batchnorm/Rsqrt"
  input: "batch_normalization_4/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_4/gamma/read"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_4/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_4/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_3/BiasAdd"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_3/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_4/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_4/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_4/moving_mean/read"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_4/cond/batchnorm/sub/Switch"
  input: "batch_normalization_4/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_4/beta/read"
  input: "batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_4/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_4/cond/batchnorm/mul_1"
  input: "batch_normalization_4/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/cond/Merge"
  op: "Merge"
  input: "batch_normalization_4/cond/batchnorm/add_1"
  input: "batch_normalization_4/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_4/Elu"
  op: "Elu"
  input: "batch_normalization_4/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_4/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_4/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0718885138630867
      }
    }
  }
}
node {
  name: "separable_conv2d_4/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0718885138630867
      }
    }
  }
}
node {
  name: "separable_conv2d_4/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_4/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8225444
    }
  }
}
node {
  name: "separable_conv2d_4/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_4/random_uniform/max"
  input: "separable_conv2d_4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_4/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_4/random_uniform/RandomUniform"
  input: "separable_conv2d_4/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_4/random_uniform"
  op: "Add"
  input: "separable_conv2d_4/random_uniform/mul"
  input: "separable_conv2d_4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_4/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_4/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_4/depthwise_kernel"
  input: "separable_conv2d_4/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_4/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_4/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_4/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_4/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_4/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_4/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "separable_conv2d_4/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "separable_conv2d_4/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_4/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8064450
    }
  }
}
node {
  name: "separable_conv2d_4/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_4/random_uniform_1/max"
  input: "separable_conv2d_4/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_4/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_4/random_uniform_1/RandomUniform"
  input: "separable_conv2d_4/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_4/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_4/random_uniform_1/mul"
  input: "separable_conv2d_4/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_4/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_4/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_4/pointwise_kernel"
  input: "separable_conv2d_4/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_4/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_4/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_4/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_4/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_4/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_4/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_4/bias"
  input: "separable_conv2d_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_4/bias/read"
  op: "Identity"
  input: "separable_conv2d_4/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_4/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_4/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_4/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_4/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_4/Elu"
  input: "separable_conv2d_4/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_4/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_4/separable_conv2d/depthwise"
  input: "separable_conv2d_4/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_4/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_4/separable_conv2d"
  input: "separable_conv2d_4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_5/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_5/gamma"
  input: "batch_normalization_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_5/gamma/read"
  op: "Identity"
  input: "batch_normalization_5/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_5/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_5/beta/Assign"
  op: "Assign"
  input: "batch_normalization_5/beta"
  input: "batch_normalization_5/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_5/beta/read"
  op: "Identity"
  input: "batch_normalization_5/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_5/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_5/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_5/moving_mean"
  input: "batch_normalization_5/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_5/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_5/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_5/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_5/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_5/moving_variance"
  input: "batch_normalization_5/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_5/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_5/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_5/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_5/moments/mean"
  op: "Mean"
  input: "separable_conv2d_4/BiasAdd"
  input: "batch_normalization_5/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_5/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_5/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_4/BiasAdd"
  input: "batch_normalization_5/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_5/moments/variance"
  op: "Mean"
  input: "batch_normalization_5/moments/SquaredDifference"
  input: "batch_normalization_5/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_5/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_5/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_5/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_5/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_5/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_5/batchnorm/add"
  op: "Add"
  input: "batch_normalization_5/moments/Squeeze_1"
  input: "batch_normalization_5/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_5/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_5/batchnorm/Rsqrt"
  input: "batch_normalization_5/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_4/BiasAdd"
  input: "batch_normalization_5/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_5/moments/Squeeze"
  input: "batch_normalization_5/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_5/beta/read"
  input: "batch_normalization_5/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_5/batchnorm/mul_1"
  input: "batch_normalization_5/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_5/moving_mean/read"
  input: "batch_normalization_5/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_5/AssignMovingAvg/sub"
  input: "batch_normalization_5/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_5/moving_mean"
  input: "batch_normalization_5/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_5/moving_variance/read"
  input: "batch_normalization_5/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_5/AssignMovingAvg_1/sub"
  input: "batch_normalization_5/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_5/moving_variance"
  input: "batch_normalization_5/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_5/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_5/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_5/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_5/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_5/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_5/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_5/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_5/batchnorm/add_1"
  input: "batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_5/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_5/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_5/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_5/cond/batchnorm/add/Switch"
  input: "batch_normalization_5/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_5/moving_variance/read"
  input: "batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_5/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_5/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_5/cond/batchnorm/Rsqrt"
  input: "batch_normalization_5/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_5/gamma/read"
  input: "batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_5/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_5/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_5/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_4/BiasAdd"
  input: "batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_4/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_5/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_5/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_5/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_5/moving_mean/read"
  input: "batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_5/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_5/cond/batchnorm/sub/Switch"
  input: "batch_normalization_5/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_5/beta/read"
  input: "batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_5/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_5/cond/batchnorm/mul_1"
  input: "batch_normalization_5/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/cond/Merge"
  op: "Merge"
  input: "batch_normalization_5/cond/batchnorm/add_1"
  input: "batch_normalization_5/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_5/Elu"
  op: "Elu"
  input: "batch_normalization_5/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_5/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_5/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958004
      }
    }
  }
}
node {
  name: "separable_conv2d_5/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958004
      }
    }
  }
}
node {
  name: "separable_conv2d_5/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_5/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2888537
    }
  }
}
node {
  name: "separable_conv2d_5/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_5/random_uniform/max"
  input: "separable_conv2d_5/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_5/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_5/random_uniform/RandomUniform"
  input: "separable_conv2d_5/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_5/random_uniform"
  op: "Add"
  input: "separable_conv2d_5/random_uniform/mul"
  input: "separable_conv2d_5/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_5/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_5/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_5/depthwise_kernel"
  input: "separable_conv2d_5/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_5/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_5/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_5/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_5/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_5/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_5/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "separable_conv2d_5/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "separable_conv2d_5/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_5/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8981733
    }
  }
}
node {
  name: "separable_conv2d_5/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_5/random_uniform_1/max"
  input: "separable_conv2d_5/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_5/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_5/random_uniform_1/RandomUniform"
  input: "separable_conv2d_5/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_5/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_5/random_uniform_1/mul"
  input: "separable_conv2d_5/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_5/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_5/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_5/pointwise_kernel"
  input: "separable_conv2d_5/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_5/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_5/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_5/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_5/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_5/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_5/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_5/bias"
  input: "separable_conv2d_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_5/bias/read"
  op: "Identity"
  input: "separable_conv2d_5/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_5/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_5/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_5/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_5/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_5/Elu"
  input: "separable_conv2d_5/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_5/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_5/separable_conv2d/depthwise"
  input: "separable_conv2d_5/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_5/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_5/separable_conv2d"
  input: "separable_conv2d_5/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_6/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_6/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_6/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_6/gamma"
  input: "batch_normalization_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_6/gamma/read"
  op: "Identity"
  input: "batch_normalization_6/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_6/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_6/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_6/beta/Assign"
  op: "Assign"
  input: "batch_normalization_6/beta"
  input: "batch_normalization_6/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_6/beta/read"
  op: "Identity"
  input: "batch_normalization_6/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_6/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_6/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_6/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_6/moving_mean"
  input: "batch_normalization_6/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_6/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_6/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_6/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_6/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_6/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_6/moving_variance"
  input: "batch_normalization_6/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_6/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_6/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_6/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_6/moments/mean"
  op: "Mean"
  input: "separable_conv2d_5/BiasAdd"
  input: "batch_normalization_6/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_6/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_6/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_5/BiasAdd"
  input: "batch_normalization_6/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_6/moments/variance"
  op: "Mean"
  input: "batch_normalization_6/moments/SquaredDifference"
  input: "batch_normalization_6/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_6/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_6/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_6/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_6/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_6/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_6/batchnorm/add"
  op: "Add"
  input: "batch_normalization_6/moments/Squeeze_1"
  input: "batch_normalization_6/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_6/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_6/batchnorm/Rsqrt"
  input: "batch_normalization_6/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_5/BiasAdd"
  input: "batch_normalization_6/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_6/moments/Squeeze"
  input: "batch_normalization_6/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_6/beta/read"
  input: "batch_normalization_6/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_6/batchnorm/mul_1"
  input: "batch_normalization_6/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_6/moving_mean/read"
  input: "batch_normalization_6/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_6/AssignMovingAvg/sub"
  input: "batch_normalization_6/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_6/moving_mean"
  input: "batch_normalization_6/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_6/moving_variance/read"
  input: "batch_normalization_6/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_6/AssignMovingAvg_1/sub"
  input: "batch_normalization_6/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_6/moving_variance"
  input: "batch_normalization_6/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_6/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_6/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_6/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_6/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_6/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_6/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_6/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_6/batchnorm/add_1"
  input: "batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_6/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_6/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_6/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_6/cond/batchnorm/add/Switch"
  input: "batch_normalization_6/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_6/moving_variance/read"
  input: "batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_6/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_6/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_6/cond/batchnorm/Rsqrt"
  input: "batch_normalization_6/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_6/gamma/read"
  input: "batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_6/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_6/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_6/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_5/BiasAdd"
  input: "batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_5/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_6/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_6/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_6/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_6/moving_mean/read"
  input: "batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_6/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_6/cond/batchnorm/sub/Switch"
  input: "batch_normalization_6/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_6/beta/read"
  input: "batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_6/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_6/cond/batchnorm/mul_1"
  input: "batch_normalization_6/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_6/cond/Merge"
  op: "Merge"
  input: "batch_normalization_6/cond/batchnorm/add_1"
  input: "batch_normalization_6/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_6/Elu"
  op: "Elu"
  input: "batch_normalization_6/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_6/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_6/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958004
      }
    }
  }
}
node {
  name: "separable_conv2d_6/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958004
      }
    }
  }
}
node {
  name: "separable_conv2d_6/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_6/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8300259
    }
  }
}
node {
  name: "separable_conv2d_6/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_6/random_uniform/max"
  input: "separable_conv2d_6/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_6/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_6/random_uniform/RandomUniform"
  input: "separable_conv2d_6/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_6/random_uniform"
  op: "Add"
  input: "separable_conv2d_6/random_uniform/mul"
  input: "separable_conv2d_6/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_6/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_6/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_6/depthwise_kernel"
  input: "separable_conv2d_6/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_6/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_6/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_6/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_6/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_6/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_6/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "separable_conv2d_6/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "separable_conv2d_6/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_6/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3913813
    }
  }
}
node {
  name: "separable_conv2d_6/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_6/random_uniform_1/max"
  input: "separable_conv2d_6/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_6/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_6/random_uniform_1/RandomUniform"
  input: "separable_conv2d_6/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_6/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_6/random_uniform_1/mul"
  input: "separable_conv2d_6/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_6/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_6/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_6/pointwise_kernel"
  input: "separable_conv2d_6/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_6/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_6/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_6/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_6/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_6/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_6/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_6/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_6/bias"
  input: "separable_conv2d_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_6/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_6/bias/read"
  op: "Identity"
  input: "separable_conv2d_6/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_6/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_6/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_6/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_6/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_6/Elu"
  input: "separable_conv2d_6/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_6/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_6/separable_conv2d/depthwise"
  input: "separable_conv2d_6/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_6/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_6/separable_conv2d"
  input: "separable_conv2d_6/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_7/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_7/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_7/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_7/gamma"
  input: "batch_normalization_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_7/gamma/read"
  op: "Identity"
  input: "batch_normalization_7/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_7/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_7/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_7/beta/Assign"
  op: "Assign"
  input: "batch_normalization_7/beta"
  input: "batch_normalization_7/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_7/beta/read"
  op: "Identity"
  input: "batch_normalization_7/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_7/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_7/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_7/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_7/moving_mean"
  input: "batch_normalization_7/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_7/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_7/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_7/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_7/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_7/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_7/moving_variance"
  input: "batch_normalization_7/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_7/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_7/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_7/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_7/moments/mean"
  op: "Mean"
  input: "separable_conv2d_6/BiasAdd"
  input: "batch_normalization_7/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_7/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_7/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_6/BiasAdd"
  input: "batch_normalization_7/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_7/moments/variance"
  op: "Mean"
  input: "batch_normalization_7/moments/SquaredDifference"
  input: "batch_normalization_7/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_7/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_7/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_7/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_7/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_7/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_7/batchnorm/add"
  op: "Add"
  input: "batch_normalization_7/moments/Squeeze_1"
  input: "batch_normalization_7/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_7/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_7/batchnorm/Rsqrt"
  input: "batch_normalization_7/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_6/BiasAdd"
  input: "batch_normalization_7/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_7/moments/Squeeze"
  input: "batch_normalization_7/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_7/beta/read"
  input: "batch_normalization_7/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_7/batchnorm/mul_1"
  input: "batch_normalization_7/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_7/moving_mean/read"
  input: "batch_normalization_7/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_7/AssignMovingAvg/sub"
  input: "batch_normalization_7/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_7/moving_mean"
  input: "batch_normalization_7/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_7/moving_variance/read"
  input: "batch_normalization_7/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_7/AssignMovingAvg_1/sub"
  input: "batch_normalization_7/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_7/moving_variance"
  input: "batch_normalization_7/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_7/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_7/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_7/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_7/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_7/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_7/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_7/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_7/batchnorm/add_1"
  input: "batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_7/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_7/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_7/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_7/cond/batchnorm/add/Switch"
  input: "batch_normalization_7/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_7/moving_variance/read"
  input: "batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_7/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_7/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_7/cond/batchnorm/Rsqrt"
  input: "batch_normalization_7/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_7/gamma/read"
  input: "batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_7/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_7/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_7/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_6/BiasAdd"
  input: "batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_6/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_7/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_7/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_7/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_7/moving_mean/read"
  input: "batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_7/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_7/cond/batchnorm/sub/Switch"
  input: "batch_normalization_7/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_7/beta/read"
  input: "batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_7/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_7/cond/batchnorm/mul_1"
  input: "batch_normalization_7/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_7/cond/Merge"
  op: "Merge"
  input: "batch_normalization_7/cond/batchnorm/add_1"
  input: "batch_normalization_7/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_7/Elu"
  op: "Elu"
  input: "batch_normalization_7/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_7/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_7/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_7/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_7/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_7/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 534044
    }
  }
}
node {
  name: "separable_conv2d_7/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_7/random_uniform/max"
  input: "separable_conv2d_7/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_7/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_7/random_uniform/RandomUniform"
  input: "separable_conv2d_7/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_7/random_uniform"
  op: "Add"
  input: "separable_conv2d_7/random_uniform/mul"
  input: "separable_conv2d_7/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_7/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_7/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_7/depthwise_kernel"
  input: "separable_conv2d_7/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_7/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_7/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_7/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_7/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_7/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_7/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_7/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_7/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_7/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8367907
    }
  }
}
node {
  name: "separable_conv2d_7/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_7/random_uniform_1/max"
  input: "separable_conv2d_7/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_7/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_7/random_uniform_1/RandomUniform"
  input: "separable_conv2d_7/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_7/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_7/random_uniform_1/mul"
  input: "separable_conv2d_7/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_7/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_7/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_7/pointwise_kernel"
  input: "separable_conv2d_7/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_7/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_7/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_7/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_7/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_7/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_7/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_7/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_7/bias"
  input: "separable_conv2d_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_7/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_7/bias/read"
  op: "Identity"
  input: "separable_conv2d_7/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_7/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_7/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_7/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_7/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_7/Elu"
  input: "separable_conv2d_7/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_7/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_7/separable_conv2d/depthwise"
  input: "separable_conv2d_7/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_7/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_7/separable_conv2d"
  input: "separable_conv2d_7/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_8/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_8/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_8/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_8/gamma"
  input: "batch_normalization_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_8/gamma/read"
  op: "Identity"
  input: "batch_normalization_8/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_8/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_8/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_8/beta/Assign"
  op: "Assign"
  input: "batch_normalization_8/beta"
  input: "batch_normalization_8/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_8/beta/read"
  op: "Identity"
  input: "batch_normalization_8/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_8/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_8/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_8/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_8/moving_mean"
  input: "batch_normalization_8/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_8/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_8/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_8/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_8/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_8/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_8/moving_variance"
  input: "batch_normalization_8/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_8/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_8/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_8/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_8/moments/mean"
  op: "Mean"
  input: "separable_conv2d_7/BiasAdd"
  input: "batch_normalization_8/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_8/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_8/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_7/BiasAdd"
  input: "batch_normalization_8/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_8/moments/variance"
  op: "Mean"
  input: "batch_normalization_8/moments/SquaredDifference"
  input: "batch_normalization_8/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_8/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_8/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_8/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_8/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_8/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_8/batchnorm/add"
  op: "Add"
  input: "batch_normalization_8/moments/Squeeze_1"
  input: "batch_normalization_8/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_8/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_8/batchnorm/Rsqrt"
  input: "batch_normalization_8/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_7/BiasAdd"
  input: "batch_normalization_8/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_8/moments/Squeeze"
  input: "batch_normalization_8/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_8/beta/read"
  input: "batch_normalization_8/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_8/batchnorm/mul_1"
  input: "batch_normalization_8/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_8/moving_mean/read"
  input: "batch_normalization_8/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_8/AssignMovingAvg/sub"
  input: "batch_normalization_8/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_8/moving_mean"
  input: "batch_normalization_8/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_8/moving_variance/read"
  input: "batch_normalization_8/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_8/AssignMovingAvg_1/sub"
  input: "batch_normalization_8/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_8/moving_variance"
  input: "batch_normalization_8/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_8/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_8/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_8/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_8/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_8/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_8/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_8/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_8/batchnorm/add_1"
  input: "batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_8/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_8/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_8/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_8/cond/batchnorm/add/Switch"
  input: "batch_normalization_8/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_8/moving_variance/read"
  input: "batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_8/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_8/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_8/cond/batchnorm/Rsqrt"
  input: "batch_normalization_8/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_8/gamma/read"
  input: "batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_8/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_8/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_8/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_7/BiasAdd"
  input: "batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_7/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_8/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_8/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_8/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_8/moving_mean/read"
  input: "batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_8/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_8/cond/batchnorm/sub/Switch"
  input: "batch_normalization_8/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_8/beta/read"
  input: "batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_8/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_8/cond/batchnorm/mul_1"
  input: "batch_normalization_8/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_8/cond/Merge"
  op: "Merge"
  input: "batch_normalization_8/cond/batchnorm/add_1"
  input: "batch_normalization_8/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_8/Elu"
  op: "Elu"
  input: "batch_normalization_8/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_8/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_8/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_8/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_8/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_8/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 91176
    }
  }
}
node {
  name: "separable_conv2d_8/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_8/random_uniform/max"
  input: "separable_conv2d_8/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_8/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_8/random_uniform/RandomUniform"
  input: "separable_conv2d_8/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_8/random_uniform"
  op: "Add"
  input: "separable_conv2d_8/random_uniform/mul"
  input: "separable_conv2d_8/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_8/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_8/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_8/depthwise_kernel"
  input: "separable_conv2d_8/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_8/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_8/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_8/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_8/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_8/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_8/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_8/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_8/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_8/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1664412
    }
  }
}
node {
  name: "separable_conv2d_8/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_8/random_uniform_1/max"
  input: "separable_conv2d_8/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_8/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_8/random_uniform_1/RandomUniform"
  input: "separable_conv2d_8/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_8/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_8/random_uniform_1/mul"
  input: "separable_conv2d_8/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_8/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_8/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_8/pointwise_kernel"
  input: "separable_conv2d_8/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_8/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_8/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_8/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_8/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_8/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_8/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_8/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_8/bias"
  input: "separable_conv2d_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_8/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_8/bias/read"
  op: "Identity"
  input: "separable_conv2d_8/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_8/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_8/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_8/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_8/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_8/Elu"
  input: "separable_conv2d_8/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_8/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_8/separable_conv2d/depthwise"
  input: "separable_conv2d_8/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_8/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_8/separable_conv2d"
  input: "separable_conv2d_8/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_9/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_9/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_9/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_9/gamma"
  input: "batch_normalization_9/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_9/gamma/read"
  op: "Identity"
  input: "batch_normalization_9/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_9/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_9/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_9/beta/Assign"
  op: "Assign"
  input: "batch_normalization_9/beta"
  input: "batch_normalization_9/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_9/beta/read"
  op: "Identity"
  input: "batch_normalization_9/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_9/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_9/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_9/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_9/moving_mean"
  input: "batch_normalization_9/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_9/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_9/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_9/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_9/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_9/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_9/moving_variance"
  input: "batch_normalization_9/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_9/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_9/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_9/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_9/moments/mean"
  op: "Mean"
  input: "separable_conv2d_8/BiasAdd"
  input: "batch_normalization_9/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_9/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_9/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_8/BiasAdd"
  input: "batch_normalization_9/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_9/moments/variance"
  op: "Mean"
  input: "batch_normalization_9/moments/SquaredDifference"
  input: "batch_normalization_9/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_9/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_9/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_9/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_9/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_9/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_9/batchnorm/add"
  op: "Add"
  input: "batch_normalization_9/moments/Squeeze_1"
  input: "batch_normalization_9/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_9/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_9/batchnorm/Rsqrt"
  input: "batch_normalization_9/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_8/BiasAdd"
  input: "batch_normalization_9/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_9/moments/Squeeze"
  input: "batch_normalization_9/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_9/beta/read"
  input: "batch_normalization_9/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_9/batchnorm/mul_1"
  input: "batch_normalization_9/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_9/moving_mean/read"
  input: "batch_normalization_9/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_9/AssignMovingAvg/sub"
  input: "batch_normalization_9/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_9/moving_mean"
  input: "batch_normalization_9/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_9/moving_variance/read"
  input: "batch_normalization_9/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_9/AssignMovingAvg_1/sub"
  input: "batch_normalization_9/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_9/moving_variance"
  input: "batch_normalization_9/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_9/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_9/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_9/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_9/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_9/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_9/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_9/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_9/batchnorm/add_1"
  input: "batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_9/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_9/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_9/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_9/cond/batchnorm/add/Switch"
  input: "batch_normalization_9/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_9/moving_variance/read"
  input: "batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_9/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_9/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_9/cond/batchnorm/Rsqrt"
  input: "batch_normalization_9/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_9/gamma/read"
  input: "batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_9/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_9/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_9/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_8/BiasAdd"
  input: "batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_8/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_9/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_9/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_9/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_9/moving_mean/read"
  input: "batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_9/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_9/cond/batchnorm/sub/Switch"
  input: "batch_normalization_9/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_9/beta/read"
  input: "batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_9/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_9/cond/batchnorm/mul_1"
  input: "batch_normalization_9/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_9/cond/Merge"
  op: "Merge"
  input: "batch_normalization_9/cond/batchnorm/add_1"
  input: "batch_normalization_9/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_9/Elu"
  op: "Elu"
  input: "batch_normalization_9/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_9/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_9/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_9/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_9/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_9/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2055234
    }
  }
}
node {
  name: "separable_conv2d_9/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_9/random_uniform/max"
  input: "separable_conv2d_9/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_9/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_9/random_uniform/RandomUniform"
  input: "separable_conv2d_9/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_9/random_uniform"
  op: "Add"
  input: "separable_conv2d_9/random_uniform/mul"
  input: "separable_conv2d_9/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_9/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_9/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_9/depthwise_kernel"
  input: "separable_conv2d_9/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_9/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_9/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_9/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_9/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_9/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_9/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_9/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_9/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_9/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4669031
    }
  }
}
node {
  name: "separable_conv2d_9/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_9/random_uniform_1/max"
  input: "separable_conv2d_9/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_9/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_9/random_uniform_1/RandomUniform"
  input: "separable_conv2d_9/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_9/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_9/random_uniform_1/mul"
  input: "separable_conv2d_9/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_9/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_9/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_9/pointwise_kernel"
  input: "separable_conv2d_9/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_9/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_9/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_9/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_9/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_9/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_9/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_9/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_9/bias"
  input: "separable_conv2d_9/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_9/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_9/bias/read"
  op: "Identity"
  input: "separable_conv2d_9/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_9/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_9/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_9/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_9/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_9/Elu"
  input: "separable_conv2d_9/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_9/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_9/separable_conv2d/depthwise"
  input: "separable_conv2d_9/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_9/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_9/separable_conv2d"
  input: "separable_conv2d_9/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_10/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_10/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_10/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_10/gamma"
  input: "batch_normalization_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_10/gamma/read"
  op: "Identity"
  input: "batch_normalization_10/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_10/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_10/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_10/beta/Assign"
  op: "Assign"
  input: "batch_normalization_10/beta"
  input: "batch_normalization_10/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_10/beta/read"
  op: "Identity"
  input: "batch_normalization_10/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_10/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_10/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_10/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_10/moving_mean"
  input: "batch_normalization_10/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_10/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_10/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_10/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_10/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_10/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_10/moving_variance"
  input: "batch_normalization_10/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_10/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_10/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_10/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_10/moments/mean"
  op: "Mean"
  input: "separable_conv2d_9/BiasAdd"
  input: "batch_normalization_10/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_10/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_10/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_9/BiasAdd"
  input: "batch_normalization_10/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_10/moments/variance"
  op: "Mean"
  input: "batch_normalization_10/moments/SquaredDifference"
  input: "batch_normalization_10/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_10/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_10/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_10/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_10/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_10/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_10/batchnorm/add"
  op: "Add"
  input: "batch_normalization_10/moments/Squeeze_1"
  input: "batch_normalization_10/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_10/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_10/batchnorm/Rsqrt"
  input: "batch_normalization_10/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_9/BiasAdd"
  input: "batch_normalization_10/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_10/moments/Squeeze"
  input: "batch_normalization_10/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_10/beta/read"
  input: "batch_normalization_10/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_10/batchnorm/mul_1"
  input: "batch_normalization_10/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_10/moving_mean/read"
  input: "batch_normalization_10/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_10/AssignMovingAvg/sub"
  input: "batch_normalization_10/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_10/moving_mean"
  input: "batch_normalization_10/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_10/moving_variance/read"
  input: "batch_normalization_10/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_10/AssignMovingAvg_1/sub"
  input: "batch_normalization_10/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_10/moving_variance"
  input: "batch_normalization_10/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_10/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_10/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_10/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_10/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_10/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_10/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_10/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_10/batchnorm/add_1"
  input: "batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_10/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_10/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_10/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_10/cond/batchnorm/add/Switch"
  input: "batch_normalization_10/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_10/moving_variance/read"
  input: "batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_10/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_10/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_10/cond/batchnorm/Rsqrt"
  input: "batch_normalization_10/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_10/gamma/read"
  input: "batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_10/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_10/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_10/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_9/BiasAdd"
  input: "batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_9/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_10/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_10/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_10/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_10/moving_mean/read"
  input: "batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_10/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_10/cond/batchnorm/sub/Switch"
  input: "batch_normalization_10/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_10/beta/read"
  input: "batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_10/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_10/cond/batchnorm/mul_1"
  input: "batch_normalization_10/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_10/cond/Merge"
  op: "Merge"
  input: "batch_normalization_10/cond/batchnorm/add_1"
  input: "batch_normalization_10/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_10/Elu"
  op: "Elu"
  input: "batch_normalization_10/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_10/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_10/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_10/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_10/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_10/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8368793
    }
  }
}
node {
  name: "separable_conv2d_10/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_10/random_uniform/max"
  input: "separable_conv2d_10/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_10/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_10/random_uniform/RandomUniform"
  input: "separable_conv2d_10/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_10/random_uniform"
  op: "Add"
  input: "separable_conv2d_10/random_uniform/mul"
  input: "separable_conv2d_10/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_10/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_10/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_10/depthwise_kernel"
  input: "separable_conv2d_10/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_10/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_10/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_10/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_10/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_10/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_10/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_10/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_10/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_10/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3468322
    }
  }
}
node {
  name: "separable_conv2d_10/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_10/random_uniform_1/max"
  input: "separable_conv2d_10/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_10/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_10/random_uniform_1/RandomUniform"
  input: "separable_conv2d_10/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_10/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_10/random_uniform_1/mul"
  input: "separable_conv2d_10/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_10/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_10/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_10/pointwise_kernel"
  input: "separable_conv2d_10/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_10/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_10/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_10/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_10/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_10/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_10/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_10/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_10/bias"
  input: "separable_conv2d_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_10/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_10/bias/read"
  op: "Identity"
  input: "separable_conv2d_10/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_10/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_10/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_10/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_10/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_10/Elu"
  input: "separable_conv2d_10/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_10/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_10/separable_conv2d/depthwise"
  input: "separable_conv2d_10/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_10/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_10/separable_conv2d"
  input: "separable_conv2d_10/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_11/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_11/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_11/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_11/gamma"
  input: "batch_normalization_11/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_11/gamma/read"
  op: "Identity"
  input: "batch_normalization_11/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_11/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_11/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_11/beta/Assign"
  op: "Assign"
  input: "batch_normalization_11/beta"
  input: "batch_normalization_11/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_11/beta/read"
  op: "Identity"
  input: "batch_normalization_11/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_11/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_11/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_11/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_11/moving_mean"
  input: "batch_normalization_11/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_11/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_11/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_11/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_11/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_11/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_11/moving_variance"
  input: "batch_normalization_11/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_11/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_11/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_11/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_11/moments/mean"
  op: "Mean"
  input: "separable_conv2d_10/BiasAdd"
  input: "batch_normalization_11/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_11/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_11/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_10/BiasAdd"
  input: "batch_normalization_11/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_11/moments/variance"
  op: "Mean"
  input: "batch_normalization_11/moments/SquaredDifference"
  input: "batch_normalization_11/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_11/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_11/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_11/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_11/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_11/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_11/batchnorm/add"
  op: "Add"
  input: "batch_normalization_11/moments/Squeeze_1"
  input: "batch_normalization_11/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_11/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_11/batchnorm/Rsqrt"
  input: "batch_normalization_11/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_10/BiasAdd"
  input: "batch_normalization_11/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_11/moments/Squeeze"
  input: "batch_normalization_11/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_11/beta/read"
  input: "batch_normalization_11/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_11/batchnorm/mul_1"
  input: "batch_normalization_11/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_11/moving_mean/read"
  input: "batch_normalization_11/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_11/AssignMovingAvg/sub"
  input: "batch_normalization_11/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_11/moving_mean"
  input: "batch_normalization_11/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_11/moving_variance/read"
  input: "batch_normalization_11/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_11/AssignMovingAvg_1/sub"
  input: "batch_normalization_11/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_11/moving_variance"
  input: "batch_normalization_11/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_11/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_11/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_11/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_11/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_11/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_11/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_11/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_11/batchnorm/add_1"
  input: "batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_11/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_11/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_11/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_11/cond/batchnorm/add/Switch"
  input: "batch_normalization_11/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_11/moving_variance/read"
  input: "batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_11/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_11/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_11/cond/batchnorm/Rsqrt"
  input: "batch_normalization_11/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_11/gamma/read"
  input: "batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_11/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_11/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_11/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_10/BiasAdd"
  input: "batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_10/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_11/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_11/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_11/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_11/moving_mean/read"
  input: "batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_11/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_11/cond/batchnorm/sub/Switch"
  input: "batch_normalization_11/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_11/beta/read"
  input: "batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_11/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_11/cond/batchnorm/mul_1"
  input: "batch_normalization_11/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_11/cond/Merge"
  op: "Merge"
  input: "batch_normalization_11/cond/batchnorm/add_1"
  input: "batch_normalization_11/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_11/Elu"
  op: "Elu"
  input: "batch_normalization_11/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_11/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_11/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_11/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_11/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_11/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4663902
    }
  }
}
node {
  name: "separable_conv2d_11/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_11/random_uniform/max"
  input: "separable_conv2d_11/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_11/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_11/random_uniform/RandomUniform"
  input: "separable_conv2d_11/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_11/random_uniform"
  op: "Add"
  input: "separable_conv2d_11/random_uniform/mul"
  input: "separable_conv2d_11/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_11/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_11/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_11/depthwise_kernel"
  input: "separable_conv2d_11/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_11/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_11/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_11/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_11/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_11/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_11/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_11/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_11/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_11/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 151563
    }
  }
}
node {
  name: "separable_conv2d_11/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_11/random_uniform_1/max"
  input: "separable_conv2d_11/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_11/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_11/random_uniform_1/RandomUniform"
  input: "separable_conv2d_11/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_11/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_11/random_uniform_1/mul"
  input: "separable_conv2d_11/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_11/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_11/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_11/pointwise_kernel"
  input: "separable_conv2d_11/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_11/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_11/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_11/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_11/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_11/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_11/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_11/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_11/bias"
  input: "separable_conv2d_11/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_11/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_11/bias/read"
  op: "Identity"
  input: "separable_conv2d_11/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_11/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_11/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_11/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_11/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_11/Elu"
  input: "separable_conv2d_11/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_11/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_11/separable_conv2d/depthwise"
  input: "separable_conv2d_11/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_11/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_11/separable_conv2d"
  input: "separable_conv2d_11/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_12/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_12/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_12/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_12/gamma"
  input: "batch_normalization_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_12/gamma/read"
  op: "Identity"
  input: "batch_normalization_12/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_12/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_12/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_12/beta/Assign"
  op: "Assign"
  input: "batch_normalization_12/beta"
  input: "batch_normalization_12/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_12/beta/read"
  op: "Identity"
  input: "batch_normalization_12/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_12/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_12/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_12/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_12/moving_mean"
  input: "batch_normalization_12/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_12/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_12/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_12/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_12/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_12/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_12/moving_variance"
  input: "batch_normalization_12/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_12/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_12/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_12/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_12/moments/mean"
  op: "Mean"
  input: "separable_conv2d_11/BiasAdd"
  input: "batch_normalization_12/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_12/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_12/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_11/BiasAdd"
  input: "batch_normalization_12/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_12/moments/variance"
  op: "Mean"
  input: "batch_normalization_12/moments/SquaredDifference"
  input: "batch_normalization_12/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_12/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_12/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_12/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_12/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_12/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_12/batchnorm/add"
  op: "Add"
  input: "batch_normalization_12/moments/Squeeze_1"
  input: "batch_normalization_12/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_12/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_12/batchnorm/Rsqrt"
  input: "batch_normalization_12/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_11/BiasAdd"
  input: "batch_normalization_12/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_12/moments/Squeeze"
  input: "batch_normalization_12/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_12/beta/read"
  input: "batch_normalization_12/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_12/batchnorm/mul_1"
  input: "batch_normalization_12/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_12/moving_mean/read"
  input: "batch_normalization_12/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_12/AssignMovingAvg/sub"
  input: "batch_normalization_12/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_12/moving_mean"
  input: "batch_normalization_12/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_12/moving_variance/read"
  input: "batch_normalization_12/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_12/AssignMovingAvg_1/sub"
  input: "batch_normalization_12/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_12/moving_variance"
  input: "batch_normalization_12/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_12/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_12/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_12/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_12/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_12/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_12/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_12/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_12/batchnorm/add_1"
  input: "batch_normalization_12/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_12/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_12/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_12/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_12/cond/batchnorm/add/Switch"
  input: "batch_normalization_12/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_12/moving_variance/read"
  input: "batch_normalization_12/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_12/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_12/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_12/cond/batchnorm/Rsqrt"
  input: "batch_normalization_12/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_12/gamma/read"
  input: "batch_normalization_12/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_12/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_12/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_12/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_11/BiasAdd"
  input: "batch_normalization_12/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_11/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_12/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_12/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_12/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_12/moving_mean/read"
  input: "batch_normalization_12/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_12/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_12/cond/batchnorm/sub/Switch"
  input: "batch_normalization_12/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_12/beta/read"
  input: "batch_normalization_12/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_12/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_12/cond/batchnorm/mul_1"
  input: "batch_normalization_12/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_12/cond/Merge"
  op: "Merge"
  input: "batch_normalization_12/cond/batchnorm/add_1"
  input: "batch_normalization_12/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_12/Elu"
  op: "Elu"
  input: "batch_normalization_12/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_12/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_12/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_12/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_12/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_12/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9478895
    }
  }
}
node {
  name: "separable_conv2d_12/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_12/random_uniform/max"
  input: "separable_conv2d_12/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_12/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_12/random_uniform/RandomUniform"
  input: "separable_conv2d_12/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_12/random_uniform"
  op: "Add"
  input: "separable_conv2d_12/random_uniform/mul"
  input: "separable_conv2d_12/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_12/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_12/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_12/depthwise_kernel"
  input: "separable_conv2d_12/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_12/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_12/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_12/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_12/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_12/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_12/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0625
      }
    }
  }
}
node {
  name: "separable_conv2d_12/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "separable_conv2d_12/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_12/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8661688
    }
  }
}
node {
  name: "separable_conv2d_12/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_12/random_uniform_1/max"
  input: "separable_conv2d_12/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_12/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_12/random_uniform_1/RandomUniform"
  input: "separable_conv2d_12/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_12/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_12/random_uniform_1/mul"
  input: "separable_conv2d_12/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_12/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_12/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_12/pointwise_kernel"
  input: "separable_conv2d_12/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_12/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_12/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_12/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_12/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_12/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_12/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_12/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_12/bias"
  input: "separable_conv2d_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_12/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_12/bias/read"
  op: "Identity"
  input: "separable_conv2d_12/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_12/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_12/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_12/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_12/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_12/Elu"
  input: "separable_conv2d_12/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_12/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_12/separable_conv2d/depthwise"
  input: "separable_conv2d_12/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_12/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_12/separable_conv2d"
  input: "separable_conv2d_12/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_13/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_13/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_13/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_13/gamma"
  input: "batch_normalization_13/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_13/gamma/read"
  op: "Identity"
  input: "batch_normalization_13/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_13/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_13/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_13/beta/Assign"
  op: "Assign"
  input: "batch_normalization_13/beta"
  input: "batch_normalization_13/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_13/beta/read"
  op: "Identity"
  input: "batch_normalization_13/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_13/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_13/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_13/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_13/moving_mean"
  input: "batch_normalization_13/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_13/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_13/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_13/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_13/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_13/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_13/moving_variance"
  input: "batch_normalization_13/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_13/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_13/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_13/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_13/moments/mean"
  op: "Mean"
  input: "separable_conv2d_12/BiasAdd"
  input: "batch_normalization_13/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_13/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_13/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_12/BiasAdd"
  input: "batch_normalization_13/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_13/moments/variance"
  op: "Mean"
  input: "batch_normalization_13/moments/SquaredDifference"
  input: "batch_normalization_13/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_13/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_13/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_13/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_13/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_13/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_13/batchnorm/add"
  op: "Add"
  input: "batch_normalization_13/moments/Squeeze_1"
  input: "batch_normalization_13/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_13/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_13/batchnorm/Rsqrt"
  input: "batch_normalization_13/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_12/BiasAdd"
  input: "batch_normalization_13/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_13/moments/Squeeze"
  input: "batch_normalization_13/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_13/beta/read"
  input: "batch_normalization_13/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_13/batchnorm/mul_1"
  input: "batch_normalization_13/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_13/moving_mean/read"
  input: "batch_normalization_13/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_13/AssignMovingAvg/sub"
  input: "batch_normalization_13/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_13/moving_mean"
  input: "batch_normalization_13/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_13/moving_variance/read"
  input: "batch_normalization_13/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_13/AssignMovingAvg_1/sub"
  input: "batch_normalization_13/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_13/moving_variance"
  input: "batch_normalization_13/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_13/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_13/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_13/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_13/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_13/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_13/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_13/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_13/batchnorm/add_1"
  input: "batch_normalization_13/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_13/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_13/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_13/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_13/cond/batchnorm/add/Switch"
  input: "batch_normalization_13/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_13/moving_variance/read"
  input: "batch_normalization_13/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_13/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_13/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_13/cond/batchnorm/Rsqrt"
  input: "batch_normalization_13/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_13/gamma/read"
  input: "batch_normalization_13/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_13/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_13/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_13/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_12/BiasAdd"
  input: "batch_normalization_13/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_12/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_13/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_13/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_13/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_13/moving_mean/read"
  input: "batch_normalization_13/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_13/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_13/cond/batchnorm/sub/Switch"
  input: "batch_normalization_13/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_13/beta/read"
  input: "batch_normalization_13/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_13/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_13/cond/batchnorm/mul_1"
  input: "batch_normalization_13/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_13/cond/Merge"
  op: "Merge"
  input: "batch_normalization_13/cond/batchnorm/add_1"
  input: "batch_normalization_13/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_13/Elu"
  op: "Elu"
  input: "batch_normalization_13/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_average_pooling2d_1/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "global_average_pooling2d_1/Mean"
  op: "Mean"
  input: "activation_13/Elu"
  input: "global_average_pooling2d_1/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_1/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_1/cond/switch_t"
  op: "Identity"
  input: "dropout_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_1/cond/switch_f"
  op: "Identity"
  input: "dropout_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_1/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_1/cond/mul/y"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/cond/mul"
  op: "Mul"
  input: "dropout_1/cond/mul/Switch:1"
  input: "dropout_1/cond/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/cond/mul/Switch"
  op: "Switch"
  input: "global_average_pooling2d_1/Mean"
  input: "dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/keep_prob"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.75
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_1/cond/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_1/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4027560
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_1/cond/dropout/random_uniform/max"
  input: "dropout_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_1/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_1/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_1/cond/dropout/random_uniform/mul"
  input: "dropout_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/cond/dropout/add"
  op: "Add"
  input: "dropout_1/cond/dropout/keep_prob"
  input: "dropout_1/cond/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/cond/dropout/Floor"
  op: "Floor"
  input: "dropout_1/cond/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/cond/dropout/div"
  op: "RealDiv"
  input: "dropout_1/cond/mul"
  input: "dropout_1/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/cond/dropout/mul"
  op: "Mul"
  input: "dropout_1/cond/dropout/div"
  input: "dropout_1/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/cond/Switch_1"
  op: "Switch"
  input: "global_average_pooling2d_1/Mean"
  input: "dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "dropout_1/cond/Merge"
  op: "Merge"
  input: "dropout_1/cond/Switch_1"
  input: "dropout_1/cond/dropout/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "dense_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0761755108833313
      }
    }
  }
}
node {
  name: "dense_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0761755108833313
      }
    }
  }
}
node {
  name: "dense_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3849132
    }
  }
}
node {
  name: "dense_1/random_uniform/sub"
  op: "Sub"
  input: "dense_1/random_uniform/max"
  input: "dense_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/random_uniform/mul"
  op: "Mul"
  input: "dense_1/random_uniform/RandomUniform"
  input: "dense_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/random_uniform"
  op: "Add"
  input: "dense_1/random_uniform/mul"
  input: "dense_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense_1/kernel/Assign"
  op: "Assign"
  input: "dense_1/kernel"
  input: "dense_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense_1/kernel/read"
  op: "Identity"
  input: "dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
}
node {
  name: "dense_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense_1/bias/Assign"
  op: "Assign"
  input: "dense_1/bias"
  input: "dense_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense_1/bias/read"
  op: "Identity"
  input: "dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
}
node {
  name: "dense_1/MatMul"
  op: "MatMul"
  input: "dropout_1/cond/Merge"
  input: "dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_1/BiasAdd"
  op: "BiasAdd"
  input: "dense_1/MatMul"
  input: "dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_1/Softmax"
  op: "Softmax"
  input: "dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_2_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 224
        }
        dim {
          size: 224
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "conv2d_2/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_2/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "conv2d_2/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "conv2d_2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_2/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1340452
    }
  }
}
node {
  name: "conv2d_2/random_uniform/sub"
  op: "Sub"
  input: "conv2d_2/random_uniform/max"
  input: "conv2d_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_2/random_uniform/mul"
  op: "Mul"
  input: "conv2d_2/random_uniform/RandomUniform"
  input: "conv2d_2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_2/random_uniform"
  op: "Add"
  input: "conv2d_2/random_uniform/mul"
  input: "conv2d_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_2/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_2/kernel/Assign"
  op: "Assign"
  input: "conv2d_2/kernel"
  input: "conv2d_2/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_2/kernel/read"
  op: "Identity"
  input: "conv2d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
}
node {
  name: "conv2d_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_2/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_2/bias/Assign"
  op: "Assign"
  input: "conv2d_2/bias"
  input: "conv2d_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_2/bias/read"
  op: "Identity"
  input: "conv2d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/bias"
      }
    }
  }
}
node {
  name: "conv2d_2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_2/convolution"
  op: "Conv2D"
  input: "conv2d_2_input"
  input: "conv2d_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_2/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_2/convolution"
  input: "conv2d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_14/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_14/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_14/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_14/gamma"
  input: "batch_normalization_14/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_14/gamma/read"
  op: "Identity"
  input: "batch_normalization_14/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_14/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_14/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_14/beta/Assign"
  op: "Assign"
  input: "batch_normalization_14/beta"
  input: "batch_normalization_14/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_14/beta/read"
  op: "Identity"
  input: "batch_normalization_14/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_14/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_14/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_14/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_14/moving_mean"
  input: "batch_normalization_14/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_14/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_14/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_14/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_14/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_14/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_14/moving_variance"
  input: "batch_normalization_14/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_14/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_14/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_14/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_14/moments/mean"
  op: "Mean"
  input: "conv2d_2/BiasAdd"
  input: "batch_normalization_14/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_14/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_14/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "conv2d_2/BiasAdd"
  input: "batch_normalization_14/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_14/moments/variance"
  op: "Mean"
  input: "batch_normalization_14/moments/SquaredDifference"
  input: "batch_normalization_14/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_14/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_14/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_14/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_14/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_14/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_14/batchnorm/add"
  op: "Add"
  input: "batch_normalization_14/moments/Squeeze_1"
  input: "batch_normalization_14/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_14/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_14/batchnorm/Rsqrt"
  input: "batch_normalization_14/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/batchnorm/mul_1"
  op: "Mul"
  input: "conv2d_2/BiasAdd"
  input: "batch_normalization_14/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_14/moments/Squeeze"
  input: "batch_normalization_14/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_14/beta/read"
  input: "batch_normalization_14/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_14/batchnorm/mul_1"
  input: "batch_normalization_14/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_14/moving_mean/read"
  input: "batch_normalization_14/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_14/AssignMovingAvg/sub"
  input: "batch_normalization_14/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_14/moving_mean"
  input: "batch_normalization_14/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_14/moving_variance/read"
  input: "batch_normalization_14/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_14/AssignMovingAvg_1/sub"
  input: "batch_normalization_14/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_14/moving_variance"
  input: "batch_normalization_14/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_14/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_14/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_14/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_14/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_14/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_14/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_14/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_14/batchnorm/add_1"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_14/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_14/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_14/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_14/cond/batchnorm/add/Switch"
  input: "batch_normalization_14/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_14/moving_variance/read"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_14/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_14/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_14/cond/batchnorm/Rsqrt"
  input: "batch_normalization_14/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_14/gamma/read"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_14/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_14/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_14/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv2d_2/BiasAdd"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_14/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_14/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_14/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_14/moving_mean/read"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_14/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_14/cond/batchnorm/sub/Switch"
  input: "batch_normalization_14/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_14/beta/read"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_14/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_14/cond/batchnorm/mul_1"
  input: "batch_normalization_14/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_14/cond/Merge"
  op: "Merge"
  input: "batch_normalization_14/cond/batchnorm/add_1"
  input: "batch_normalization_14/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_14/Elu"
  op: "Elu"
  input: "batch_normalization_14/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "max_pooling2d_3/MaxPool"
  op: "MaxPool"
  input: "activation_14/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_13/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_13/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "separable_conv2d_13/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "separable_conv2d_13/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_13/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5394579
    }
  }
}
node {
  name: "separable_conv2d_13/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_13/random_uniform/max"
  input: "separable_conv2d_13/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_13/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_13/random_uniform/RandomUniform"
  input: "separable_conv2d_13/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_13/random_uniform"
  op: "Add"
  input: "separable_conv2d_13/random_uniform/mul"
  input: "separable_conv2d_13/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_13/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_13/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_13/depthwise_kernel"
  input: "separable_conv2d_13/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_13/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_13/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_13/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_13/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "separable_conv2d_13/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "separable_conv2d_13/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_13/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9569309
    }
  }
}
node {
  name: "separable_conv2d_13/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_13/random_uniform_1/max"
  input: "separable_conv2d_13/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_13/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_13/random_uniform_1/RandomUniform"
  input: "separable_conv2d_13/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_13/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_13/random_uniform_1/mul"
  input: "separable_conv2d_13/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_13/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_13/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_13/pointwise_kernel"
  input: "separable_conv2d_13/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_13/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_13/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_13/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_13/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_13/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_13/bias"
  input: "separable_conv2d_13/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_13/bias/read"
  op: "Identity"
  input: "separable_conv2d_13/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_13/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_13/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_13/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "max_pooling2d_3/MaxPool"
  input: "separable_conv2d_13/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_13/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_13/separable_conv2d/depthwise"
  input: "separable_conv2d_13/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_13/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_13/separable_conv2d"
  input: "separable_conv2d_13/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_15/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_15/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_15/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_15/gamma"
  input: "batch_normalization_15/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_15/gamma/read"
  op: "Identity"
  input: "batch_normalization_15/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_15/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_15/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_15/beta/Assign"
  op: "Assign"
  input: "batch_normalization_15/beta"
  input: "batch_normalization_15/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_15/beta/read"
  op: "Identity"
  input: "batch_normalization_15/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_15/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_15/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_15/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_15/moving_mean"
  input: "batch_normalization_15/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_15/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_15/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_15/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_15/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_15/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_15/moving_variance"
  input: "batch_normalization_15/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_15/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_15/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_15/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_15/moments/mean"
  op: "Mean"
  input: "separable_conv2d_13/BiasAdd"
  input: "batch_normalization_15/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_15/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_15/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_13/BiasAdd"
  input: "batch_normalization_15/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_15/moments/variance"
  op: "Mean"
  input: "batch_normalization_15/moments/SquaredDifference"
  input: "batch_normalization_15/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_15/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_15/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_15/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_15/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_15/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_15/batchnorm/add"
  op: "Add"
  input: "batch_normalization_15/moments/Squeeze_1"
  input: "batch_normalization_15/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_15/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_15/batchnorm/Rsqrt"
  input: "batch_normalization_15/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_13/BiasAdd"
  input: "batch_normalization_15/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_15/moments/Squeeze"
  input: "batch_normalization_15/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_15/beta/read"
  input: "batch_normalization_15/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_15/batchnorm/mul_1"
  input: "batch_normalization_15/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_15/moving_mean/read"
  input: "batch_normalization_15/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_15/AssignMovingAvg/sub"
  input: "batch_normalization_15/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_15/moving_mean"
  input: "batch_normalization_15/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_15/moving_variance/read"
  input: "batch_normalization_15/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_15/AssignMovingAvg_1/sub"
  input: "batch_normalization_15/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_15/moving_variance"
  input: "batch_normalization_15/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_15/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_15/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_15/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_15/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_15/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_15/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_15/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_15/batchnorm/add_1"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_15/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_15/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_15/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_15/cond/batchnorm/add/Switch"
  input: "batch_normalization_15/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_15/moving_variance/read"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_15/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_15/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_15/cond/batchnorm/Rsqrt"
  input: "batch_normalization_15/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_15/gamma/read"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_15/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_15/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_15/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_13/BiasAdd"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_15/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_15/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_15/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_15/moving_mean/read"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_15/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_15/cond/batchnorm/sub/Switch"
  input: "batch_normalization_15/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_15/beta/read"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_15/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_15/cond/batchnorm/mul_1"
  input: "batch_normalization_15/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_15/cond/Merge"
  op: "Merge"
  input: "batch_normalization_15/cond/batchnorm/add_1"
  input: "batch_normalization_15/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_15/Elu"
  op: "Elu"
  input: "batch_normalization_15/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "max_pooling2d_4/MaxPool"
  op: "MaxPool"
  input: "activation_15/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_14/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_14/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "separable_conv2d_14/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "separable_conv2d_14/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_14/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2787329
    }
  }
}
node {
  name: "separable_conv2d_14/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_14/random_uniform/max"
  input: "separable_conv2d_14/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_14/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_14/random_uniform/RandomUniform"
  input: "separable_conv2d_14/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_14/random_uniform"
  op: "Add"
  input: "separable_conv2d_14/random_uniform/mul"
  input: "separable_conv2d_14/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_14/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_14/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_14/depthwise_kernel"
  input: "separable_conv2d_14/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_14/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_14/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_14/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_14/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1767766922712326
      }
    }
  }
}
node {
  name: "separable_conv2d_14/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "separable_conv2d_14/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_14/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2466290
    }
  }
}
node {
  name: "separable_conv2d_14/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_14/random_uniform_1/max"
  input: "separable_conv2d_14/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_14/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_14/random_uniform_1/RandomUniform"
  input: "separable_conv2d_14/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_14/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_14/random_uniform_1/mul"
  input: "separable_conv2d_14/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_14/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_14/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_14/pointwise_kernel"
  input: "separable_conv2d_14/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_14/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_14/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_14/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_14/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_14/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_14/bias"
  input: "separable_conv2d_14/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_14/bias/read"
  op: "Identity"
  input: "separable_conv2d_14/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_14/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_14/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_14/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "max_pooling2d_4/MaxPool"
  input: "separable_conv2d_14/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_14/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_14/separable_conv2d/depthwise"
  input: "separable_conv2d_14/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_14/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_14/separable_conv2d"
  input: "separable_conv2d_14/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_16/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_16/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_16/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_16/gamma"
  input: "batch_normalization_16/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_16/gamma/read"
  op: "Identity"
  input: "batch_normalization_16/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_16/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_16/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_16/beta/Assign"
  op: "Assign"
  input: "batch_normalization_16/beta"
  input: "batch_normalization_16/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_16/beta/read"
  op: "Identity"
  input: "batch_normalization_16/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_16/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_16/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_16/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_16/moving_mean"
  input: "batch_normalization_16/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_16/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_16/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_16/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_16/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_16/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_16/moving_variance"
  input: "batch_normalization_16/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_16/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_16/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_16/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_16/moments/mean"
  op: "Mean"
  input: "separable_conv2d_14/BiasAdd"
  input: "batch_normalization_16/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_16/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_16/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_14/BiasAdd"
  input: "batch_normalization_16/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_16/moments/variance"
  op: "Mean"
  input: "batch_normalization_16/moments/SquaredDifference"
  input: "batch_normalization_16/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_16/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_16/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_16/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_16/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_16/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_16/batchnorm/add"
  op: "Add"
  input: "batch_normalization_16/moments/Squeeze_1"
  input: "batch_normalization_16/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_16/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_16/batchnorm/Rsqrt"
  input: "batch_normalization_16/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_14/BiasAdd"
  input: "batch_normalization_16/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_16/moments/Squeeze"
  input: "batch_normalization_16/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_16/beta/read"
  input: "batch_normalization_16/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_16/batchnorm/mul_1"
  input: "batch_normalization_16/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_16/moving_mean/read"
  input: "batch_normalization_16/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_16/AssignMovingAvg/sub"
  input: "batch_normalization_16/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_16/moving_mean"
  input: "batch_normalization_16/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_16/moving_variance/read"
  input: "batch_normalization_16/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_16/AssignMovingAvg_1/sub"
  input: "batch_normalization_16/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_16/moving_variance"
  input: "batch_normalization_16/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_16/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_16/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_16/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_16/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_16/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_16/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_16/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_16/batchnorm/add_1"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_16/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_16/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_16/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_16/cond/batchnorm/add/Switch"
  input: "batch_normalization_16/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_16/moving_variance/read"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_16/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_16/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_16/cond/batchnorm/Rsqrt"
  input: "batch_normalization_16/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_16/gamma/read"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_16/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_16/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_16/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_14/BiasAdd"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_16/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_16/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_16/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_16/moving_mean/read"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_16/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_16/cond/batchnorm/sub/Switch"
  input: "batch_normalization_16/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_16/beta/read"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_16/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_16/cond/batchnorm/mul_1"
  input: "batch_normalization_16/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_16/cond/Merge"
  op: "Merge"
  input: "batch_normalization_16/cond/batchnorm/add_1"
  input: "batch_normalization_16/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_16/Elu"
  op: "Elu"
  input: "batch_normalization_16/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_15/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_15/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0718885138630867
      }
    }
  }
}
node {
  name: "separable_conv2d_15/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0718885138630867
      }
    }
  }
}
node {
  name: "separable_conv2d_15/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_15/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6173738
    }
  }
}
node {
  name: "separable_conv2d_15/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_15/random_uniform/max"
  input: "separable_conv2d_15/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_15/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_15/random_uniform/RandomUniform"
  input: "separable_conv2d_15/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_15/random_uniform"
  op: "Add"
  input: "separable_conv2d_15/random_uniform/mul"
  input: "separable_conv2d_15/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_15/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_15/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_15/depthwise_kernel"
  input: "separable_conv2d_15/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_15/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_15/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_15/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_15/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "separable_conv2d_15/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "separable_conv2d_15/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_15/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1459664
    }
  }
}
node {
  name: "separable_conv2d_15/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_15/random_uniform_1/max"
  input: "separable_conv2d_15/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_15/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_15/random_uniform_1/RandomUniform"
  input: "separable_conv2d_15/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_15/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_15/random_uniform_1/mul"
  input: "separable_conv2d_15/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_15/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_15/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_15/pointwise_kernel"
  input: "separable_conv2d_15/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_15/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_15/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_15/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_15/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_15/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_15/bias"
  input: "separable_conv2d_15/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_15/bias/read"
  op: "Identity"
  input: "separable_conv2d_15/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_15/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_15/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_15/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_16/Elu"
  input: "separable_conv2d_15/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_15/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_15/separable_conv2d/depthwise"
  input: "separable_conv2d_15/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_15/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_15/separable_conv2d"
  input: "separable_conv2d_15/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_17/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_17/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_17/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_17/gamma"
  input: "batch_normalization_17/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_17/gamma/read"
  op: "Identity"
  input: "batch_normalization_17/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_17/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_17/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_17/beta/Assign"
  op: "Assign"
  input: "batch_normalization_17/beta"
  input: "batch_normalization_17/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_17/beta/read"
  op: "Identity"
  input: "batch_normalization_17/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_17/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_17/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_17/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_17/moving_mean"
  input: "batch_normalization_17/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_17/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_17/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_17/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_17/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_17/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_17/moving_variance"
  input: "batch_normalization_17/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_17/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_17/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_17/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_17/moments/mean"
  op: "Mean"
  input: "separable_conv2d_15/BiasAdd"
  input: "batch_normalization_17/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_17/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_17/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_15/BiasAdd"
  input: "batch_normalization_17/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_17/moments/variance"
  op: "Mean"
  input: "batch_normalization_17/moments/SquaredDifference"
  input: "batch_normalization_17/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_17/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_17/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_17/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_17/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_17/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_17/batchnorm/add"
  op: "Add"
  input: "batch_normalization_17/moments/Squeeze_1"
  input: "batch_normalization_17/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_17/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_17/batchnorm/Rsqrt"
  input: "batch_normalization_17/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_15/BiasAdd"
  input: "batch_normalization_17/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_17/moments/Squeeze"
  input: "batch_normalization_17/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_17/beta/read"
  input: "batch_normalization_17/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_17/batchnorm/mul_1"
  input: "batch_normalization_17/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_17/moving_mean/read"
  input: "batch_normalization_17/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_17/AssignMovingAvg/sub"
  input: "batch_normalization_17/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_17/moving_mean"
  input: "batch_normalization_17/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_17/moving_variance/read"
  input: "batch_normalization_17/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_17/AssignMovingAvg_1/sub"
  input: "batch_normalization_17/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_17/moving_variance"
  input: "batch_normalization_17/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_17/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_17/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_17/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_17/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_17/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_17/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_17/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_17/batchnorm/add_1"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_17/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_17/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_17/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_17/cond/batchnorm/add/Switch"
  input: "batch_normalization_17/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_17/moving_variance/read"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_17/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_17/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_17/cond/batchnorm/Rsqrt"
  input: "batch_normalization_17/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_17/gamma/read"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_17/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_17/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_17/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_15/BiasAdd"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_17/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_17/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_17/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_17/moving_mean/read"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_17/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_17/cond/batchnorm/sub/Switch"
  input: "batch_normalization_17/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_17/beta/read"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_17/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_17/cond/batchnorm/mul_1"
  input: "batch_normalization_17/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_17/cond/Merge"
  op: "Merge"
  input: "batch_normalization_17/cond/batchnorm/add_1"
  input: "batch_normalization_17/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_17/Elu"
  op: "Elu"
  input: "batch_normalization_17/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_16/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_16/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0718885138630867
      }
    }
  }
}
node {
  name: "separable_conv2d_16/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0718885138630867
      }
    }
  }
}
node {
  name: "separable_conv2d_16/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_16/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9832074
    }
  }
}
node {
  name: "separable_conv2d_16/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_16/random_uniform/max"
  input: "separable_conv2d_16/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_16/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_16/random_uniform/RandomUniform"
  input: "separable_conv2d_16/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_16/random_uniform"
  op: "Add"
  input: "separable_conv2d_16/random_uniform/mul"
  input: "separable_conv2d_16/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_16/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_16/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_16/depthwise_kernel"
  input: "separable_conv2d_16/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_16/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_16/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_16/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_16/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "separable_conv2d_16/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "separable_conv2d_16/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_16/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9441458
    }
  }
}
node {
  name: "separable_conv2d_16/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_16/random_uniform_1/max"
  input: "separable_conv2d_16/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_16/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_16/random_uniform_1/RandomUniform"
  input: "separable_conv2d_16/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_16/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_16/random_uniform_1/mul"
  input: "separable_conv2d_16/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_16/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_16/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_16/pointwise_kernel"
  input: "separable_conv2d_16/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_16/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_16/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_16/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_16/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_16/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_16/bias"
  input: "separable_conv2d_16/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_16/bias/read"
  op: "Identity"
  input: "separable_conv2d_16/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_16/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_16/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_16/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_17/Elu"
  input: "separable_conv2d_16/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_16/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_16/separable_conv2d/depthwise"
  input: "separable_conv2d_16/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_16/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_16/separable_conv2d"
  input: "separable_conv2d_16/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_18/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_18/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_18/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_18/gamma"
  input: "batch_normalization_18/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_18/gamma/read"
  op: "Identity"
  input: "batch_normalization_18/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_18/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_18/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_18/beta/Assign"
  op: "Assign"
  input: "batch_normalization_18/beta"
  input: "batch_normalization_18/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_18/beta/read"
  op: "Identity"
  input: "batch_normalization_18/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_18/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_18/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_18/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_18/moving_mean"
  input: "batch_normalization_18/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_18/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_18/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_18/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_18/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_18/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_18/moving_variance"
  input: "batch_normalization_18/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_18/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_18/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_18/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_18/moments/mean"
  op: "Mean"
  input: "separable_conv2d_16/BiasAdd"
  input: "batch_normalization_18/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_18/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_18/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_16/BiasAdd"
  input: "batch_normalization_18/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_18/moments/variance"
  op: "Mean"
  input: "batch_normalization_18/moments/SquaredDifference"
  input: "batch_normalization_18/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_18/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_18/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_18/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_18/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_18/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_18/batchnorm/add"
  op: "Add"
  input: "batch_normalization_18/moments/Squeeze_1"
  input: "batch_normalization_18/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_18/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_18/batchnorm/Rsqrt"
  input: "batch_normalization_18/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_16/BiasAdd"
  input: "batch_normalization_18/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_18/moments/Squeeze"
  input: "batch_normalization_18/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_18/beta/read"
  input: "batch_normalization_18/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_18/batchnorm/mul_1"
  input: "batch_normalization_18/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_18/moving_mean/read"
  input: "batch_normalization_18/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_18/AssignMovingAvg/sub"
  input: "batch_normalization_18/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_18/moving_mean"
  input: "batch_normalization_18/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_18/moving_variance/read"
  input: "batch_normalization_18/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_18/AssignMovingAvg_1/sub"
  input: "batch_normalization_18/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_18/moving_variance"
  input: "batch_normalization_18/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_18/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_18/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_18/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_18/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_18/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_18/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_18/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_18/batchnorm/add_1"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_18/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_18/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_18/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_18/cond/batchnorm/add/Switch"
  input: "batch_normalization_18/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_18/moving_variance/read"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_18/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_18/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_18/cond/batchnorm/Rsqrt"
  input: "batch_normalization_18/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_18/gamma/read"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_18/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_18/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_18/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_16/BiasAdd"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_18/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_18/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_18/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_18/moving_mean/read"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_18/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_18/cond/batchnorm/sub/Switch"
  input: "batch_normalization_18/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_18/beta/read"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_18/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_18/cond/batchnorm/mul_1"
  input: "batch_normalization_18/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_18/cond/Merge"
  op: "Merge"
  input: "batch_normalization_18/cond/batchnorm/add_1"
  input: "batch_normalization_18/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_18/Elu"
  op: "Elu"
  input: "batch_normalization_18/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_17/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_17/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958004
      }
    }
  }
}
node {
  name: "separable_conv2d_17/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958004
      }
    }
  }
}
node {
  name: "separable_conv2d_17/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_17/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9221365
    }
  }
}
node {
  name: "separable_conv2d_17/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_17/random_uniform/max"
  input: "separable_conv2d_17/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_17/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_17/random_uniform/RandomUniform"
  input: "separable_conv2d_17/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_17/random_uniform"
  op: "Add"
  input: "separable_conv2d_17/random_uniform/mul"
  input: "separable_conv2d_17/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_17/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_17/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_17/depthwise_kernel"
  input: "separable_conv2d_17/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_17/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_17/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_17/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_17/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "separable_conv2d_17/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "separable_conv2d_17/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_17/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7647871
    }
  }
}
node {
  name: "separable_conv2d_17/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_17/random_uniform_1/max"
  input: "separable_conv2d_17/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_17/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_17/random_uniform_1/RandomUniform"
  input: "separable_conv2d_17/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_17/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_17/random_uniform_1/mul"
  input: "separable_conv2d_17/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_17/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_17/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_17/pointwise_kernel"
  input: "separable_conv2d_17/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_17/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_17/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_17/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_17/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_17/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_17/bias"
  input: "separable_conv2d_17/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_17/bias/read"
  op: "Identity"
  input: "separable_conv2d_17/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_17/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_17/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_17/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_18/Elu"
  input: "separable_conv2d_17/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_17/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_17/separable_conv2d/depthwise"
  input: "separable_conv2d_17/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_17/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_17/separable_conv2d"
  input: "separable_conv2d_17/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_19/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_19/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_19/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_19/gamma"
  input: "batch_normalization_19/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_19/gamma/read"
  op: "Identity"
  input: "batch_normalization_19/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_19/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_19/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_19/beta/Assign"
  op: "Assign"
  input: "batch_normalization_19/beta"
  input: "batch_normalization_19/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_19/beta/read"
  op: "Identity"
  input: "batch_normalization_19/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_19/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_19/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_19/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_19/moving_mean"
  input: "batch_normalization_19/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_19/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_19/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_19/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_19/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_19/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_19/moving_variance"
  input: "batch_normalization_19/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_19/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_19/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_19/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_19/moments/mean"
  op: "Mean"
  input: "separable_conv2d_17/BiasAdd"
  input: "batch_normalization_19/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_19/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_19/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_17/BiasAdd"
  input: "batch_normalization_19/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_19/moments/variance"
  op: "Mean"
  input: "batch_normalization_19/moments/SquaredDifference"
  input: "batch_normalization_19/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_19/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_19/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_19/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_19/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_19/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_19/batchnorm/add"
  op: "Add"
  input: "batch_normalization_19/moments/Squeeze_1"
  input: "batch_normalization_19/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_19/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_19/batchnorm/Rsqrt"
  input: "batch_normalization_19/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_17/BiasAdd"
  input: "batch_normalization_19/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_19/moments/Squeeze"
  input: "batch_normalization_19/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_19/beta/read"
  input: "batch_normalization_19/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_19/batchnorm/mul_1"
  input: "batch_normalization_19/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_19/moving_mean/read"
  input: "batch_normalization_19/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_19/AssignMovingAvg/sub"
  input: "batch_normalization_19/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_19/moving_mean"
  input: "batch_normalization_19/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_19/moving_variance/read"
  input: "batch_normalization_19/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_19/AssignMovingAvg_1/sub"
  input: "batch_normalization_19/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_19/moving_variance"
  input: "batch_normalization_19/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_19/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_19/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_19/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_19/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_19/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_19/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_19/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_19/batchnorm/add_1"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_19/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_19/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_19/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_19/cond/batchnorm/add/Switch"
  input: "batch_normalization_19/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_19/moving_variance/read"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_19/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_19/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_19/cond/batchnorm/Rsqrt"
  input: "batch_normalization_19/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_19/gamma/read"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_19/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_19/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_19/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_17/BiasAdd"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_19/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_19/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_19/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_19/moving_mean/read"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_19/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_19/cond/batchnorm/sub/Switch"
  input: "batch_normalization_19/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_19/beta/read"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_19/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_19/cond/batchnorm/mul_1"
  input: "batch_normalization_19/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_19/cond/Merge"
  op: "Merge"
  input: "batch_normalization_19/cond/batchnorm/add_1"
  input: "batch_normalization_19/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_19/Elu"
  op: "Elu"
  input: "batch_normalization_19/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_18/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_18/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958004
      }
    }
  }
}
node {
  name: "separable_conv2d_18/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958004
      }
    }
  }
}
node {
  name: "separable_conv2d_18/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_18/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1870402
    }
  }
}
node {
  name: "separable_conv2d_18/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_18/random_uniform/max"
  input: "separable_conv2d_18/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_18/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_18/random_uniform/RandomUniform"
  input: "separable_conv2d_18/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_18/random_uniform"
  op: "Add"
  input: "separable_conv2d_18/random_uniform/mul"
  input: "separable_conv2d_18/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_18/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_18/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_18/depthwise_kernel"
  input: "separable_conv2d_18/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_18/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_18/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_18/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_18/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "separable_conv2d_18/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "separable_conv2d_18/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_18/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9656255
    }
  }
}
node {
  name: "separable_conv2d_18/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_18/random_uniform_1/max"
  input: "separable_conv2d_18/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_18/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_18/random_uniform_1/RandomUniform"
  input: "separable_conv2d_18/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_18/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_18/random_uniform_1/mul"
  input: "separable_conv2d_18/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_18/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_18/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_18/pointwise_kernel"
  input: "separable_conv2d_18/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_18/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_18/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_18/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_18/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_18/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_18/bias"
  input: "separable_conv2d_18/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_18/bias/read"
  op: "Identity"
  input: "separable_conv2d_18/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_18/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_18/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_18/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_19/Elu"
  input: "separable_conv2d_18/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_18/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_18/separable_conv2d/depthwise"
  input: "separable_conv2d_18/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_18/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_18/separable_conv2d"
  input: "separable_conv2d_18/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_20/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_20/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_20/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_20/gamma"
  input: "batch_normalization_20/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_20/gamma/read"
  op: "Identity"
  input: "batch_normalization_20/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_20/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_20/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_20/beta/Assign"
  op: "Assign"
  input: "batch_normalization_20/beta"
  input: "batch_normalization_20/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_20/beta/read"
  op: "Identity"
  input: "batch_normalization_20/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_20/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_20/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_20/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_20/moving_mean"
  input: "batch_normalization_20/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_20/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_20/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_20/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_20/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_20/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_20/moving_variance"
  input: "batch_normalization_20/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_20/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_20/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_20/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_20/moments/mean"
  op: "Mean"
  input: "separable_conv2d_18/BiasAdd"
  input: "batch_normalization_20/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_20/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_20/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_18/BiasAdd"
  input: "batch_normalization_20/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_20/moments/variance"
  op: "Mean"
  input: "batch_normalization_20/moments/SquaredDifference"
  input: "batch_normalization_20/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_20/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_20/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_20/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_20/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_20/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_20/batchnorm/add"
  op: "Add"
  input: "batch_normalization_20/moments/Squeeze_1"
  input: "batch_normalization_20/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_20/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_20/batchnorm/Rsqrt"
  input: "batch_normalization_20/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_18/BiasAdd"
  input: "batch_normalization_20/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_20/moments/Squeeze"
  input: "batch_normalization_20/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_20/beta/read"
  input: "batch_normalization_20/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_20/batchnorm/mul_1"
  input: "batch_normalization_20/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_20/moving_mean/read"
  input: "batch_normalization_20/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_20/AssignMovingAvg/sub"
  input: "batch_normalization_20/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_20/moving_mean"
  input: "batch_normalization_20/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_20/moving_variance/read"
  input: "batch_normalization_20/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_20/AssignMovingAvg_1/sub"
  input: "batch_normalization_20/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_20/moving_variance"
  input: "batch_normalization_20/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_20/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_20/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_20/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_20/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_20/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_20/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_20/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_20/batchnorm/add_1"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_20/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_20/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_20/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_20/cond/batchnorm/add/Switch"
  input: "batch_normalization_20/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_20/moving_variance/read"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_20/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_20/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_20/cond/batchnorm/Rsqrt"
  input: "batch_normalization_20/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_20/gamma/read"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_20/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_20/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_20/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_18/BiasAdd"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_20/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_20/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_20/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_20/moving_mean/read"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_20/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_20/cond/batchnorm/sub/Switch"
  input: "batch_normalization_20/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_20/beta/read"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_20/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_20/cond/batchnorm/mul_1"
  input: "batch_normalization_20/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_20/cond/Merge"
  op: "Merge"
  input: "batch_normalization_20/cond/batchnorm/add_1"
  input: "batch_normalization_20/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_20/Elu"
  op: "Elu"
  input: "batch_normalization_20/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_19/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_19/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_19/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_19/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_19/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8692403
    }
  }
}
node {
  name: "separable_conv2d_19/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_19/random_uniform/max"
  input: "separable_conv2d_19/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_19/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_19/random_uniform/RandomUniform"
  input: "separable_conv2d_19/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_19/random_uniform"
  op: "Add"
  input: "separable_conv2d_19/random_uniform/mul"
  input: "separable_conv2d_19/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_19/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_19/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_19/depthwise_kernel"
  input: "separable_conv2d_19/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_19/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_19/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_19/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_19/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_19/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_19/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_19/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6618711
    }
  }
}
node {
  name: "separable_conv2d_19/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_19/random_uniform_1/max"
  input: "separable_conv2d_19/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_19/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_19/random_uniform_1/RandomUniform"
  input: "separable_conv2d_19/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_19/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_19/random_uniform_1/mul"
  input: "separable_conv2d_19/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_19/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_19/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_19/pointwise_kernel"
  input: "separable_conv2d_19/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_19/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_19/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_19/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_19/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_19/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_19/bias"
  input: "separable_conv2d_19/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_19/bias/read"
  op: "Identity"
  input: "separable_conv2d_19/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_19/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_19/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_19/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_20/Elu"
  input: "separable_conv2d_19/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_19/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_19/separable_conv2d/depthwise"
  input: "separable_conv2d_19/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_19/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_19/separable_conv2d"
  input: "separable_conv2d_19/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_21/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_21/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_21/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_21/gamma"
  input: "batch_normalization_21/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_21/gamma/read"
  op: "Identity"
  input: "batch_normalization_21/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_21/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_21/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_21/beta/Assign"
  op: "Assign"
  input: "batch_normalization_21/beta"
  input: "batch_normalization_21/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_21/beta/read"
  op: "Identity"
  input: "batch_normalization_21/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_21/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_21/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_21/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_21/moving_mean"
  input: "batch_normalization_21/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_21/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_21/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_21/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_21/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_21/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_21/moving_variance"
  input: "batch_normalization_21/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_21/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_21/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_21/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_21/moments/mean"
  op: "Mean"
  input: "separable_conv2d_19/BiasAdd"
  input: "batch_normalization_21/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_21/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_21/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_19/BiasAdd"
  input: "batch_normalization_21/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_21/moments/variance"
  op: "Mean"
  input: "batch_normalization_21/moments/SquaredDifference"
  input: "batch_normalization_21/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_21/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_21/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_21/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_21/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_21/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_21/batchnorm/add"
  op: "Add"
  input: "batch_normalization_21/moments/Squeeze_1"
  input: "batch_normalization_21/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_21/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_21/batchnorm/Rsqrt"
  input: "batch_normalization_21/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_19/BiasAdd"
  input: "batch_normalization_21/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_21/moments/Squeeze"
  input: "batch_normalization_21/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_21/beta/read"
  input: "batch_normalization_21/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_21/batchnorm/mul_1"
  input: "batch_normalization_21/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_21/moving_mean/read"
  input: "batch_normalization_21/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_21/AssignMovingAvg/sub"
  input: "batch_normalization_21/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_21/moving_mean"
  input: "batch_normalization_21/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_21/moving_variance/read"
  input: "batch_normalization_21/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_21/AssignMovingAvg_1/sub"
  input: "batch_normalization_21/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_21/moving_variance"
  input: "batch_normalization_21/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_21/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_21/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_21/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_21/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_21/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_21/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_21/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_21/batchnorm/add_1"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_21/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_21/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_21/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_21/cond/batchnorm/add/Switch"
  input: "batch_normalization_21/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_21/moving_variance/read"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_21/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_21/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_21/cond/batchnorm/Rsqrt"
  input: "batch_normalization_21/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_21/gamma/read"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_21/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_21/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_21/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_19/BiasAdd"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_21/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_21/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_21/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_21/moving_mean/read"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_21/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_21/cond/batchnorm/sub/Switch"
  input: "batch_normalization_21/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_21/beta/read"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_21/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_21/cond/batchnorm/mul_1"
  input: "batch_normalization_21/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_21/cond/Merge"
  op: "Merge"
  input: "batch_normalization_21/cond/batchnorm/add_1"
  input: "batch_normalization_21/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_21/Elu"
  op: "Elu"
  input: "batch_normalization_21/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_20/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_20/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_20/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_20/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_20/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4375113
    }
  }
}
node {
  name: "separable_conv2d_20/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_20/random_uniform/max"
  input: "separable_conv2d_20/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_20/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_20/random_uniform/RandomUniform"
  input: "separable_conv2d_20/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_20/random_uniform"
  op: "Add"
  input: "separable_conv2d_20/random_uniform/mul"
  input: "separable_conv2d_20/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_20/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_20/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_20/depthwise_kernel"
  input: "separable_conv2d_20/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_20/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_20/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_20/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_20/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_20/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_20/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_20/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3366631
    }
  }
}
node {
  name: "separable_conv2d_20/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_20/random_uniform_1/max"
  input: "separable_conv2d_20/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_20/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_20/random_uniform_1/RandomUniform"
  input: "separable_conv2d_20/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_20/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_20/random_uniform_1/mul"
  input: "separable_conv2d_20/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_20/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_20/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_20/pointwise_kernel"
  input: "separable_conv2d_20/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_20/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_20/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_20/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_20/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_20/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_20/bias"
  input: "separable_conv2d_20/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_20/bias/read"
  op: "Identity"
  input: "separable_conv2d_20/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_20/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_20/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_20/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_21/Elu"
  input: "separable_conv2d_20/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_20/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_20/separable_conv2d/depthwise"
  input: "separable_conv2d_20/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_20/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_20/separable_conv2d"
  input: "separable_conv2d_20/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_22/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_22/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_22/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_22/gamma"
  input: "batch_normalization_22/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_22/gamma/read"
  op: "Identity"
  input: "batch_normalization_22/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_22/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_22/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_22/beta/Assign"
  op: "Assign"
  input: "batch_normalization_22/beta"
  input: "batch_normalization_22/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_22/beta/read"
  op: "Identity"
  input: "batch_normalization_22/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_22/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_22/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_22/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_22/moving_mean"
  input: "batch_normalization_22/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_22/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_22/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_22/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_22/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_22/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_22/moving_variance"
  input: "batch_normalization_22/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_22/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_22/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_22/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_22/moments/mean"
  op: "Mean"
  input: "separable_conv2d_20/BiasAdd"
  input: "batch_normalization_22/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_22/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_22/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_20/BiasAdd"
  input: "batch_normalization_22/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_22/moments/variance"
  op: "Mean"
  input: "batch_normalization_22/moments/SquaredDifference"
  input: "batch_normalization_22/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_22/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_22/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_22/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_22/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_22/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_22/batchnorm/add"
  op: "Add"
  input: "batch_normalization_22/moments/Squeeze_1"
  input: "batch_normalization_22/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_22/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_22/batchnorm/Rsqrt"
  input: "batch_normalization_22/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_20/BiasAdd"
  input: "batch_normalization_22/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_22/moments/Squeeze"
  input: "batch_normalization_22/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_22/beta/read"
  input: "batch_normalization_22/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_22/batchnorm/mul_1"
  input: "batch_normalization_22/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_22/moving_mean/read"
  input: "batch_normalization_22/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_22/AssignMovingAvg/sub"
  input: "batch_normalization_22/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_22/moving_mean"
  input: "batch_normalization_22/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_22/moving_variance/read"
  input: "batch_normalization_22/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_22/AssignMovingAvg_1/sub"
  input: "batch_normalization_22/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_22/moving_variance"
  input: "batch_normalization_22/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_22/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_22/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_22/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_22/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_22/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_22/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_22/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_22/batchnorm/add_1"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_22/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_22/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_22/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_22/cond/batchnorm/add/Switch"
  input: "batch_normalization_22/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_22/moving_variance/read"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_22/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_22/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_22/cond/batchnorm/Rsqrt"
  input: "batch_normalization_22/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_22/gamma/read"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_22/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_22/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_22/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_20/BiasAdd"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_22/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_22/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_22/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_22/moving_mean/read"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_22/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_22/cond/batchnorm/sub/Switch"
  input: "batch_normalization_22/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_22/beta/read"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_22/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_22/cond/batchnorm/mul_1"
  input: "batch_normalization_22/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_22/cond/Merge"
  op: "Merge"
  input: "batch_normalization_22/cond/batchnorm/add_1"
  input: "batch_normalization_22/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_22/Elu"
  op: "Elu"
  input: "batch_normalization_22/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_21/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_21/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_21/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_21/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_21/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9046496
    }
  }
}
node {
  name: "separable_conv2d_21/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_21/random_uniform/max"
  input: "separable_conv2d_21/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_21/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_21/random_uniform/RandomUniform"
  input: "separable_conv2d_21/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_21/random_uniform"
  op: "Add"
  input: "separable_conv2d_21/random_uniform/mul"
  input: "separable_conv2d_21/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_21/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_21/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_21/depthwise_kernel"
  input: "separable_conv2d_21/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_21/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_21/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_21/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_21/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_21/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_21/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_21/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1955161
    }
  }
}
node {
  name: "separable_conv2d_21/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_21/random_uniform_1/max"
  input: "separable_conv2d_21/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_21/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_21/random_uniform_1/RandomUniform"
  input: "separable_conv2d_21/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_21/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_21/random_uniform_1/mul"
  input: "separable_conv2d_21/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_21/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_21/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_21/pointwise_kernel"
  input: "separable_conv2d_21/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_21/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_21/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_21/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_21/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_21/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_21/bias"
  input: "separable_conv2d_21/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_21/bias/read"
  op: "Identity"
  input: "separable_conv2d_21/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_21/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_21/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_21/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_22/Elu"
  input: "separable_conv2d_21/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_21/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_21/separable_conv2d/depthwise"
  input: "separable_conv2d_21/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_21/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_21/separable_conv2d"
  input: "separable_conv2d_21/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_23/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_23/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_23/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_23/gamma"
  input: "batch_normalization_23/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_23/gamma/read"
  op: "Identity"
  input: "batch_normalization_23/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_23/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_23/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_23/beta/Assign"
  op: "Assign"
  input: "batch_normalization_23/beta"
  input: "batch_normalization_23/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_23/beta/read"
  op: "Identity"
  input: "batch_normalization_23/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_23/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_23/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_23/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_23/moving_mean"
  input: "batch_normalization_23/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_23/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_23/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_23/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_23/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_23/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_23/moving_variance"
  input: "batch_normalization_23/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_23/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_23/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_23/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_23/moments/mean"
  op: "Mean"
  input: "separable_conv2d_21/BiasAdd"
  input: "batch_normalization_23/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_23/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_23/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_21/BiasAdd"
  input: "batch_normalization_23/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_23/moments/variance"
  op: "Mean"
  input: "batch_normalization_23/moments/SquaredDifference"
  input: "batch_normalization_23/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_23/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_23/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_23/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_23/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_23/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_23/batchnorm/add"
  op: "Add"
  input: "batch_normalization_23/moments/Squeeze_1"
  input: "batch_normalization_23/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_23/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_23/batchnorm/Rsqrt"
  input: "batch_normalization_23/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_21/BiasAdd"
  input: "batch_normalization_23/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_23/moments/Squeeze"
  input: "batch_normalization_23/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_23/beta/read"
  input: "batch_normalization_23/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_23/batchnorm/mul_1"
  input: "batch_normalization_23/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_23/moving_mean/read"
  input: "batch_normalization_23/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_23/AssignMovingAvg/sub"
  input: "batch_normalization_23/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_23/moving_mean"
  input: "batch_normalization_23/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_23/moving_variance/read"
  input: "batch_normalization_23/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_23/AssignMovingAvg_1/sub"
  input: "batch_normalization_23/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_23/moving_variance"
  input: "batch_normalization_23/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_23/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_23/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_23/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_23/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_23/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_23/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_23/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_23/batchnorm/add_1"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_23/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_23/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_23/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_23/cond/batchnorm/add/Switch"
  input: "batch_normalization_23/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_23/moving_variance/read"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_23/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_23/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_23/cond/batchnorm/Rsqrt"
  input: "batch_normalization_23/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_23/gamma/read"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_23/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_23/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_23/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_21/BiasAdd"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_23/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_23/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_23/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_23/moving_mean/read"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_23/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_23/cond/batchnorm/sub/Switch"
  input: "batch_normalization_23/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_23/beta/read"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_23/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_23/cond/batchnorm/mul_1"
  input: "batch_normalization_23/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_23/cond/Merge"
  op: "Merge"
  input: "batch_normalization_23/cond/batchnorm/add_1"
  input: "batch_normalization_23/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_23/Elu"
  op: "Elu"
  input: "batch_normalization_23/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_22/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_22/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_22/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_22/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_22/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3252333
    }
  }
}
node {
  name: "separable_conv2d_22/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_22/random_uniform/max"
  input: "separable_conv2d_22/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_22/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_22/random_uniform/RandomUniform"
  input: "separable_conv2d_22/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_22/random_uniform"
  op: "Add"
  input: "separable_conv2d_22/random_uniform/mul"
  input: "separable_conv2d_22/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_22/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_22/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_22/depthwise_kernel"
  input: "separable_conv2d_22/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_22/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_22/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_22/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_22/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_22/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_22/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_22/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3013736
    }
  }
}
node {
  name: "separable_conv2d_22/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_22/random_uniform_1/max"
  input: "separable_conv2d_22/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_22/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_22/random_uniform_1/RandomUniform"
  input: "separable_conv2d_22/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_22/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_22/random_uniform_1/mul"
  input: "separable_conv2d_22/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_22/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_22/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_22/pointwise_kernel"
  input: "separable_conv2d_22/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_22/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_22/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_22/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_22/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_22/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_22/bias"
  input: "separable_conv2d_22/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_22/bias/read"
  op: "Identity"
  input: "separable_conv2d_22/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_22/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_22/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_22/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_23/Elu"
  input: "separable_conv2d_22/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_22/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_22/separable_conv2d/depthwise"
  input: "separable_conv2d_22/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_22/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_22/separable_conv2d"
  input: "separable_conv2d_22/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_24/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_24/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_24/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_24/gamma"
  input: "batch_normalization_24/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_24/gamma/read"
  op: "Identity"
  input: "batch_normalization_24/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_24/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_24/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_24/beta/Assign"
  op: "Assign"
  input: "batch_normalization_24/beta"
  input: "batch_normalization_24/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_24/beta/read"
  op: "Identity"
  input: "batch_normalization_24/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_24/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_24/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_24/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_24/moving_mean"
  input: "batch_normalization_24/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_24/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_24/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_24/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_24/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_24/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_24/moving_variance"
  input: "batch_normalization_24/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_24/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_24/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_24/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_24/moments/mean"
  op: "Mean"
  input: "separable_conv2d_22/BiasAdd"
  input: "batch_normalization_24/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_24/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_24/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_24/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_22/BiasAdd"
  input: "batch_normalization_24/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_24/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_24/moments/variance"
  op: "Mean"
  input: "batch_normalization_24/moments/SquaredDifference"
  input: "batch_normalization_24/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_24/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_24/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_24/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_24/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_24/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_24/batchnorm/add"
  op: "Add"
  input: "batch_normalization_24/moments/Squeeze_1"
  input: "batch_normalization_24/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_24/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_24/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_24/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_24/batchnorm/Rsqrt"
  input: "batch_normalization_24/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_24/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_22/BiasAdd"
  input: "batch_normalization_24/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_24/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_24/moments/Squeeze"
  input: "batch_normalization_24/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_24/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_24/beta/read"
  input: "batch_normalization_24/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_24/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_24/batchnorm/mul_1"
  input: "batch_normalization_24/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_24/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_24/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_24/moving_mean/read"
  input: "batch_normalization_24/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_24/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_24/AssignMovingAvg/sub"
  input: "batch_normalization_24/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_24/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_24/moving_mean"
  input: "batch_normalization_24/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_24/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_24/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_24/moving_variance/read"
  input: "batch_normalization_24/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_24/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_24/AssignMovingAvg_1/sub"
  input: "batch_normalization_24/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_24/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_24/moving_variance"
  input: "batch_normalization_24/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_24/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_24/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_24/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_24/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_24/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_24/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_24/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_24/batchnorm/add_1"
  input: "batch_normalization_24/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_24/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_24/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_24/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_24/cond/batchnorm/add/Switch"
  input: "batch_normalization_24/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_24/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_24/moving_variance/read"
  input: "batch_normalization_24/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_24/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_24/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_24/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_24/cond/batchnorm/Rsqrt"
  input: "batch_normalization_24/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_24/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_24/gamma/read"
  input: "batch_normalization_24/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_24/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_24/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_24/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_24/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_22/BiasAdd"
  input: "batch_normalization_24/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_24/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_24/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_24/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_24/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_24/moving_mean/read"
  input: "batch_normalization_24/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_24/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_24/cond/batchnorm/sub/Switch"
  input: "batch_normalization_24/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_24/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_24/beta/read"
  input: "batch_normalization_24/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_24/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_24/cond/batchnorm/mul_1"
  input: "batch_normalization_24/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_24/cond/Merge"
  op: "Merge"
  input: "batch_normalization_24/cond/batchnorm/add_1"
  input: "batch_normalization_24/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_24/Elu"
  op: "Elu"
  input: "batch_normalization_24/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_23/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_23/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_23/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_23/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_23/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6108786
    }
  }
}
node {
  name: "separable_conv2d_23/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_23/random_uniform/max"
  input: "separable_conv2d_23/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_23/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_23/random_uniform/RandomUniform"
  input: "separable_conv2d_23/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_23/random_uniform"
  op: "Add"
  input: "separable_conv2d_23/random_uniform/mul"
  input: "separable_conv2d_23/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_23/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_23/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_23/depthwise_kernel"
  input: "separable_conv2d_23/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_23/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_23/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_23/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_23/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_23/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_23/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_23/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4084803
    }
  }
}
node {
  name: "separable_conv2d_23/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_23/random_uniform_1/max"
  input: "separable_conv2d_23/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_23/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_23/random_uniform_1/RandomUniform"
  input: "separable_conv2d_23/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_23/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_23/random_uniform_1/mul"
  input: "separable_conv2d_23/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_23/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_23/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_23/pointwise_kernel"
  input: "separable_conv2d_23/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_23/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_23/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_23/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_23/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_23/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_23/bias"
  input: "separable_conv2d_23/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_23/bias/read"
  op: "Identity"
  input: "separable_conv2d_23/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_23/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_23/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_23/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_24/Elu"
  input: "separable_conv2d_23/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_23/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_23/separable_conv2d/depthwise"
  input: "separable_conv2d_23/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_23/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_23/separable_conv2d"
  input: "separable_conv2d_23/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_25/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_25/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_25/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_25/gamma"
  input: "batch_normalization_25/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_25/gamma/read"
  op: "Identity"
  input: "batch_normalization_25/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_25/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_25/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_25/beta/Assign"
  op: "Assign"
  input: "batch_normalization_25/beta"
  input: "batch_normalization_25/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_25/beta/read"
  op: "Identity"
  input: "batch_normalization_25/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_25/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_25/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_25/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_25/moving_mean"
  input: "batch_normalization_25/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_25/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_25/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_25/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_25/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_25/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_25/moving_variance"
  input: "batch_normalization_25/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_25/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_25/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_25/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_25/moments/mean"
  op: "Mean"
  input: "separable_conv2d_23/BiasAdd"
  input: "batch_normalization_25/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_25/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_25/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_25/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_23/BiasAdd"
  input: "batch_normalization_25/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_25/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_25/moments/variance"
  op: "Mean"
  input: "batch_normalization_25/moments/SquaredDifference"
  input: "batch_normalization_25/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_25/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_25/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_25/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_25/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_25/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_25/batchnorm/add"
  op: "Add"
  input: "batch_normalization_25/moments/Squeeze_1"
  input: "batch_normalization_25/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_25/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_25/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_25/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_25/batchnorm/Rsqrt"
  input: "batch_normalization_25/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_25/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_23/BiasAdd"
  input: "batch_normalization_25/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_25/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_25/moments/Squeeze"
  input: "batch_normalization_25/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_25/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_25/beta/read"
  input: "batch_normalization_25/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_25/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_25/batchnorm/mul_1"
  input: "batch_normalization_25/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_25/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_25/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_25/moving_mean/read"
  input: "batch_normalization_25/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_25/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_25/AssignMovingAvg/sub"
  input: "batch_normalization_25/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_25/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_25/moving_mean"
  input: "batch_normalization_25/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_25/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_25/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_25/moving_variance/read"
  input: "batch_normalization_25/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_25/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_25/AssignMovingAvg_1/sub"
  input: "batch_normalization_25/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_25/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_25/moving_variance"
  input: "batch_normalization_25/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_25/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_25/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_25/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_25/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_25/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_25/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_25/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_25/batchnorm/add_1"
  input: "batch_normalization_25/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_25/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_25/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_25/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_25/cond/batchnorm/add/Switch"
  input: "batch_normalization_25/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_25/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_25/moving_variance/read"
  input: "batch_normalization_25/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_25/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_25/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_25/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_25/cond/batchnorm/Rsqrt"
  input: "batch_normalization_25/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_25/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_25/gamma/read"
  input: "batch_normalization_25/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_25/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_25/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_25/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_25/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_23/BiasAdd"
  input: "batch_normalization_25/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_25/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_25/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_25/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_25/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_25/moving_mean/read"
  input: "batch_normalization_25/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_25/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_25/cond/batchnorm/sub/Switch"
  input: "batch_normalization_25/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_25/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_25/beta/read"
  input: "batch_normalization_25/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_25/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_25/cond/batchnorm/mul_1"
  input: "batch_normalization_25/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_25/cond/Merge"
  op: "Merge"
  input: "batch_normalization_25/cond/batchnorm/add_1"
  input: "batch_normalization_25/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_25/Elu"
  op: "Elu"
  input: "batch_normalization_25/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_24/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_24/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_24/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_24/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_24/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3389019
    }
  }
}
node {
  name: "separable_conv2d_24/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_24/random_uniform/max"
  input: "separable_conv2d_24/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_24/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_24/random_uniform/RandomUniform"
  input: "separable_conv2d_24/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_24/random_uniform"
  op: "Add"
  input: "separable_conv2d_24/random_uniform/mul"
  input: "separable_conv2d_24/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_24/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_24/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_24/depthwise_kernel"
  input: "separable_conv2d_24/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_24/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_24/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_24/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_24/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0625
      }
    }
  }
}
node {
  name: "separable_conv2d_24/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "separable_conv2d_24/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_24/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9289866
    }
  }
}
node {
  name: "separable_conv2d_24/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_24/random_uniform_1/max"
  input: "separable_conv2d_24/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_24/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_24/random_uniform_1/RandomUniform"
  input: "separable_conv2d_24/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_24/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_24/random_uniform_1/mul"
  input: "separable_conv2d_24/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_24/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_24/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_24/pointwise_kernel"
  input: "separable_conv2d_24/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_24/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_24/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_24/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_24/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_24/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_24/bias"
  input: "separable_conv2d_24/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_24/bias/read"
  op: "Identity"
  input: "separable_conv2d_24/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_24/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_24/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_24/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_25/Elu"
  input: "separable_conv2d_24/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_24/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_24/separable_conv2d/depthwise"
  input: "separable_conv2d_24/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_24/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_24/separable_conv2d"
  input: "separable_conv2d_24/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_26/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_26/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_26/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_26/gamma"
  input: "batch_normalization_26/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_26/gamma/read"
  op: "Identity"
  input: "batch_normalization_26/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_26/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_26/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_26/beta/Assign"
  op: "Assign"
  input: "batch_normalization_26/beta"
  input: "batch_normalization_26/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_26/beta/read"
  op: "Identity"
  input: "batch_normalization_26/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_26/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_26/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_26/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_26/moving_mean"
  input: "batch_normalization_26/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_26/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_26/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_26/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_26/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_26/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_26/moving_variance"
  input: "batch_normalization_26/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_26/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_26/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_26/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_26/moments/mean"
  op: "Mean"
  input: "separable_conv2d_24/BiasAdd"
  input: "batch_normalization_26/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_26/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_26/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_26/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_24/BiasAdd"
  input: "batch_normalization_26/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_26/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_26/moments/variance"
  op: "Mean"
  input: "batch_normalization_26/moments/SquaredDifference"
  input: "batch_normalization_26/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_26/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_26/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_26/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_26/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_26/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_26/batchnorm/add"
  op: "Add"
  input: "batch_normalization_26/moments/Squeeze_1"
  input: "batch_normalization_26/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_26/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_26/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_26/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_26/batchnorm/Rsqrt"
  input: "batch_normalization_26/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_26/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_24/BiasAdd"
  input: "batch_normalization_26/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_26/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_26/moments/Squeeze"
  input: "batch_normalization_26/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_26/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_26/beta/read"
  input: "batch_normalization_26/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_26/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_26/batchnorm/mul_1"
  input: "batch_normalization_26/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_26/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_26/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_26/moving_mean/read"
  input: "batch_normalization_26/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_26/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_26/AssignMovingAvg/sub"
  input: "batch_normalization_26/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_26/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_26/moving_mean"
  input: "batch_normalization_26/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_26/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_26/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_26/moving_variance/read"
  input: "batch_normalization_26/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_26/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_26/AssignMovingAvg_1/sub"
  input: "batch_normalization_26/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_26/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_26/moving_variance"
  input: "batch_normalization_26/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_26/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_26/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_26/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_26/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_26/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_26/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_26/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_26/batchnorm/add_1"
  input: "batch_normalization_26/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_26/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_26/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_26/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_26/cond/batchnorm/add/Switch"
  input: "batch_normalization_26/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_26/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_26/moving_variance/read"
  input: "batch_normalization_26/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_26/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_26/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_26/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_26/cond/batchnorm/Rsqrt"
  input: "batch_normalization_26/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_26/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_26/gamma/read"
  input: "batch_normalization_26/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_26/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_26/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_26/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_26/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_24/BiasAdd"
  input: "batch_normalization_26/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_26/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_26/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_26/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_26/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_26/moving_mean/read"
  input: "batch_normalization_26/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_26/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_26/cond/batchnorm/sub/Switch"
  input: "batch_normalization_26/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_26/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_26/beta/read"
  input: "batch_normalization_26/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_26/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_26/cond/batchnorm/mul_1"
  input: "batch_normalization_26/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_26/cond/Merge"
  op: "Merge"
  input: "batch_normalization_26/cond/batchnorm/add_1"
  input: "batch_normalization_26/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_26/Elu"
  op: "Elu"
  input: "batch_normalization_26/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_average_pooling2d_2/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "global_average_pooling2d_2/Mean"
  op: "Mean"
  input: "activation_26/Elu"
  input: "global_average_pooling2d_2/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_2/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_2/cond/switch_t"
  op: "Identity"
  input: "dropout_2/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_2/cond/switch_f"
  op: "Identity"
  input: "dropout_2/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_2/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_2/cond/mul/y"
  op: "Const"
  input: "^dropout_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_2/cond/mul"
  op: "Mul"
  input: "dropout_2/cond/mul/Switch:1"
  input: "dropout_2/cond/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/mul/Switch"
  op: "Switch"
  input: "global_average_pooling2d_2/Mean"
  input: "dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
}
node {
  name: "dropout_2/cond/dropout/keep_prob"
  op: "Const"
  input: "^dropout_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.75
      }
    }
  }
}
node {
  name: "dropout_2/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_2/cond/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_2/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_2/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_2/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_2/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7243128
    }
  }
}
node {
  name: "dropout_2/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_2/cond/dropout/random_uniform/max"
  input: "dropout_2/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_2/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_2/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_2/cond/dropout/random_uniform/mul"
  input: "dropout_2/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/dropout/add"
  op: "Add"
  input: "dropout_2/cond/dropout/keep_prob"
  input: "dropout_2/cond/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/dropout/Floor"
  op: "Floor"
  input: "dropout_2/cond/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/dropout/div"
  op: "RealDiv"
  input: "dropout_2/cond/mul"
  input: "dropout_2/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/dropout/mul"
  op: "Mul"
  input: "dropout_2/cond/dropout/div"
  input: "dropout_2/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/Switch_1"
  op: "Switch"
  input: "global_average_pooling2d_2/Mean"
  input: "dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
}
node {
  name: "dropout_2/cond/Merge"
  op: "Merge"
  input: "dropout_2/cond/Switch_1"
  input: "dropout_2/cond/dropout/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "dense_2/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07639748603105545
      }
    }
  }
}
node {
  name: "dense_2/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07639748603105545
      }
    }
  }
}
node {
  name: "dense_2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_2/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1947628
    }
  }
}
node {
  name: "dense_2/random_uniform/sub"
  op: "Sub"
  input: "dense_2/random_uniform/max"
  input: "dense_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/random_uniform/mul"
  op: "Mul"
  input: "dense_2/random_uniform/RandomUniform"
  input: "dense_2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/random_uniform"
  op: "Add"
  input: "dense_2/random_uniform/mul"
  input: "dense_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense_2/kernel/Assign"
  op: "Assign"
  input: "dense_2/kernel"
  input: "dense_2/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense_2/kernel/read"
  op: "Identity"
  input: "dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
}
node {
  name: "dense_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense_2/bias/Assign"
  op: "Assign"
  input: "dense_2/bias"
  input: "dense_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense_2/bias/read"
  op: "Identity"
  input: "dense_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
}
node {
  name: "dense_2/MatMul"
  op: "MatMul"
  input: "dropout_2/cond/Merge"
  input: "dense_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_2/BiasAdd"
  op: "BiasAdd"
  input: "dense_2/MatMul"
  input: "dense_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_2/Softmax"
  op: "Softmax"
  input: "dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/lr/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "RMSprop/lr"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RMSprop/lr/Assign"
  op: "Assign"
  input: "RMSprop/lr"
  input: "RMSprop/lr/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/lr"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop/lr/read"
  op: "Identity"
  input: "RMSprop/lr"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/lr"
      }
    }
  }
}
node {
  name: "RMSprop/rho/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "RMSprop/rho"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RMSprop/rho/Assign"
  op: "Assign"
  input: "RMSprop/rho"
  input: "RMSprop/rho/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/rho"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop/rho/read"
  op: "Identity"
  input: "RMSprop/rho"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/rho"
      }
    }
  }
}
node {
  name: "RMSprop/decay/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/decay"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RMSprop/decay/Assign"
  op: "Assign"
  input: "RMSprop/decay"
  input: "RMSprop/decay/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/decay"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop/decay/read"
  op: "Identity"
  input: "RMSprop/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/decay"
      }
    }
  }
}
node {
  name: "RMSprop/iterations/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "RMSprop/iterations"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RMSprop/iterations/Assign"
  op: "Assign"
  input: "RMSprop/iterations"
  input: "RMSprop/iterations/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/iterations"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop/iterations/read"
  op: "Identity"
  input: "RMSprop/iterations"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/iterations"
      }
    }
  }
}
node {
  name: "dense_2_target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "dense_2_sample_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "loss/dense_2_loss/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/dense_2_loss/Sum"
  op: "Sum"
  input: "dense_2/Softmax"
  input: "loss/dense_2_loss/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "loss/dense_2_loss/truediv"
  op: "RealDiv"
  input: "dense_2/Softmax"
  input: "loss/dense_2_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_2_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "loss/dense_2_loss/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/dense_2_loss/sub"
  op: "Sub"
  input: "loss/dense_2_loss/sub/x"
  input: "loss/dense_2_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_2_loss/clip_by_value/Minimum"
  op: "Minimum"
  input: "loss/dense_2_loss/truediv"
  input: "loss/dense_2_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_2_loss/clip_by_value"
  op: "Maximum"
  input: "loss/dense_2_loss/clip_by_value/Minimum"
  input: "loss/dense_2_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_2_loss/Log"
  op: "Log"
  input: "loss/dense_2_loss/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_2_loss/mul"
  op: "Mul"
  input: "dense_2_target"
  input: "loss/dense_2_loss/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_2_loss/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/dense_2_loss/Sum_1"
  op: "Sum"
  input: "loss/dense_2_loss/mul"
  input: "loss/dense_2_loss/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_2_loss/Neg"
  op: "Neg"
  input: "loss/dense_2_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_2_loss/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/dense_2_loss/Mean"
  op: "Mean"
  input: "loss/dense_2_loss/Neg"
  input: "loss/dense_2_loss/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_2_loss/mul_1"
  op: "Mul"
  input: "loss/dense_2_loss/Mean"
  input: "dense_2_sample_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_2_loss/NotEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense_2_loss/NotEqual"
  op: "NotEqual"
  input: "dense_2_sample_weights"
  input: "loss/dense_2_loss/NotEqual/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_2_loss/Cast"
  op: "Cast"
  input: "loss/dense_2_loss/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/dense_2_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/dense_2_loss/Mean_1"
  op: "Mean"
  input: "loss/dense_2_loss/Cast"
  input: "loss/dense_2_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_2_loss/truediv_1"
  op: "RealDiv"
  input: "loss/dense_2_loss/mul_1"
  input: "loss/dense_2_loss/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_2_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/dense_2_loss/Mean_2"
  op: "Mean"
  input: "loss/dense_2_loss/truediv_1"
  input: "loss/dense_2_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/mul"
  op: "Mul"
  input: "loss/mul/x"
  input: "loss/dense_2_loss/Mean_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/acc/ArgMax"
  op: "ArgMax"
  input: "dense_2_target"
  input: "metrics/acc/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/acc/ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/acc/ArgMax_1"
  op: "ArgMax"
  input: "dense_2/Softmax"
  input: "metrics/acc/ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/acc/Equal"
  op: "Equal"
  input: "metrics/acc/ArgMax"
  input: "metrics/acc/ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/acc/Cast"
  op: "Cast"
  input: "metrics/acc/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "metrics/acc/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/acc/Mean"
  op: "Mean"
  input: "metrics/acc/Cast"
  input: "metrics/acc/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/mul"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/mul"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape"
  input: "training/RMSprop/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/Fill"
  input: "loss/dense_2_loss/Mean_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/Fill"
  input: "loss/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/loss/mul_grad/Mul_1"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Shape"
  op: "Shape"
  input: "loss/dense_2_loss/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean_2"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Reshape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Shape_1"
  op: "Shape"
  input: "loss/dense_2_loss/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean_2"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Shape_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Shape_1"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean_2"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Shape_2"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean_2"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Prod_1"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Prod"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Tile"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/Shape"
  op: "Shape"
  input: "loss/dense_2_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/truediv_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/truediv_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/Shape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/truediv_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/RealDiv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/truediv"
  input: "loss/dense_2_loss/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/truediv_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/RealDiv"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/truediv_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/Sum"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/truediv_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/Neg"
  op: "Neg"
  input: "loss/dense_2_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/truediv_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/RealDiv_1"
  op: "RealDiv"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/Neg"
  input: "loss/dense_2_loss/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/truediv_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/RealDiv_2"
  op: "RealDiv"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/RealDiv_1"
  input: "loss/dense_2_loss/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/truediv_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_2_grad/truediv"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/truediv_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/mul"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/truediv_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/Sum_1"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/truediv_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/mul_1_grad/Shape"
  op: "Shape"
  input: "loss/dense_2_loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dense_2_sample_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/loss/dense_2_loss/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/Reshape"
  input: "dense_2_sample_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/loss/dense_2_loss/mul_1_grad/mul"
  input: "training/RMSprop/gradients/loss/dense_2_loss/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/loss/dense_2_loss/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/mul_1_grad/mul_1"
  op: "Mul"
  input: "loss/dense_2_loss/Mean"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/loss/dense_2_loss/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/loss/dense_2_loss/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/loss/dense_2_loss/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Shape"
  op: "Shape"
  input: "loss/dense_2_loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/add"
  op: "Add"
  input: "loss/dense_2_loss/Mean/reduction_indices"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/add"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/range/start"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Size"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Shape_1"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/range"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/mod"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Shape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/DynamicStitch"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Shape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Reshape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Shape_2"
  op: "Shape"
  input: "loss/dense_2_loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Shape_3"
  op: "Shape"
  input: "loss/dense_2_loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Shape_2"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Shape_3"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Prod_1"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Prod"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Tile"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Neg_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Neg"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/Shape"
  op: "Shape"
  input: "loss/dense_2_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/add"
  op: "Add"
  input: "loss/dense_2_loss/Sum_1/reduction_indices"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/add"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/range/start"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/Size"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/Shape_1"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/range"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/mod"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/Shape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/DynamicStitch"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/Shape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Neg_grad/Neg"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/Reshape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/mul_grad/Shape"
  op: "Shape"
  input: "dense_2_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "loss/dense_2_loss/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/loss/dense_2_loss/mul_grad/Shape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/mul_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/Tile"
  input: "loss/dense_2_loss/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/mul_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/loss/dense_2_loss/mul_grad/mul"
  input: "training/RMSprop/gradients/loss/dense_2_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/mul_grad/Sum"
  input: "training/RMSprop/gradients/loss/dense_2_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/mul_grad/mul_1"
  op: "Mul"
  input: "dense_2_target"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_1_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/loss/dense_2_loss/mul_grad/mul_1"
  input: "training/RMSprop/gradients/loss/dense_2_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/mul_grad/Sum_1"
  input: "training/RMSprop/gradients/loss/dense_2_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Log_grad/Reciprocal"
  op: "Reciprocal"
  input: "loss/dense_2_loss/clip_by_value"
  input: "^training/RMSprop/gradients/loss/dense_2_loss/mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Log"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Log_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/loss/dense_2_loss/mul_grad/Reshape_1"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Log_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Log"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/Shape"
  op: "Shape"
  input: "loss/dense_2_loss/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Log_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/zeros"
  op: "Fill"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/Shape_2"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "loss/dense_2_loss/clip_by_value/Minimum"
  input: "loss/dense_2_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/Shape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/Select"
  op: "Select"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/GreaterEqual"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Log_grad/mul"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/Select_1"
  op: "Select"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/GreaterEqual"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/zeros"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Log_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/Select"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/Sum"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/Select_1"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/Sum_1"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "loss/dense_2_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/Shape_2"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "loss/dense_2_loss/truediv"
  input: "loss/dense_2_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/Shape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/LessEqual"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/Reshape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/LessEqual"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/zeros"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/Select"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/Sum"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/Select_1"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/Sum_1"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/Shape"
  op: "Shape"
  input: "dense_2/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/truediv"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/Shape_1"
  op: "Shape"
  input: "loss/dense_2_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/truediv"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/Shape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/truediv"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/Reshape"
  input: "loss/dense_2_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/truediv"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/RealDiv"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/Sum"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/truediv"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/Neg"
  op: "Neg"
  input: "dense_2/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/truediv"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/Neg"
  input: "loss/dense_2_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/truediv"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/RealDiv_1"
  input: "loss/dense_2_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/truediv"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/loss/dense_2_loss/clip_by_value/Minimum_grad/Reshape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/truediv"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/mul"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/Sum_1"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/truediv"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/Shape"
  op: "Shape"
  input: "dense_2/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/add"
  op: "Add"
  input: "loss/dense_2_loss/Sum/reduction_indices"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/add"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/range/start"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/Size"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/Shape_1"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/range"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/mod"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/Shape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/DynamicStitch"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/Shape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/Reshape_1"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/Reshape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/Sum"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN"
  op: "AddN"
  input: "training/RMSprop/gradients/loss/dense_2_loss/truediv_grad/Reshape"
  input: "training/RMSprop/gradients/loss/dense_2_loss/Sum_grad/Tile"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/dense_2_loss/truediv"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dense_2/Softmax_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN"
  input: "dense_2/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/Softmax"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dense_2/Softmax_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/Softmax"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dense_2/Softmax_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/dense_2/Softmax_grad/mul"
  input: "training/RMSprop/gradients/dense_2/Softmax_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/Softmax"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/dense_2/Softmax_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/Softmax"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dense_2/Softmax_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/dense_2/Softmax_grad/Sum"
  input: "training/RMSprop/gradients/dense_2/Softmax_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/Softmax"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dense_2/Softmax_grad/sub"
  op: "Sub"
  input: "training/RMSprop/gradients/AddN"
  input: "training/RMSprop/gradients/dense_2/Softmax_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/Softmax"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dense_2/Softmax_grad/mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/dense_2/Softmax_grad/sub"
  input: "dense_2/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/Softmax"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dense_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/dense_2/Softmax_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/dense_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/RMSprop/gradients/dense_2/Softmax_grad/mul_1"
  input: "dense_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/dense_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dropout_2/cond/Merge"
  input: "training/RMSprop/gradients/dense_2/Softmax_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training/RMSprop/gradients/dense_2/MatMul_grad/MatMul"
  input: "dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/MatMul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch"
  op: "Switch"
  input: "global_average_pooling2d_2/Mean"
  input: "dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_1"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_1"
  input: "training/RMSprop/gradients/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/dropout_2/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "dropout_2/cond/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_2/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Shape"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/dropout/mul_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/dropout_2/cond/Merge_grad/cond_grad:1"
  input: "dropout_2/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/mul_grad/mul"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Sum"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "dropout_2/cond/dropout/div"
  input: "training/RMSprop/gradients/dropout_2/cond/Merge_grad/cond_grad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/mul_grad/mul_1"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Sum_1"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/Shape"
  op: "Shape"
  input: "dropout_2/cond/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/div"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/div"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/Shape"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/div"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Reshape"
  input: "dropout_2/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/div"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/RealDiv"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/div"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/Sum"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/div"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/Neg"
  op: "Neg"
  input: "dropout_2/cond/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/div"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/Neg"
  input: "dropout_2/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/div"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/RealDiv_1"
  input: "dropout_2/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/div"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Reshape"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/div"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/mul"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/div"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/Sum_1"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/dropout/div"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/mul_grad/Shape"
  op: "Shape"
  input: "dropout_2/cond/mul/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/mul"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/dropout_2/cond/mul_grad/Shape"
  input: "training/RMSprop/gradients/dropout_2/cond/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/mul_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/Reshape"
  input: "dropout_2/cond/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/mul_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/dropout_2/cond/mul_grad/mul"
  input: "training/RMSprop/gradients/dropout_2/cond/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/mul_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/dropout_2/cond/mul_grad/Sum"
  input: "training/RMSprop/gradients/dropout_2/cond/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/mul_grad/mul_1"
  op: "Mul"
  input: "dropout_2/cond/mul/Switch:1"
  input: "training/RMSprop/gradients/dropout_2/cond/dropout/div_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/mul_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/dropout_2/cond/mul_grad/mul_1"
  input: "training/RMSprop/gradients/dropout_2/cond/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/dropout_2/cond/mul_grad/Sum_1"
  input: "training/RMSprop/gradients/dropout_2/cond/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2/cond/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_1"
  op: "Switch"
  input: "global_average_pooling2d_2/Mean"
  input: "dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_2"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_1"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_2"
  input: "training/RMSprop/gradients/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/dropout_2/cond/mul/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/zeros_1"
  input: "training/RMSprop/gradients/dropout_2/cond/mul_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_1"
  op: "AddN"
  input: "training/RMSprop/gradients/dropout_2/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/dropout_2/cond/mul/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Shape"
  op: "Shape"
  input: "activation_26/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/add"
  op: "Add"
  input: "global_average_pooling2d_2/Mean/reduction_indices"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/add"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/range/start"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Size"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Shape_1"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/range"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/mod"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Shape"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/DynamicStitch"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Shape"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/AddN_1"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Reshape"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Shape_2"
  op: "Shape"
  input: "activation_26/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Shape_3"
  op: "Shape"
  input: "global_average_pooling2d_2/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Shape_2"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Shape_3"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Prod_1"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Prod"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Tile"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_2/Mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/activation_26/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "training/RMSprop/gradients/global_average_pooling2d_2/Mean_grad/truediv"
  input: "activation_26/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_26/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training/RMSprop/gradients/activation_26/Elu_grad/EluGrad"
  input: "batch_normalization_26/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_26/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_26/cond/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_2"
  op: "Switch"
  input: "batch_normalization_26/batchnorm/add_1"
  input: "batch_normalization_26/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_3"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_2/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_2"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_3"
  input: "training/RMSprop/gradients/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/zeros_2"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/Merge_grad/cond_grad:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_26/cond/batchnorm/mul_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_26/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "batch_normalization_26/cond/batchnorm/mul_1/Switch"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_26/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_3"
  op: "Switch"
  input: "separable_conv2d_24/BiasAdd"
  input: "batch_normalization_26/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_4"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/BiasAdd"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/BiasAdd"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_3"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_4"
  input: "training/RMSprop/gradients/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_4"
  op: "Switch"
  input: "batch_normalization_26/beta/read"
  input: "batch_normalization_26/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_5"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_4/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_4"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_5"
  input: "training/RMSprop/gradients/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/sub/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/sub_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_26/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_26/cond/batchnorm/mul_2/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_24/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_26/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "separable_conv2d_24/BiasAdd"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_2"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_2"
  input: "batch_normalization_26/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_2"
  input: "batch_normalization_26/cond/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_3"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/sub/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/sub_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_26/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_26/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_5"
  op: "Switch"
  input: "batch_normalization_26/gamma/read"
  input: "batch_normalization_26/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_6"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_5/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_5"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_6"
  input: "training/RMSprop/gradients/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_grad/Mul_1"
  input: "training/RMSprop/gradients/zeros_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/Squeeze"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_2_grad/Mul"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/Squeeze"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_4"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_4"
  input: "batch_normalization_26/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_4"
  input: "batch_normalization_26/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batch_normalization_26/batchnorm/Rsqrt"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/Rsqrt"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_5"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/Squeeze_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/add_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/Squeeze_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Shape"
  op: "Shape"
  input: "batch_normalization_26/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/add"
  op: "Add"
  input: "batch_normalization_26/moments/variance/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/Squeeze_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "batch_normalization_26/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_24/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/truediv"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/scalar"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "separable_conv2d_24/BiasAdd"
  input: "batch_normalization_26/moments/StopGradient"
  input: "^training/RMSprop/gradients/batch_normalization_26/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_24/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/add"
  op: "Add"
  input: "batch_normalization_26/moments/mean/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/Squeeze_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "separable_conv2d_24/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_6"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_26/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_26/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/SquaredDifference_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_26/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_24/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_24/separable_conv2d_grad/ShapeN"
  op: "ShapeN"
  input: "separable_conv2d_24/separable_conv2d/depthwise"
  input: "separable_conv2d_24/pointwise_kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/separable_conv2d"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_24/separable_conv2d_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/separable_conv2d"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_24/separable_conv2d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/separable_conv2d_24/separable_conv2d_grad/ShapeN"
  input: "separable_conv2d_24/pointwise_kernel/read"
  input: "training/RMSprop/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/separable_conv2d"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_24/separable_conv2d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "separable_conv2d_24/separable_conv2d/depthwise"
  input: "training/RMSprop/gradients/separable_conv2d_24/separable_conv2d_grad/Const"
  input: "training/RMSprop/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/separable_conv2d"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_24/separable_conv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "activation_25/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_24/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "training/RMSprop/gradients/separable_conv2d_24/separable_conv2d/depthwise_grad/Shape"
  input: "separable_conv2d_24/depthwise_kernel/read"
  input: "training/RMSprop/gradients/separable_conv2d_24/separable_conv2d_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_24/separable_conv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_24/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "activation_25/Elu"
  input: "training/RMSprop/gradients/separable_conv2d_24/separable_conv2d/depthwise_grad/Shape_1"
  input: "training/RMSprop/gradients/separable_conv2d_24/separable_conv2d_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/activation_25/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "training/RMSprop/gradients/separable_conv2d_24/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "activation_25/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_25/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training/RMSprop/gradients/activation_25/Elu_grad/EluGrad"
  input: "batch_normalization_25/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_25/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_25/cond/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_6"
  op: "Switch"
  input: "batch_normalization_25/batchnorm/add_1"
  input: "batch_normalization_25/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_7"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_6/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_6"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_7"
  input: "training/RMSprop/gradients/zeros_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/zeros_6"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/Merge_grad/cond_grad:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_25/cond/batchnorm/mul_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_25/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "batch_normalization_25/cond/batchnorm/mul_1/Switch"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_25/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_7"
  op: "Switch"
  input: "separable_conv2d_23/BiasAdd"
  input: "batch_normalization_25/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_8"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/BiasAdd"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_7/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/BiasAdd"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_7"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_8"
  input: "training/RMSprop/gradients/zeros_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_8"
  op: "Switch"
  input: "batch_normalization_25/beta/read"
  input: "batch_normalization_25/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_9"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_8/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_8"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_9"
  input: "training/RMSprop/gradients/zeros_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/sub/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/sub_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_25/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_25/cond/batchnorm/mul_2/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_23/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_25/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "separable_conv2d_23/BiasAdd"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_7"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_7"
  input: "batch_normalization_25/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_7"
  input: "batch_normalization_25/cond/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_8"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/sub/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/sub_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_25/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_25/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_9"
  op: "Switch"
  input: "batch_normalization_25/gamma/read"
  input: "batch_normalization_25/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_10"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_9/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_9"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_10"
  input: "training/RMSprop/gradients/zeros_9/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_grad/Mul_1"
  input: "training/RMSprop/gradients/zeros_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/Squeeze"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_2_grad/Mul"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/Squeeze"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_9"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_9"
  input: "batch_normalization_25/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_9"
  input: "batch_normalization_25/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batch_normalization_25/batchnorm/Rsqrt"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/Rsqrt"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_10"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/Squeeze_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/add_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/Squeeze_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Shape"
  op: "Shape"
  input: "batch_normalization_25/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/add"
  op: "Add"
  input: "batch_normalization_25/moments/variance/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/Squeeze_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "batch_normalization_25/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_23/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/truediv"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/scalar"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "separable_conv2d_23/BiasAdd"
  input: "batch_normalization_25/moments/StopGradient"
  input: "^training/RMSprop/gradients/batch_normalization_25/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_23/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/add"
  op: "Add"
  input: "batch_normalization_25/moments/mean/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/Squeeze_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "separable_conv2d_23/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_11"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_25/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_25/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/SquaredDifference_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_25/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_23/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_23/separable_conv2d_grad/ShapeN"
  op: "ShapeN"
  input: "separable_conv2d_23/separable_conv2d/depthwise"
  input: "separable_conv2d_23/pointwise_kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/separable_conv2d"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_23/separable_conv2d_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/separable_conv2d"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_23/separable_conv2d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/separable_conv2d_23/separable_conv2d_grad/ShapeN"
  input: "separable_conv2d_23/pointwise_kernel/read"
  input: "training/RMSprop/gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/separable_conv2d"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_23/separable_conv2d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "separable_conv2d_23/separable_conv2d/depthwise"
  input: "training/RMSprop/gradients/separable_conv2d_23/separable_conv2d_grad/Const"
  input: "training/RMSprop/gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/separable_conv2d"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_23/separable_conv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "activation_24/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_23/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "training/RMSprop/gradients/separable_conv2d_23/separable_conv2d/depthwise_grad/Shape"
  input: "separable_conv2d_23/depthwise_kernel/read"
  input: "training/RMSprop/gradients/separable_conv2d_23/separable_conv2d_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_23/separable_conv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_23/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "activation_24/Elu"
  input: "training/RMSprop/gradients/separable_conv2d_23/separable_conv2d/depthwise_grad/Shape_1"
  input: "training/RMSprop/gradients/separable_conv2d_23/separable_conv2d_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/activation_24/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "training/RMSprop/gradients/separable_conv2d_23/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "activation_24/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_24/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training/RMSprop/gradients/activation_24/Elu_grad/EluGrad"
  input: "batch_normalization_24/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_24/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_24/cond/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_10"
  op: "Switch"
  input: "batch_normalization_24/batchnorm/add_1"
  input: "batch_normalization_24/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_11"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_10/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_10"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_11"
  input: "training/RMSprop/gradients/zeros_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/zeros_10"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/Merge_grad/cond_grad:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_24/cond/batchnorm/mul_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_24/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "batch_normalization_24/cond/batchnorm/mul_1/Switch"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_24/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_11"
  op: "Switch"
  input: "separable_conv2d_22/BiasAdd"
  input: "batch_normalization_24/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_12"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_11:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/BiasAdd"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_11/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/BiasAdd"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_11"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_12"
  input: "training/RMSprop/gradients/zeros_11/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_11"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_12"
  op: "Switch"
  input: "batch_normalization_24/beta/read"
  input: "batch_normalization_24/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_13"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_12:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_12/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_12"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_13"
  input: "training/RMSprop/gradients/zeros_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/sub/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/sub_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_12"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_24/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_24/cond/batchnorm/mul_2/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_22/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_24/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "separable_conv2d_22/BiasAdd"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_12"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_12"
  input: "batch_normalization_24/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_12"
  input: "batch_normalization_24/cond/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_13"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/sub/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/sub_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_24/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_24/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_13"
  op: "Switch"
  input: "batch_normalization_24/gamma/read"
  input: "batch_normalization_24/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_14"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_13:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_13/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_13"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_14"
  input: "training/RMSprop/gradients/zeros_13/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_grad/Mul_1"
  input: "training/RMSprop/gradients/zeros_13"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/Squeeze"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_2_grad/Mul"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/Squeeze"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_14"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_14"
  input: "batch_normalization_24/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_14"
  input: "batch_normalization_24/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batch_normalization_24/batchnorm/Rsqrt"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/Rsqrt"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_15"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/Squeeze_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/add_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/Squeeze_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Shape"
  op: "Shape"
  input: "batch_normalization_24/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/add"
  op: "Add"
  input: "batch_normalization_24/moments/variance/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/Squeeze_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "batch_normalization_24/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_22/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/truediv"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/scalar"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "separable_conv2d_22/BiasAdd"
  input: "batch_normalization_24/moments/StopGradient"
  input: "^training/RMSprop/gradients/batch_normalization_24/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_22/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/add"
  op: "Add"
  input: "batch_normalization_24/moments/mean/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/Squeeze_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "separable_conv2d_22/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_16"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_24/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_24/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/SquaredDifference_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_24/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_22/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_22/separable_conv2d_grad/ShapeN"
  op: "ShapeN"
  input: "separable_conv2d_22/separable_conv2d/depthwise"
  input: "separable_conv2d_22/pointwise_kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/separable_conv2d"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_22/separable_conv2d_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/separable_conv2d"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_22/separable_conv2d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/separable_conv2d_22/separable_conv2d_grad/ShapeN"
  input: "separable_conv2d_22/pointwise_kernel/read"
  input: "training/RMSprop/gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/separable_conv2d"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_22/separable_conv2d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "separable_conv2d_22/separable_conv2d/depthwise"
  input: "training/RMSprop/gradients/separable_conv2d_22/separable_conv2d_grad/Const"
  input: "training/RMSprop/gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/separable_conv2d"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_22/separable_conv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "activation_23/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_22/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "training/RMSprop/gradients/separable_conv2d_22/separable_conv2d/depthwise_grad/Shape"
  input: "separable_conv2d_22/depthwise_kernel/read"
  input: "training/RMSprop/gradients/separable_conv2d_22/separable_conv2d_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_22/separable_conv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_22/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "activation_23/Elu"
  input: "training/RMSprop/gradients/separable_conv2d_22/separable_conv2d/depthwise_grad/Shape_1"
  input: "training/RMSprop/gradients/separable_conv2d_22/separable_conv2d_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/activation_23/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "training/RMSprop/gradients/separable_conv2d_22/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "activation_23/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_23/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training/RMSprop/gradients/activation_23/Elu_grad/EluGrad"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_23/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_23/cond/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_14"
  op: "Switch"
  input: "batch_normalization_23/batchnorm/add_1"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_15"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_14/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_14"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_15"
  input: "training/RMSprop/gradients/zeros_14/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/zeros_14"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/Merge_grad/cond_grad:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_23/cond/batchnorm/mul_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_23/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "batch_normalization_23/cond/batchnorm/mul_1/Switch"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_23/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_15"
  op: "Switch"
  input: "separable_conv2d_21/BiasAdd"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_16"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_15:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/BiasAdd"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_15/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/BiasAdd"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_15"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_16"
  input: "training/RMSprop/gradients/zeros_15/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_15"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_16"
  op: "Switch"
  input: "batch_normalization_23/beta/read"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_17"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_16:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_16/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_16"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_17"
  input: "training/RMSprop/gradients/zeros_16/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/sub/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/sub_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_16"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_23/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_23/cond/batchnorm/mul_2/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_21/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_23/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "separable_conv2d_21/BiasAdd"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_17"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_17"
  input: "batch_normalization_23/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_17"
  input: "batch_normalization_23/cond/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_18"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/sub/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/sub_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_23/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_23/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_17"
  op: "Switch"
  input: "batch_normalization_23/gamma/read"
  input: "batch_normalization_23/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_18"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_17:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_17/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_17"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_18"
  input: "training/RMSprop/gradients/zeros_17/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_grad/Mul_1"
  input: "training/RMSprop/gradients/zeros_17"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/Squeeze"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_2_grad/Mul"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/Squeeze"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_19"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_19"
  input: "batch_normalization_23/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_19"
  input: "batch_normalization_23/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batch_normalization_23/batchnorm/Rsqrt"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/Rsqrt"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_20"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/Squeeze_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/add_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/Squeeze_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Shape"
  op: "Shape"
  input: "batch_normalization_23/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/add"
  op: "Add"
  input: "batch_normalization_23/moments/variance/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/Squeeze_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "batch_normalization_23/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_21/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/truediv"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/scalar"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "separable_conv2d_21/BiasAdd"
  input: "batch_normalization_23/moments/StopGradient"
  input: "^training/RMSprop/gradients/batch_normalization_23/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_21/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/add"
  op: "Add"
  input: "batch_normalization_23/moments/mean/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/Squeeze_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "separable_conv2d_21/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_21"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_23/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_23/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/SquaredDifference_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_23/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_21/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_21/separable_conv2d_grad/ShapeN"
  op: "ShapeN"
  input: "separable_conv2d_21/separable_conv2d/depthwise"
  input: "separable_conv2d_21/pointwise_kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/separable_conv2d"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_21/separable_conv2d_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/separable_conv2d"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_21/separable_conv2d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/separable_conv2d_21/separable_conv2d_grad/ShapeN"
  input: "separable_conv2d_21/pointwise_kernel/read"
  input: "training/RMSprop/gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/separable_conv2d"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_21/separable_conv2d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "separable_conv2d_21/separable_conv2d/depthwise"
  input: "training/RMSprop/gradients/separable_conv2d_21/separable_conv2d_grad/Const"
  input: "training/RMSprop/gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/separable_conv2d"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_21/separable_conv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "activation_22/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_21/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "training/RMSprop/gradients/separable_conv2d_21/separable_conv2d/depthwise_grad/Shape"
  input: "separable_conv2d_21/depthwise_kernel/read"
  input: "training/RMSprop/gradients/separable_conv2d_21/separable_conv2d_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_21/separable_conv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_21/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "activation_22/Elu"
  input: "training/RMSprop/gradients/separable_conv2d_21/separable_conv2d/depthwise_grad/Shape_1"
  input: "training/RMSprop/gradients/separable_conv2d_21/separable_conv2d_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/activation_22/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "training/RMSprop/gradients/separable_conv2d_21/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "activation_22/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_22/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training/RMSprop/gradients/activation_22/Elu_grad/EluGrad"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_22/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_22/cond/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_18"
  op: "Switch"
  input: "batch_normalization_22/batchnorm/add_1"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_19"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_18/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_18"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_19"
  input: "training/RMSprop/gradients/zeros_18/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/zeros_18"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/Merge_grad/cond_grad:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_22/cond/batchnorm/mul_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_22/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "batch_normalization_22/cond/batchnorm/mul_1/Switch"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_22/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_19"
  op: "Switch"
  input: "separable_conv2d_20/BiasAdd"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_20"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_19:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/BiasAdd"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_19/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/BiasAdd"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_19"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_20"
  input: "training/RMSprop/gradients/zeros_19/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_19"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_20"
  op: "Switch"
  input: "batch_normalization_22/beta/read"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_21"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_20:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_20/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_20"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_21"
  input: "training/RMSprop/gradients/zeros_20/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/sub/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/sub_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_20"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_22/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_22/cond/batchnorm/mul_2/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_20/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_22/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "separable_conv2d_20/BiasAdd"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_22"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_22"
  input: "batch_normalization_22/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_22"
  input: "batch_normalization_22/cond/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_23"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/sub/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/sub_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_22/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_22/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_21"
  op: "Switch"
  input: "batch_normalization_22/gamma/read"
  input: "batch_normalization_22/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_22"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_21:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_21/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_21"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_22"
  input: "training/RMSprop/gradients/zeros_21/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_grad/Mul_1"
  input: "training/RMSprop/gradients/zeros_21"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/Squeeze"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_2_grad/Mul"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/Squeeze"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_24"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_24"
  input: "batch_normalization_22/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_24"
  input: "batch_normalization_22/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batch_normalization_22/batchnorm/Rsqrt"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/Rsqrt"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_25"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/Squeeze_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/add_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/Squeeze_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Shape"
  op: "Shape"
  input: "batch_normalization_22/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/add"
  op: "Add"
  input: "batch_normalization_22/moments/variance/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/Squeeze_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "batch_normalization_22/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_20/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/truediv"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/scalar"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "separable_conv2d_20/BiasAdd"
  input: "batch_normalization_22/moments/StopGradient"
  input: "^training/RMSprop/gradients/batch_normalization_22/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_20/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/add"
  op: "Add"
  input: "batch_normalization_22/moments/mean/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/Squeeze_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "separable_conv2d_20/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_26"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_22/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_22/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/SquaredDifference_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_22/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_20/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_20/separable_conv2d_grad/ShapeN"
  op: "ShapeN"
  input: "separable_conv2d_20/separable_conv2d/depthwise"
  input: "separable_conv2d_20/pointwise_kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/separable_conv2d"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_20/separable_conv2d_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/separable_conv2d"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_20/separable_conv2d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/separable_conv2d_20/separable_conv2d_grad/ShapeN"
  input: "separable_conv2d_20/pointwise_kernel/read"
  input: "training/RMSprop/gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/separable_conv2d"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_20/separable_conv2d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "separable_conv2d_20/separable_conv2d/depthwise"
  input: "training/RMSprop/gradients/separable_conv2d_20/separable_conv2d_grad/Const"
  input: "training/RMSprop/gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/separable_conv2d"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_20/separable_conv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "activation_21/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_20/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "training/RMSprop/gradients/separable_conv2d_20/separable_conv2d/depthwise_grad/Shape"
  input: "separable_conv2d_20/depthwise_kernel/read"
  input: "training/RMSprop/gradients/separable_conv2d_20/separable_conv2d_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_20/separable_conv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_20/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "activation_21/Elu"
  input: "training/RMSprop/gradients/separable_conv2d_20/separable_conv2d/depthwise_grad/Shape_1"
  input: "training/RMSprop/gradients/separable_conv2d_20/separable_conv2d_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/activation_21/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "training/RMSprop/gradients/separable_conv2d_20/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "activation_21/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_21/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training/RMSprop/gradients/activation_21/Elu_grad/EluGrad"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_21/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_21/cond/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_22"
  op: "Switch"
  input: "batch_normalization_21/batchnorm/add_1"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_23"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_22/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_22"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_23"
  input: "training/RMSprop/gradients/zeros_22/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/zeros_22"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/Merge_grad/cond_grad:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_21/cond/batchnorm/mul_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_21/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "batch_normalization_21/cond/batchnorm/mul_1/Switch"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_21/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_23"
  op: "Switch"
  input: "separable_conv2d_19/BiasAdd"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_24"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_23:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/BiasAdd"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_23/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/BiasAdd"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_23"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_24"
  input: "training/RMSprop/gradients/zeros_23/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_23"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_24"
  op: "Switch"
  input: "batch_normalization_21/beta/read"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_25"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_24/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_24"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_25"
  input: "training/RMSprop/gradients/zeros_24/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/sub/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/sub_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_24"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_21/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_21/cond/batchnorm/mul_2/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_19/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_21/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "separable_conv2d_19/BiasAdd"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_27"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_27"
  input: "batch_normalization_21/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_27"
  input: "batch_normalization_21/cond/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_28"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/sub/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/sub_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_21/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_21/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_25"
  op: "Switch"
  input: "batch_normalization_21/gamma/read"
  input: "batch_normalization_21/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_26"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_25:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_25/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_25"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_26"
  input: "training/RMSprop/gradients/zeros_25/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_grad/Mul_1"
  input: "training/RMSprop/gradients/zeros_25"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/Squeeze"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_2_grad/Mul"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/Squeeze"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_29"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_29"
  input: "batch_normalization_21/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_29"
  input: "batch_normalization_21/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batch_normalization_21/batchnorm/Rsqrt"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/Rsqrt"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_30"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/Squeeze_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/add_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/Squeeze_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Shape"
  op: "Shape"
  input: "batch_normalization_21/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/add"
  op: "Add"
  input: "batch_normalization_21/moments/variance/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/Squeeze_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "batch_normalization_21/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_19/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/truediv"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/scalar"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "separable_conv2d_19/BiasAdd"
  input: "batch_normalization_21/moments/StopGradient"
  input: "^training/RMSprop/gradients/batch_normalization_21/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_19/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/add"
  op: "Add"
  input: "batch_normalization_21/moments/mean/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/Squeeze_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "separable_conv2d_19/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_31"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_21/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_21/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/SquaredDifference_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_21/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_19/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/AddN_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_19/separable_conv2d_grad/ShapeN"
  op: "ShapeN"
  input: "separable_conv2d_19/separable_conv2d/depthwise"
  input: "separable_conv2d_19/pointwise_kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/separable_conv2d"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_19/separable_conv2d_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/separable_conv2d"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_19/separable_conv2d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/separable_conv2d_19/separable_conv2d_grad/ShapeN"
  input: "separable_conv2d_19/pointwise_kernel/read"
  input: "training/RMSprop/gradients/AddN_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/separable_conv2d"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_19/separable_conv2d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "separable_conv2d_19/separable_conv2d/depthwise"
  input: "training/RMSprop/gradients/separable_conv2d_19/separable_conv2d_grad/Const"
  input: "training/RMSprop/gradients/AddN_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/separable_conv2d"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_19/separable_conv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "activation_20/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_19/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "training/RMSprop/gradients/separable_conv2d_19/separable_conv2d/depthwise_grad/Shape"
  input: "separable_conv2d_19/depthwise_kernel/read"
  input: "training/RMSprop/gradients/separable_conv2d_19/separable_conv2d_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_19/separable_conv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_19/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "activation_20/Elu"
  input: "training/RMSprop/gradients/separable_conv2d_19/separable_conv2d/depthwise_grad/Shape_1"
  input: "training/RMSprop/gradients/separable_conv2d_19/separable_conv2d_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/activation_20/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "training/RMSprop/gradients/separable_conv2d_19/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "activation_20/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_20/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training/RMSprop/gradients/activation_20/Elu_grad/EluGrad"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_20/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_20/cond/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_26"
  op: "Switch"
  input: "batch_normalization_20/batchnorm/add_1"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_27"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_26/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_26"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_27"
  input: "training/RMSprop/gradients/zeros_26/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/zeros_26"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/Merge_grad/cond_grad:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_20/cond/batchnorm/mul_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_20/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "batch_normalization_20/cond/batchnorm/mul_1/Switch"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_20/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_27"
  op: "Switch"
  input: "separable_conv2d_18/BiasAdd"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_28"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_27:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/BiasAdd"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_27/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/BiasAdd"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_27"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_28"
  input: "training/RMSprop/gradients/zeros_27/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_27"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_28"
  op: "Switch"
  input: "batch_normalization_20/beta/read"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_29"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_28:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_28/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_28"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_29"
  input: "training/RMSprop/gradients/zeros_28/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/sub/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/sub_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_28"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_20/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_20/cond/batchnorm/mul_2/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_18/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_20/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "separable_conv2d_18/BiasAdd"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_32"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_32"
  input: "batch_normalization_20/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_32"
  input: "batch_normalization_20/cond/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_33"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/sub/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/sub_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_20/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_20/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_29"
  op: "Switch"
  input: "batch_normalization_20/gamma/read"
  input: "batch_normalization_20/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_30"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_29:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_29/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_29"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_30"
  input: "training/RMSprop/gradients/zeros_29/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_grad/Mul_1"
  input: "training/RMSprop/gradients/zeros_29"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/Squeeze"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_2_grad/Mul"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/Squeeze"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_34"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_34"
  input: "batch_normalization_20/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_34"
  input: "batch_normalization_20/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batch_normalization_20/batchnorm/Rsqrt"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/Rsqrt"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_35"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/Squeeze_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/add_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/Squeeze_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Shape"
  op: "Shape"
  input: "batch_normalization_20/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/add"
  op: "Add"
  input: "batch_normalization_20/moments/variance/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/Squeeze_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "batch_normalization_20/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_18/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/truediv"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/scalar"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "separable_conv2d_18/BiasAdd"
  input: "batch_normalization_20/moments/StopGradient"
  input: "^training/RMSprop/gradients/batch_normalization_20/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_18/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/add"
  op: "Add"
  input: "batch_normalization_20/moments/mean/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/Squeeze_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "separable_conv2d_18/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_36"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_20/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_20/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/SquaredDifference_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_20/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_18/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/AddN_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_18/separable_conv2d_grad/ShapeN"
  op: "ShapeN"
  input: "separable_conv2d_18/separable_conv2d/depthwise"
  input: "separable_conv2d_18/pointwise_kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/separable_conv2d"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_18/separable_conv2d_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/separable_conv2d"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_18/separable_conv2d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/separable_conv2d_18/separable_conv2d_grad/ShapeN"
  input: "separable_conv2d_18/pointwise_kernel/read"
  input: "training/RMSprop/gradients/AddN_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/separable_conv2d"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_18/separable_conv2d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "separable_conv2d_18/separable_conv2d/depthwise"
  input: "training/RMSprop/gradients/separable_conv2d_18/separable_conv2d_grad/Const"
  input: "training/RMSprop/gradients/AddN_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/separable_conv2d"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_18/separable_conv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "activation_19/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_18/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "training/RMSprop/gradients/separable_conv2d_18/separable_conv2d/depthwise_grad/Shape"
  input: "separable_conv2d_18/depthwise_kernel/read"
  input: "training/RMSprop/gradients/separable_conv2d_18/separable_conv2d_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_18/separable_conv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_18/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "activation_19/Elu"
  input: "training/RMSprop/gradients/separable_conv2d_18/separable_conv2d/depthwise_grad/Shape_1"
  input: "training/RMSprop/gradients/separable_conv2d_18/separable_conv2d_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/activation_19/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "training/RMSprop/gradients/separable_conv2d_18/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "activation_19/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_19/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training/RMSprop/gradients/activation_19/Elu_grad/EluGrad"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_19/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_19/cond/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_30"
  op: "Switch"
  input: "batch_normalization_19/batchnorm/add_1"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_31"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_30/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_30"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_31"
  input: "training/RMSprop/gradients/zeros_30/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/zeros_30"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/Merge_grad/cond_grad:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_19/cond/batchnorm/mul_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_19/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "batch_normalization_19/cond/batchnorm/mul_1/Switch"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_19/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_31"
  op: "Switch"
  input: "separable_conv2d_17/BiasAdd"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_32"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_31:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/BiasAdd"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_31/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/BiasAdd"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_31"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_32"
  input: "training/RMSprop/gradients/zeros_31/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_31"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_32"
  op: "Switch"
  input: "batch_normalization_19/beta/read"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_33"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_32:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_32/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_32"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_33"
  input: "training/RMSprop/gradients/zeros_32/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/sub/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/sub_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_32"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_19/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_19/cond/batchnorm/mul_2/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_17/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_19/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "separable_conv2d_17/BiasAdd"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_37"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_37"
  input: "batch_normalization_19/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_37"
  input: "batch_normalization_19/cond/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_38"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/sub/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/sub_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_19/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_19/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_33"
  op: "Switch"
  input: "batch_normalization_19/gamma/read"
  input: "batch_normalization_19/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_34"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_33:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_33/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_33"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_34"
  input: "training/RMSprop/gradients/zeros_33/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_grad/Mul_1"
  input: "training/RMSprop/gradients/zeros_33"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/Squeeze"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_2_grad/Mul"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/Squeeze"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_39"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_39"
  input: "batch_normalization_19/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_39"
  input: "batch_normalization_19/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batch_normalization_19/batchnorm/Rsqrt"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/Rsqrt"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_40"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/Squeeze_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/add_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/Squeeze_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Shape"
  op: "Shape"
  input: "batch_normalization_19/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/add"
  op: "Add"
  input: "batch_normalization_19/moments/variance/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/Squeeze_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "batch_normalization_19/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_17/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/truediv"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/scalar"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "separable_conv2d_17/BiasAdd"
  input: "batch_normalization_19/moments/StopGradient"
  input: "^training/RMSprop/gradients/batch_normalization_19/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_17/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/add"
  op: "Add"
  input: "batch_normalization_19/moments/mean/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/Squeeze_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "separable_conv2d_17/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_41"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_19/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_19/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/SquaredDifference_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_19/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_17/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/AddN_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_17/separable_conv2d_grad/ShapeN"
  op: "ShapeN"
  input: "separable_conv2d_17/separable_conv2d/depthwise"
  input: "separable_conv2d_17/pointwise_kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/separable_conv2d"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_17/separable_conv2d_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/separable_conv2d"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_17/separable_conv2d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/separable_conv2d_17/separable_conv2d_grad/ShapeN"
  input: "separable_conv2d_17/pointwise_kernel/read"
  input: "training/RMSprop/gradients/AddN_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/separable_conv2d"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_17/separable_conv2d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "separable_conv2d_17/separable_conv2d/depthwise"
  input: "training/RMSprop/gradients/separable_conv2d_17/separable_conv2d_grad/Const"
  input: "training/RMSprop/gradients/AddN_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/separable_conv2d"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_17/separable_conv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "activation_18/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_17/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "training/RMSprop/gradients/separable_conv2d_17/separable_conv2d/depthwise_grad/Shape"
  input: "separable_conv2d_17/depthwise_kernel/read"
  input: "training/RMSprop/gradients/separable_conv2d_17/separable_conv2d_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_17/separable_conv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_17/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "activation_18/Elu"
  input: "training/RMSprop/gradients/separable_conv2d_17/separable_conv2d/depthwise_grad/Shape_1"
  input: "training/RMSprop/gradients/separable_conv2d_17/separable_conv2d_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/activation_18/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "training/RMSprop/gradients/separable_conv2d_17/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "activation_18/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_18/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training/RMSprop/gradients/activation_18/Elu_grad/EluGrad"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_18/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_18/cond/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_34"
  op: "Switch"
  input: "batch_normalization_18/batchnorm/add_1"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_35"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_34/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_34"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_35"
  input: "training/RMSprop/gradients/zeros_34/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/zeros_34"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/Merge_grad/cond_grad:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_18/cond/batchnorm/mul_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_18/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "batch_normalization_18/cond/batchnorm/mul_1/Switch"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_18/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_35"
  op: "Switch"
  input: "separable_conv2d_16/BiasAdd"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_36"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_35:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/BiasAdd"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_35/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/BiasAdd"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_35"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_36"
  input: "training/RMSprop/gradients/zeros_35/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_35"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_36"
  op: "Switch"
  input: "batch_normalization_18/beta/read"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_37"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_36:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_36/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_36"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_37"
  input: "training/RMSprop/gradients/zeros_36/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/sub/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/sub_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_36"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_18/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_18/cond/batchnorm/mul_2/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_16/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_18/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "separable_conv2d_16/BiasAdd"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_42"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_42"
  input: "batch_normalization_18/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_42"
  input: "batch_normalization_18/cond/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_43"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/sub/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/sub_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_18/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_18/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_37"
  op: "Switch"
  input: "batch_normalization_18/gamma/read"
  input: "batch_normalization_18/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_38"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_37:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_37/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_37"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_38"
  input: "training/RMSprop/gradients/zeros_37/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_grad/Mul_1"
  input: "training/RMSprop/gradients/zeros_37"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/Squeeze"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_2_grad/Mul"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/Squeeze"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_44"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_44"
  input: "batch_normalization_18/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_44"
  input: "batch_normalization_18/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batch_normalization_18/batchnorm/Rsqrt"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/Rsqrt"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_45"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/Squeeze_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/add_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/Squeeze_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Shape"
  op: "Shape"
  input: "batch_normalization_18/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/add"
  op: "Add"
  input: "batch_normalization_18/moments/variance/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/Squeeze_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "batch_normalization_18/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_16/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/truediv"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/scalar"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "separable_conv2d_16/BiasAdd"
  input: "batch_normalization_18/moments/StopGradient"
  input: "^training/RMSprop/gradients/batch_normalization_18/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_16/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/add"
  op: "Add"
  input: "batch_normalization_18/moments/mean/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/Squeeze_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "separable_conv2d_16/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_46"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_18/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_18/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/SquaredDifference_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_18/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_16/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/AddN_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_16/separable_conv2d_grad/ShapeN"
  op: "ShapeN"
  input: "separable_conv2d_16/separable_conv2d/depthwise"
  input: "separable_conv2d_16/pointwise_kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/separable_conv2d"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_16/separable_conv2d_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/separable_conv2d"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_16/separable_conv2d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/separable_conv2d_16/separable_conv2d_grad/ShapeN"
  input: "separable_conv2d_16/pointwise_kernel/read"
  input: "training/RMSprop/gradients/AddN_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/separable_conv2d"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_16/separable_conv2d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "separable_conv2d_16/separable_conv2d/depthwise"
  input: "training/RMSprop/gradients/separable_conv2d_16/separable_conv2d_grad/Const"
  input: "training/RMSprop/gradients/AddN_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/separable_conv2d"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_16/separable_conv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "activation_17/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_16/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "training/RMSprop/gradients/separable_conv2d_16/separable_conv2d/depthwise_grad/Shape"
  input: "separable_conv2d_16/depthwise_kernel/read"
  input: "training/RMSprop/gradients/separable_conv2d_16/separable_conv2d_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_16/separable_conv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_16/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "activation_17/Elu"
  input: "training/RMSprop/gradients/separable_conv2d_16/separable_conv2d/depthwise_grad/Shape_1"
  input: "training/RMSprop/gradients/separable_conv2d_16/separable_conv2d_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/activation_17/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "training/RMSprop/gradients/separable_conv2d_16/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "activation_17/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_17/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training/RMSprop/gradients/activation_17/Elu_grad/EluGrad"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_17/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_17/cond/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_38"
  op: "Switch"
  input: "batch_normalization_17/batchnorm/add_1"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_39"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_38/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_38"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_39"
  input: "training/RMSprop/gradients/zeros_38/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/zeros_38"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/Merge_grad/cond_grad:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_17/cond/batchnorm/mul_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_17/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "batch_normalization_17/cond/batchnorm/mul_1/Switch"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_17/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_39"
  op: "Switch"
  input: "separable_conv2d_15/BiasAdd"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_40"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_39:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/BiasAdd"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_39/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/BiasAdd"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_39"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_40"
  input: "training/RMSprop/gradients/zeros_39/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_39"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_40"
  op: "Switch"
  input: "batch_normalization_17/beta/read"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_41"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_40:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_40/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_40"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_41"
  input: "training/RMSprop/gradients/zeros_40/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/sub/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/sub_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_40"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_17/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_17/cond/batchnorm/mul_2/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_15/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_17/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "separable_conv2d_15/BiasAdd"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_47"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_47"
  input: "batch_normalization_17/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_47"
  input: "batch_normalization_17/cond/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_48"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/sub/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/sub_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_17/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_17/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_41"
  op: "Switch"
  input: "batch_normalization_17/gamma/read"
  input: "batch_normalization_17/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_42"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_41:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_41/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_41"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_42"
  input: "training/RMSprop/gradients/zeros_41/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_grad/Mul_1"
  input: "training/RMSprop/gradients/zeros_41"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/Squeeze"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_2_grad/Mul"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/Squeeze"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_49"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_49"
  input: "batch_normalization_17/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_49"
  input: "batch_normalization_17/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batch_normalization_17/batchnorm/Rsqrt"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/Rsqrt"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_50"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/Squeeze_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/add_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/Squeeze_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Shape"
  op: "Shape"
  input: "batch_normalization_17/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/add"
  op: "Add"
  input: "batch_normalization_17/moments/variance/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/Squeeze_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "batch_normalization_17/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_15/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/truediv"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/scalar"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "separable_conv2d_15/BiasAdd"
  input: "batch_normalization_17/moments/StopGradient"
  input: "^training/RMSprop/gradients/batch_normalization_17/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_15/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/add"
  op: "Add"
  input: "batch_normalization_17/moments/mean/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/Squeeze_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "separable_conv2d_15/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_51"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_17/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_17/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/SquaredDifference_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_17/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_15/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/AddN_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_15/separable_conv2d_grad/ShapeN"
  op: "ShapeN"
  input: "separable_conv2d_15/separable_conv2d/depthwise"
  input: "separable_conv2d_15/pointwise_kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/separable_conv2d"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_15/separable_conv2d_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/separable_conv2d"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_15/separable_conv2d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/separable_conv2d_15/separable_conv2d_grad/ShapeN"
  input: "separable_conv2d_15/pointwise_kernel/read"
  input: "training/RMSprop/gradients/AddN_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/separable_conv2d"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_15/separable_conv2d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "separable_conv2d_15/separable_conv2d/depthwise"
  input: "training/RMSprop/gradients/separable_conv2d_15/separable_conv2d_grad/Const"
  input: "training/RMSprop/gradients/AddN_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/separable_conv2d"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_15/separable_conv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "activation_16/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_15/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "training/RMSprop/gradients/separable_conv2d_15/separable_conv2d/depthwise_grad/Shape"
  input: "separable_conv2d_15/depthwise_kernel/read"
  input: "training/RMSprop/gradients/separable_conv2d_15/separable_conv2d_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_15/separable_conv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_15/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "activation_16/Elu"
  input: "training/RMSprop/gradients/separable_conv2d_15/separable_conv2d/depthwise_grad/Shape_1"
  input: "training/RMSprop/gradients/separable_conv2d_15/separable_conv2d_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/activation_16/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "training/RMSprop/gradients/separable_conv2d_15/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "activation_16/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_16/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training/RMSprop/gradients/activation_16/Elu_grad/EluGrad"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_16/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_16/cond/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_42"
  op: "Switch"
  input: "batch_normalization_16/batchnorm/add_1"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_43"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_42/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_42"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_43"
  input: "training/RMSprop/gradients/zeros_42/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/zeros_42"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/Merge_grad/cond_grad:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_16/cond/batchnorm/mul_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_16/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "batch_normalization_16/cond/batchnorm/mul_1/Switch"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_16/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_43"
  op: "Switch"
  input: "separable_conv2d_14/BiasAdd"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_44"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_43:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/BiasAdd"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_43/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/BiasAdd"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_43"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_44"
  input: "training/RMSprop/gradients/zeros_43/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_43"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_44"
  op: "Switch"
  input: "batch_normalization_16/beta/read"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_45"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_44:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_44/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_44"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_45"
  input: "training/RMSprop/gradients/zeros_44/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/sub/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/sub_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_44"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_16/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_16/cond/batchnorm/mul_2/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_14/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_16/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "separable_conv2d_14/BiasAdd"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_52"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_52"
  input: "batch_normalization_16/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_52"
  input: "batch_normalization_16/cond/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_53"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/sub/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/sub_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_16/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_16/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_45"
  op: "Switch"
  input: "batch_normalization_16/gamma/read"
  input: "batch_normalization_16/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_46"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_45:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_45/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_45"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_46"
  input: "training/RMSprop/gradients/zeros_45/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_grad/Mul_1"
  input: "training/RMSprop/gradients/zeros_45"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/Squeeze"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_2_grad/Mul"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/Squeeze"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_54"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_54"
  input: "batch_normalization_16/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_54"
  input: "batch_normalization_16/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batch_normalization_16/batchnorm/Rsqrt"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/Rsqrt"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_55"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/Squeeze_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/add_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/Squeeze_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Shape"
  op: "Shape"
  input: "batch_normalization_16/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/add"
  op: "Add"
  input: "batch_normalization_16/moments/variance/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/Squeeze_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "batch_normalization_16/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_14/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/truediv"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/scalar"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "separable_conv2d_14/BiasAdd"
  input: "batch_normalization_16/moments/StopGradient"
  input: "^training/RMSprop/gradients/batch_normalization_16/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_14/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/add"
  op: "Add"
  input: "batch_normalization_16/moments/mean/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/Squeeze_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "separable_conv2d_14/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_56"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_16/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_16/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/SquaredDifference_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_16/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_14/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/AddN_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_14/separable_conv2d_grad/ShapeN"
  op: "ShapeN"
  input: "separable_conv2d_14/separable_conv2d/depthwise"
  input: "separable_conv2d_14/pointwise_kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/separable_conv2d"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_14/separable_conv2d_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/separable_conv2d"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_14/separable_conv2d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/separable_conv2d_14/separable_conv2d_grad/ShapeN"
  input: "separable_conv2d_14/pointwise_kernel/read"
  input: "training/RMSprop/gradients/AddN_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/separable_conv2d"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_14/separable_conv2d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "separable_conv2d_14/separable_conv2d/depthwise"
  input: "training/RMSprop/gradients/separable_conv2d_14/separable_conv2d_grad/Const"
  input: "training/RMSprop/gradients/AddN_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/separable_conv2d"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_14/separable_conv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "max_pooling2d_4/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_14/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "training/RMSprop/gradients/separable_conv2d_14/separable_conv2d/depthwise_grad/Shape"
  input: "separable_conv2d_14/depthwise_kernel/read"
  input: "training/RMSprop/gradients/separable_conv2d_14/separable_conv2d_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_14/separable_conv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_14/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "max_pooling2d_4/MaxPool"
  input: "training/RMSprop/gradients/separable_conv2d_14/separable_conv2d/depthwise_grad/Shape_1"
  input: "training/RMSprop/gradients/separable_conv2d_14/separable_conv2d_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/max_pooling2d_4/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "activation_15/Elu"
  input: "max_pooling2d_4/MaxPool"
  input: "training/RMSprop/gradients/separable_conv2d_14/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_4/MaxPool"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/activation_15/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "training/RMSprop/gradients/max_pooling2d_4/MaxPool_grad/MaxPoolGrad"
  input: "activation_15/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_15/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training/RMSprop/gradients/activation_15/Elu_grad/EluGrad"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_15/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_15/cond/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_46"
  op: "Switch"
  input: "batch_normalization_15/batchnorm/add_1"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_47"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_46/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_46"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_47"
  input: "training/RMSprop/gradients/zeros_46/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/zeros_46"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/Merge_grad/cond_grad:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_15/cond/batchnorm/mul_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_15/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "batch_normalization_15/cond/batchnorm/mul_1/Switch"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_15/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_47"
  op: "Switch"
  input: "separable_conv2d_13/BiasAdd"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_48"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_47:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/BiasAdd"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_47/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/BiasAdd"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_47"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_48"
  input: "training/RMSprop/gradients/zeros_47/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_47"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_48"
  op: "Switch"
  input: "batch_normalization_15/beta/read"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_49"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_48:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_48/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_48"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_49"
  input: "training/RMSprop/gradients/zeros_48/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/sub/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/sub_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_48"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_15/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_15/cond/batchnorm/mul_2/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_13/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_15/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "separable_conv2d_13/BiasAdd"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_57"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_57"
  input: "batch_normalization_15/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_57"
  input: "batch_normalization_15/cond/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_58"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/sub/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/sub_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_15/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_15/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_49"
  op: "Switch"
  input: "batch_normalization_15/gamma/read"
  input: "batch_normalization_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_50"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_49:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_49/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_49"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_50"
  input: "training/RMSprop/gradients/zeros_49/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_grad/Mul_1"
  input: "training/RMSprop/gradients/zeros_49"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/Squeeze"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_2_grad/Mul"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/Squeeze"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_59"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_59"
  input: "batch_normalization_15/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_59"
  input: "batch_normalization_15/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batch_normalization_15/batchnorm/Rsqrt"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/Rsqrt"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_60"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/Squeeze_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/add_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/Squeeze_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Shape"
  op: "Shape"
  input: "batch_normalization_15/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/add"
  op: "Add"
  input: "batch_normalization_15/moments/variance/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/Squeeze_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "batch_normalization_15/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_13/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/truediv"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/scalar"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "separable_conv2d_13/BiasAdd"
  input: "batch_normalization_15/moments/StopGradient"
  input: "^training/RMSprop/gradients/batch_normalization_15/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Shape"
  op: "Shape"
  input: "separable_conv2d_13/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/add"
  op: "Add"
  input: "batch_normalization_15/moments/mean/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/Squeeze_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "separable_conv2d_13/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_61"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_15/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_15/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/SquaredDifference_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_15/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_13/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/AddN_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_13/separable_conv2d_grad/ShapeN"
  op: "ShapeN"
  input: "separable_conv2d_13/separable_conv2d/depthwise"
  input: "separable_conv2d_13/pointwise_kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/separable_conv2d"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_13/separable_conv2d_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/separable_conv2d"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_13/separable_conv2d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/separable_conv2d_13/separable_conv2d_grad/ShapeN"
  input: "separable_conv2d_13/pointwise_kernel/read"
  input: "training/RMSprop/gradients/AddN_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/separable_conv2d"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_13/separable_conv2d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "separable_conv2d_13/separable_conv2d/depthwise"
  input: "training/RMSprop/gradients/separable_conv2d_13/separable_conv2d_grad/Const"
  input: "training/RMSprop/gradients/AddN_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/separable_conv2d"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_13/separable_conv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "max_pooling2d_3/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_13/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "training/RMSprop/gradients/separable_conv2d_13/separable_conv2d/depthwise_grad/Shape"
  input: "separable_conv2d_13/depthwise_kernel/read"
  input: "training/RMSprop/gradients/separable_conv2d_13/separable_conv2d_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_13/separable_conv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/separable_conv2d_13/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "max_pooling2d_3/MaxPool"
  input: "training/RMSprop/gradients/separable_conv2d_13/separable_conv2d/depthwise_grad/Shape_1"
  input: "training/RMSprop/gradients/separable_conv2d_13/separable_conv2d_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/separable_conv2d/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/max_pooling2d_3/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "activation_14/Elu"
  input: "max_pooling2d_3/MaxPool"
  input: "training/RMSprop/gradients/separable_conv2d_13/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_3/MaxPool"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/activation_14/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "training/RMSprop/gradients/max_pooling2d_3/MaxPool_grad/MaxPoolGrad"
  input: "activation_14/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_14/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training/RMSprop/gradients/activation_14/Elu_grad/EluGrad"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_14/Elu"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_14/cond/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/Merge_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_50"
  op: "Switch"
  input: "batch_normalization_14/batchnorm/add_1"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_51"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_50/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_50"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_51"
  input: "training/RMSprop/gradients/zeros_50/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/zeros_50"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/Merge_grad/cond_grad:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_14/cond/batchnorm/mul_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_14/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "batch_normalization_14/cond/batchnorm/mul_1/Switch"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_14/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/Switch_1_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_51"
  op: "Switch"
  input: "conv2d_2/BiasAdd"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_52"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_51:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/BiasAdd"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_51/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/BiasAdd"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_51"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_52"
  input: "training/RMSprop/gradients/zeros_51/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_51"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_52"
  op: "Switch"
  input: "batch_normalization_14/beta/read"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_53"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_52:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_52/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_52"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_53"
  input: "training/RMSprop/gradients/zeros_52/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/sub/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/sub_grad/Reshape"
  input: "training/RMSprop/gradients/zeros_52"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_14/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_14/cond/batchnorm/mul_2/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "conv2d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_1_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_14/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_1_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_1_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "conv2d_2/BiasAdd"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_1_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_1_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/sub_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/sub_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/sub_grad/Neg"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_62"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_62"
  input: "batch_normalization_14/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_62"
  input: "batch_normalization_14/cond/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_63"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/sub/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/sub_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_14/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/sub_grad/Reshape_1"
  input: "batch_normalization_14/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Switch_53"
  op: "Switch"
  input: "batch_normalization_14/gamma/read"
  input: "batch_normalization_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/Shape_54"
  op: "Shape"
  input: "training/RMSprop/gradients/Switch_53:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_53/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/zeros_53"
  op: "Fill"
  input: "training/RMSprop/gradients/Shape_54"
  input: "training/RMSprop/gradients/zeros_53/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul/Switch_grad/cond_grad"
  op: "Merge"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_grad/Mul_1"
  input: "training/RMSprop/gradients/zeros_53"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/Squeeze"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_2_grad/Mul"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/Squeeze"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_64"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_1_grad/Reshape_1"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_64"
  input: "batch_normalization_14/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/AddN_64"
  input: "batch_normalization_14/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batch_normalization_14/batchnorm/Rsqrt"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/Rsqrt"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_65"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/batchnorm/add"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/Squeeze_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/add_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/Squeeze_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Shape"
  op: "Shape"
  input: "batch_normalization_14/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/add"
  op: "Add"
  input: "batch_normalization_14/moments/variance/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/Squeeze_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "batch_normalization_14/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/variance"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "conv2d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/truediv"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/scalar"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "conv2d_2/BiasAdd"
  input: "batch_normalization_14/moments/StopGradient"
  input: "^training/RMSprop/gradients/batch_normalization_14/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/mul"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/Sum"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/Sum_1"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Shape"
  op: "Shape"
  input: "conv2d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/add"
  op: "Add"
  input: "batch_normalization_14/moments/mean/reduction_indices"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/mod"
  op: "FloorMod"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/add"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/range"
  op: "Range"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/range/start"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Size"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Shape_1"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/range"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/mod"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/DynamicStitch"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Shape"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/Squeeze_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "conv2d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Prod"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Shape_2"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Shape_3"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Prod_1"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Prod"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Cast"
  op: "Cast"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Tile"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moments/mean"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/AddN_66"
  op: "AddN"
  input: "training/RMSprop/gradients/batch_normalization_14/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  input: "training/RMSprop/gradients/batch_normalization_14/batchnorm/mul_1_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/SquaredDifference_grad/Reshape"
  input: "training/RMSprop/gradients/batch_normalization_14/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/BiasAdd"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/conv2d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/AddN_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/conv2d_2/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_2_input"
  input: "conv2d_2/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/conv2d_2/convolution_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/convolution"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/conv2d_2/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/conv2d_2/convolution_grad/ShapeN"
  input: "conv2d_2/kernel/read"
  input: "training/RMSprop/gradients/AddN_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/conv2d_2/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv2d_2_input"
  input: "training/RMSprop/gradients/conv2d_2/convolution_grad/Const"
  input: "training/RMSprop/gradients/AddN_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable/read"
  op: "Identity"
  input: "training/RMSprop/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_1/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_1"
  input: "training/RMSprop/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_1/read"
  op: "Identity"
  input: "training/RMSprop/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_1"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_2"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_2/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_2"
  input: "training/RMSprop/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_2/read"
  op: "Identity"
  input: "training/RMSprop/Variable_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_2"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_3"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_3/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_3"
  input: "training/RMSprop/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_3/read"
  op: "Identity"
  input: "training/RMSprop/Variable_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_3"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_4"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_4/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_4"
  input: "training/RMSprop/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_4/read"
  op: "Identity"
  input: "training/RMSprop/Variable_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_4"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_5"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_5/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_5"
  input: "training/RMSprop/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_5/read"
  op: "Identity"
  input: "training/RMSprop/Variable_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_5"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_6"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_6/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_6"
  input: "training/RMSprop/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_6"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_6/read"
  op: "Identity"
  input: "training/RMSprop/Variable_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_6"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_7"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_7/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_7"
  input: "training/RMSprop/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_7"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_7/read"
  op: "Identity"
  input: "training/RMSprop/Variable_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_7"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_8"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_8/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_8"
  input: "training/RMSprop/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_8"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_8/read"
  op: "Identity"
  input: "training/RMSprop/Variable_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_8"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_9"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_9/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_9"
  input: "training/RMSprop/Const_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_9"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_9/read"
  op: "Identity"
  input: "training/RMSprop/Variable_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_9"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_10"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_10/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_10"
  input: "training/RMSprop/Const_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_10"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_10/read"
  op: "Identity"
  input: "training/RMSprop/Variable_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_10"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_11"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_11/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_11"
  input: "training/RMSprop/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_11"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_11/read"
  op: "Identity"
  input: "training/RMSprop/Variable_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_11"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_12"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_12/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_12"
  input: "training/RMSprop/Const_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_12"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_12/read"
  op: "Identity"
  input: "training/RMSprop/Variable_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_12"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_13"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_13/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_13"
  input: "training/RMSprop/Const_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_13"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_13/read"
  op: "Identity"
  input: "training/RMSprop/Variable_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_13"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_14"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_14/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_14"
  input: "training/RMSprop/Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_14"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_14/read"
  op: "Identity"
  input: "training/RMSprop/Variable_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_14"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_15"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_15/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_15"
  input: "training/RMSprop/Const_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_15"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_15/read"
  op: "Identity"
  input: "training/RMSprop/Variable_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_15"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_16"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_16"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_16/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_16"
  input: "training/RMSprop/Const_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_16"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_16/read"
  op: "Identity"
  input: "training/RMSprop/Variable_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_16"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_17"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_17/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_17"
  input: "training/RMSprop/Const_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_17"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_17/read"
  op: "Identity"
  input: "training/RMSprop/Variable_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_17"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_18"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_18/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_18"
  input: "training/RMSprop/Const_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_18"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_18/read"
  op: "Identity"
  input: "training/RMSprop/Variable_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_18"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_19"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_19"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_19/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_19"
  input: "training/RMSprop/Const_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_19"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_19/read"
  op: "Identity"
  input: "training/RMSprop/Variable_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_19"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_20"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_20/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_20"
  input: "training/RMSprop/Const_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_20"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_20/read"
  op: "Identity"
  input: "training/RMSprop/Variable_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_20"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_21"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_21/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_21"
  input: "training/RMSprop/Const_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_21"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_21/read"
  op: "Identity"
  input: "training/RMSprop/Variable_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_21"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_22"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_22"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_22/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_22"
  input: "training/RMSprop/Const_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_22"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_22/read"
  op: "Identity"
  input: "training/RMSprop/Variable_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_22"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_23"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_23/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_23"
  input: "training/RMSprop/Const_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_23"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_23/read"
  op: "Identity"
  input: "training/RMSprop/Variable_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_23"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_24"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_24/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_24"
  input: "training/RMSprop/Const_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_24"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_24/read"
  op: "Identity"
  input: "training/RMSprop/Variable_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_24"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_25"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_25"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_25/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_25"
  input: "training/RMSprop/Const_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_25"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_25/read"
  op: "Identity"
  input: "training/RMSprop/Variable_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_25"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_26"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_26/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_26"
  input: "training/RMSprop/Const_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_26"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_26/read"
  op: "Identity"
  input: "training/RMSprop/Variable_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_26"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_27"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_27/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_27"
  input: "training/RMSprop/Const_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_27"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_27/read"
  op: "Identity"
  input: "training/RMSprop/Variable_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_27"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_28"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_28"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_28/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_28"
  input: "training/RMSprop/Const_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_28"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_28/read"
  op: "Identity"
  input: "training/RMSprop/Variable_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_28"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_29"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_29/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_29"
  input: "training/RMSprop/Const_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_29"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_29/read"
  op: "Identity"
  input: "training/RMSprop/Variable_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_29"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_30"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_30/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_30"
  input: "training/RMSprop/Const_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_30"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_30/read"
  op: "Identity"
  input: "training/RMSprop/Variable_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_30"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_31"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_31"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_31/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_31"
  input: "training/RMSprop/Const_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_31"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_31/read"
  op: "Identity"
  input: "training/RMSprop/Variable_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_31"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_32"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_32/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_32"
  input: "training/RMSprop/Const_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_32"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_32/read"
  op: "Identity"
  input: "training/RMSprop/Variable_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_32"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_33"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_33/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_33"
  input: "training/RMSprop/Const_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_33"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_33/read"
  op: "Identity"
  input: "training/RMSprop/Variable_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_33"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_34"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_34"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_34/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_34"
  input: "training/RMSprop/Const_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_34"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_34/read"
  op: "Identity"
  input: "training/RMSprop/Variable_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_34"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_35"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_35/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_35"
  input: "training/RMSprop/Const_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_35"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_35/read"
  op: "Identity"
  input: "training/RMSprop/Variable_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_35"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_36"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_36/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_36"
  input: "training/RMSprop/Const_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_36"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_36/read"
  op: "Identity"
  input: "training/RMSprop/Variable_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_36"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_37"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_37"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_37/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_37"
  input: "training/RMSprop/Const_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_37"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_37/read"
  op: "Identity"
  input: "training/RMSprop/Variable_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_37"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_38"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_38"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_38/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_38"
  input: "training/RMSprop/Const_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_38"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_38/read"
  op: "Identity"
  input: "training/RMSprop/Variable_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_38"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_39"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_39/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_39"
  input: "training/RMSprop/Const_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_39"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_39/read"
  op: "Identity"
  input: "training/RMSprop/Variable_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_39"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_40"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_40"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_40/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_40"
  input: "training/RMSprop/Const_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_40"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_40/read"
  op: "Identity"
  input: "training/RMSprop/Variable_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_40"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_41"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_41/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_41"
  input: "training/RMSprop/Const_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_41"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_41/read"
  op: "Identity"
  input: "training/RMSprop/Variable_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_41"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_42"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_42"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_42/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_42"
  input: "training/RMSprop/Const_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_42"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_42/read"
  op: "Identity"
  input: "training/RMSprop/Variable_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_42"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_43"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_43"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_43/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_43"
  input: "training/RMSprop/Const_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_43"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_43/read"
  op: "Identity"
  input: "training/RMSprop/Variable_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_43"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_44"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_44"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_44/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_44"
  input: "training/RMSprop/Const_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_44"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_44/read"
  op: "Identity"
  input: "training/RMSprop/Variable_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_44"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_45"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_45"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_45/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_45"
  input: "training/RMSprop/Const_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_45"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_45/read"
  op: "Identity"
  input: "training/RMSprop/Variable_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_45"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_46"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_46"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_46/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_46"
  input: "training/RMSprop/Const_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_46"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_46/read"
  op: "Identity"
  input: "training/RMSprop/Variable_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_46"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_47"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_47/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_47"
  input: "training/RMSprop/Const_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_47"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_47/read"
  op: "Identity"
  input: "training/RMSprop/Variable_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_47"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_48"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_48"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_48/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_48"
  input: "training/RMSprop/Const_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_48"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_48/read"
  op: "Identity"
  input: "training/RMSprop/Variable_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_48"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_49"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_49"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_49/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_49"
  input: "training/RMSprop/Const_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_49"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_49/read"
  op: "Identity"
  input: "training/RMSprop/Variable_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_49"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_50"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_50"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_50/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_50"
  input: "training/RMSprop/Const_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_50"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_50/read"
  op: "Identity"
  input: "training/RMSprop/Variable_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_50"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_51"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_51"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_51/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_51"
  input: "training/RMSprop/Const_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_51"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_51/read"
  op: "Identity"
  input: "training/RMSprop/Variable_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_51"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_52"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_52"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_52/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_52"
  input: "training/RMSprop/Const_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_52"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_52/read"
  op: "Identity"
  input: "training/RMSprop/Variable_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_52"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_53"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_53/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_53"
  input: "training/RMSprop/Const_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_53"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_53/read"
  op: "Identity"
  input: "training/RMSprop/Variable_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_53"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_54"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_54"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_54/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_54"
  input: "training/RMSprop/Const_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_54"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_54/read"
  op: "Identity"
  input: "training/RMSprop/Variable_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_54"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_55"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_55"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_55/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_55"
  input: "training/RMSprop/Const_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_55"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_55/read"
  op: "Identity"
  input: "training/RMSprop/Variable_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_55"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_56"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_56"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_56/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_56"
  input: "training/RMSprop/Const_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_56"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_56/read"
  op: "Identity"
  input: "training/RMSprop/Variable_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_56"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_57"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_57"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_57/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_57"
  input: "training/RMSprop/Const_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_57"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_57/read"
  op: "Identity"
  input: "training/RMSprop/Variable_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_57"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_58"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_58"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_58/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_58"
  input: "training/RMSprop/Const_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_58"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_58/read"
  op: "Identity"
  input: "training/RMSprop/Variable_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_58"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_59"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_59/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_59"
  input: "training/RMSprop/Const_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_59"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_59/read"
  op: "Identity"
  input: "training/RMSprop/Variable_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_59"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_60"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_60"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_60/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_60"
  input: "training/RMSprop/Const_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_60"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_60/read"
  op: "Identity"
  input: "training/RMSprop/Variable_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_60"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_61"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_61"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_61/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_61"
  input: "training/RMSprop/Const_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_61"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_61/read"
  op: "Identity"
  input: "training/RMSprop/Variable_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_61"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_62"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_62"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_62/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_62"
  input: "training/RMSprop/Const_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_62"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_62/read"
  op: "Identity"
  input: "training/RMSprop/Variable_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_62"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_63"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_63"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_63/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_63"
  input: "training/RMSprop/Const_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_63"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_63/read"
  op: "Identity"
  input: "training/RMSprop/Variable_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_63"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_64"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_64"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_64/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_64"
  input: "training/RMSprop/Const_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_64"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_64/read"
  op: "Identity"
  input: "training/RMSprop/Variable_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_64"
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Variable_65"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/RMSprop/Variable_65/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable_65"
  input: "training/RMSprop/Const_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_65"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/Variable_65/read"
  op: "Identity"
  input: "training/RMSprop/Variable_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_65"
      }
    }
  }
}
node {
  name: "training/RMSprop/AssignAdd/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/AssignAdd"
  op: "AssignAdd"
  input: "RMSprop/iterations"
  input: "training/RMSprop/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/iterations"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/mul"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub"
  op: "Sub"
  input: "training/RMSprop/sub/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square"
  op: "Square"
  input: "training/RMSprop/gradients/conv2d_2/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add"
  op: "Add"
  input: "training/RMSprop/mul"
  input: "training/RMSprop/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign"
  op: "Assign"
  input: "training/RMSprop/Variable"
  input: "training/RMSprop/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_2"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/conv2d_2/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_66"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_67"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add"
  input: "training/RMSprop/Const_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value/Minimum"
  input: "training/RMSprop/Const_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_1"
  op: "Add"
  input: "training/RMSprop/Sqrt"
  input: "training/RMSprop/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv"
  op: "RealDiv"
  input: "training/RMSprop/mul_2"
  input: "training/RMSprop/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_1"
  op: "Sub"
  input: "conv2d_2/kernel/read"
  input: "training/RMSprop/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_1"
  op: "Assign"
  input: "conv2d_2/kernel"
  input: "training/RMSprop/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_3"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_2"
  op: "Sub"
  input: "training/RMSprop/sub_2/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_1"
  op: "Square"
  input: "training/RMSprop/gradients/conv2d_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_4"
  op: "Mul"
  input: "training/RMSprop/sub_2"
  input: "training/RMSprop/Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_2"
  op: "Add"
  input: "training/RMSprop/mul_3"
  input: "training/RMSprop/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_2"
  op: "Assign"
  input: "training/RMSprop/Variable_1"
  input: "training/RMSprop/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_5"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/conv2d_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_68"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_69"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_2"
  input: "training/RMSprop/Const_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_1"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_1/Minimum"
  input: "training/RMSprop/Const_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_1"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_3"
  op: "Add"
  input: "training/RMSprop/Sqrt_1"
  input: "training/RMSprop/add_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_1"
  op: "RealDiv"
  input: "training/RMSprop/mul_5"
  input: "training/RMSprop/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_3"
  op: "Sub"
  input: "conv2d_2/bias/read"
  input: "training/RMSprop/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_3"
  op: "Assign"
  input: "conv2d_2/bias"
  input: "training/RMSprop/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_6"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_4"
  op: "Sub"
  input: "training/RMSprop/sub_4/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_2"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_7"
  op: "Mul"
  input: "training/RMSprop/sub_4"
  input: "training/RMSprop/Square_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_4"
  op: "Add"
  input: "training/RMSprop/mul_6"
  input: "training/RMSprop/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_4"
  op: "Assign"
  input: "training/RMSprop/Variable_2"
  input: "training/RMSprop/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_8"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_70"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_4"
  input: "training/RMSprop/Const_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_2"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_2/Minimum"
  input: "training/RMSprop/Const_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_2"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_5/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_5"
  op: "Add"
  input: "training/RMSprop/Sqrt_2"
  input: "training/RMSprop/add_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_2"
  op: "RealDiv"
  input: "training/RMSprop/mul_8"
  input: "training/RMSprop/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_5"
  op: "Sub"
  input: "batch_normalization_14/gamma/read"
  input: "training/RMSprop/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_5"
  op: "Assign"
  input: "batch_normalization_14/gamma"
  input: "training/RMSprop/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_9"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_6/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_6"
  op: "Sub"
  input: "training/RMSprop/sub_6/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_3"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_10"
  op: "Mul"
  input: "training/RMSprop/sub_6"
  input: "training/RMSprop/Square_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_6"
  op: "Add"
  input: "training/RMSprop/mul_9"
  input: "training/RMSprop/mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_6"
  op: "Assign"
  input: "training/RMSprop/Variable_3"
  input: "training/RMSprop/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_11"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_72"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_73"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_3/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_6"
  input: "training/RMSprop/Const_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_3"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_3/Minimum"
  input: "training/RMSprop/Const_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_3"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_7/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_7"
  op: "Add"
  input: "training/RMSprop/Sqrt_3"
  input: "training/RMSprop/add_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_3"
  op: "RealDiv"
  input: "training/RMSprop/mul_11"
  input: "training/RMSprop/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_7"
  op: "Sub"
  input: "batch_normalization_14/beta/read"
  input: "training/RMSprop/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_7"
  op: "Assign"
  input: "batch_normalization_14/beta"
  input: "training/RMSprop/sub_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_12"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_4/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_8/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_8"
  op: "Sub"
  input: "training/RMSprop/sub_8/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_4"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_13/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_13"
  op: "Mul"
  input: "training/RMSprop/sub_8"
  input: "training/RMSprop/Square_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_8"
  op: "Add"
  input: "training/RMSprop/mul_12"
  input: "training/RMSprop/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_8"
  op: "Assign"
  input: "training/RMSprop/Variable_4"
  input: "training/RMSprop/add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_14"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_13/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_74"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_75"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_4/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_8"
  input: "training/RMSprop/Const_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_4"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_4/Minimum"
  input: "training/RMSprop/Const_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_4"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_9/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_9"
  op: "Add"
  input: "training/RMSprop/Sqrt_4"
  input: "training/RMSprop/add_9/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_4"
  op: "RealDiv"
  input: "training/RMSprop/mul_14"
  input: "training/RMSprop/add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_9"
  op: "Sub"
  input: "separable_conv2d_13/depthwise_kernel/read"
  input: "training/RMSprop/truediv_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_9"
  op: "Assign"
  input: "separable_conv2d_13/depthwise_kernel"
  input: "training/RMSprop/sub_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_15"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_5/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_10/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_10"
  op: "Sub"
  input: "training/RMSprop/sub_10/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_5"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_13/separable_conv2d_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_16"
  op: "Mul"
  input: "training/RMSprop/sub_10"
  input: "training/RMSprop/Square_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_10"
  op: "Add"
  input: "training/RMSprop/mul_15"
  input: "training/RMSprop/mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_10"
  op: "Assign"
  input: "training/RMSprop/Variable_5"
  input: "training/RMSprop/add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_17"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_13/separable_conv2d_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_76"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_77"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_5/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_10"
  input: "training/RMSprop/Const_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_5"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_5/Minimum"
  input: "training/RMSprop/Const_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_5"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_11/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_11"
  op: "Add"
  input: "training/RMSprop/Sqrt_5"
  input: "training/RMSprop/add_11/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_5"
  op: "RealDiv"
  input: "training/RMSprop/mul_17"
  input: "training/RMSprop/add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_11"
  op: "Sub"
  input: "separable_conv2d_13/pointwise_kernel/read"
  input: "training/RMSprop/truediv_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_11"
  op: "Assign"
  input: "separable_conv2d_13/pointwise_kernel"
  input: "training/RMSprop/sub_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_18"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_6/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_12/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_12"
  op: "Sub"
  input: "training/RMSprop/sub_12/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_6"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_13/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_19"
  op: "Mul"
  input: "training/RMSprop/sub_12"
  input: "training/RMSprop/Square_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_12"
  op: "Add"
  input: "training/RMSprop/mul_18"
  input: "training/RMSprop/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_12"
  op: "Assign"
  input: "training/RMSprop/Variable_6"
  input: "training/RMSprop/add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_6"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_20"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_13/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_78"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_79"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_6/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_12"
  input: "training/RMSprop/Const_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_6"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_6/Minimum"
  input: "training/RMSprop/Const_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_6"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_13/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_13"
  op: "Add"
  input: "training/RMSprop/Sqrt_6"
  input: "training/RMSprop/add_13/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_6"
  op: "RealDiv"
  input: "training/RMSprop/mul_20"
  input: "training/RMSprop/add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_13"
  op: "Sub"
  input: "separable_conv2d_13/bias/read"
  input: "training/RMSprop/truediv_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_13"
  op: "Assign"
  input: "separable_conv2d_13/bias"
  input: "training/RMSprop/sub_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_21"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_7/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_14/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_14"
  op: "Sub"
  input: "training/RMSprop/sub_14/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_7"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_22"
  op: "Mul"
  input: "training/RMSprop/sub_14"
  input: "training/RMSprop/Square_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_14"
  op: "Add"
  input: "training/RMSprop/mul_21"
  input: "training/RMSprop/mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_14"
  op: "Assign"
  input: "training/RMSprop/Variable_7"
  input: "training/RMSprop/add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_7"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_23"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_80"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_81"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_7/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_14"
  input: "training/RMSprop/Const_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_7"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_7/Minimum"
  input: "training/RMSprop/Const_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_7"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_15/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_15"
  op: "Add"
  input: "training/RMSprop/Sqrt_7"
  input: "training/RMSprop/add_15/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_7"
  op: "RealDiv"
  input: "training/RMSprop/mul_23"
  input: "training/RMSprop/add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_15"
  op: "Sub"
  input: "batch_normalization_15/gamma/read"
  input: "training/RMSprop/truediv_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_15"
  op: "Assign"
  input: "batch_normalization_15/gamma"
  input: "training/RMSprop/sub_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_24"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_8/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_16/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_16"
  op: "Sub"
  input: "training/RMSprop/sub_16/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_8"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_25"
  op: "Mul"
  input: "training/RMSprop/sub_16"
  input: "training/RMSprop/Square_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_16"
  op: "Add"
  input: "training/RMSprop/mul_24"
  input: "training/RMSprop/mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_16"
  op: "Assign"
  input: "training/RMSprop/Variable_8"
  input: "training/RMSprop/add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_8"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_26"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_82"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_83"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_8/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_16"
  input: "training/RMSprop/Const_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_8"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_8/Minimum"
  input: "training/RMSprop/Const_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_8"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_17/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_17"
  op: "Add"
  input: "training/RMSprop/Sqrt_8"
  input: "training/RMSprop/add_17/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_8"
  op: "RealDiv"
  input: "training/RMSprop/mul_26"
  input: "training/RMSprop/add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_17"
  op: "Sub"
  input: "batch_normalization_15/beta/read"
  input: "training/RMSprop/truediv_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_17"
  op: "Assign"
  input: "batch_normalization_15/beta"
  input: "training/RMSprop/sub_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_27"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_9/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_18/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_18"
  op: "Sub"
  input: "training/RMSprop/sub_18/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_9"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_14/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_28"
  op: "Mul"
  input: "training/RMSprop/sub_18"
  input: "training/RMSprop/Square_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_18"
  op: "Add"
  input: "training/RMSprop/mul_27"
  input: "training/RMSprop/mul_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_18"
  op: "Assign"
  input: "training/RMSprop/Variable_9"
  input: "training/RMSprop/add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_9"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_29"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_14/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_84"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_85"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_9/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_18"
  input: "training/RMSprop/Const_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_9"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_9/Minimum"
  input: "training/RMSprop/Const_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_9"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_19/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_19"
  op: "Add"
  input: "training/RMSprop/Sqrt_9"
  input: "training/RMSprop/add_19/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_9"
  op: "RealDiv"
  input: "training/RMSprop/mul_29"
  input: "training/RMSprop/add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_19"
  op: "Sub"
  input: "separable_conv2d_14/depthwise_kernel/read"
  input: "training/RMSprop/truediv_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_19"
  op: "Assign"
  input: "separable_conv2d_14/depthwise_kernel"
  input: "training/RMSprop/sub_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_30"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_10/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_20/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_20"
  op: "Sub"
  input: "training/RMSprop/sub_20/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_10"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_14/separable_conv2d_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_31"
  op: "Mul"
  input: "training/RMSprop/sub_20"
  input: "training/RMSprop/Square_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_20"
  op: "Add"
  input: "training/RMSprop/mul_30"
  input: "training/RMSprop/mul_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_20"
  op: "Assign"
  input: "training/RMSprop/Variable_10"
  input: "training/RMSprop/add_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_10"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_32"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_14/separable_conv2d_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_86"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_87"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_10/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_20"
  input: "training/RMSprop/Const_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_10"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_10/Minimum"
  input: "training/RMSprop/Const_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_10"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_21/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_21"
  op: "Add"
  input: "training/RMSprop/Sqrt_10"
  input: "training/RMSprop/add_21/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_10"
  op: "RealDiv"
  input: "training/RMSprop/mul_32"
  input: "training/RMSprop/add_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_21"
  op: "Sub"
  input: "separable_conv2d_14/pointwise_kernel/read"
  input: "training/RMSprop/truediv_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_21"
  op: "Assign"
  input: "separable_conv2d_14/pointwise_kernel"
  input: "training/RMSprop/sub_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_33"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_11/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_22/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_22"
  op: "Sub"
  input: "training/RMSprop/sub_22/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_11"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_14/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_34"
  op: "Mul"
  input: "training/RMSprop/sub_22"
  input: "training/RMSprop/Square_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_22"
  op: "Add"
  input: "training/RMSprop/mul_33"
  input: "training/RMSprop/mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_22"
  op: "Assign"
  input: "training/RMSprop/Variable_11"
  input: "training/RMSprop/add_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_11"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_35"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_14/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_88"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_89"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_11/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_22"
  input: "training/RMSprop/Const_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_11"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_11/Minimum"
  input: "training/RMSprop/Const_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_11"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_23/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_23"
  op: "Add"
  input: "training/RMSprop/Sqrt_11"
  input: "training/RMSprop/add_23/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_11"
  op: "RealDiv"
  input: "training/RMSprop/mul_35"
  input: "training/RMSprop/add_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_23"
  op: "Sub"
  input: "separable_conv2d_14/bias/read"
  input: "training/RMSprop/truediv_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_23"
  op: "Assign"
  input: "separable_conv2d_14/bias"
  input: "training/RMSprop/sub_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_36"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_12/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_24/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_24"
  op: "Sub"
  input: "training/RMSprop/sub_24/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_12"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_37"
  op: "Mul"
  input: "training/RMSprop/sub_24"
  input: "training/RMSprop/Square_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_24"
  op: "Add"
  input: "training/RMSprop/mul_36"
  input: "training/RMSprop/mul_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_24"
  op: "Assign"
  input: "training/RMSprop/Variable_12"
  input: "training/RMSprop/add_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_12"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_38"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_90"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_91"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_12/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_24"
  input: "training/RMSprop/Const_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_12"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_12/Minimum"
  input: "training/RMSprop/Const_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_12"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_25/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_25"
  op: "Add"
  input: "training/RMSprop/Sqrt_12"
  input: "training/RMSprop/add_25/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_12"
  op: "RealDiv"
  input: "training/RMSprop/mul_38"
  input: "training/RMSprop/add_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_25"
  op: "Sub"
  input: "batch_normalization_16/gamma/read"
  input: "training/RMSprop/truediv_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_25"
  op: "Assign"
  input: "batch_normalization_16/gamma"
  input: "training/RMSprop/sub_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_39"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_13/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_26/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_26"
  op: "Sub"
  input: "training/RMSprop/sub_26/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_13"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_40"
  op: "Mul"
  input: "training/RMSprop/sub_26"
  input: "training/RMSprop/Square_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_26"
  op: "Add"
  input: "training/RMSprop/mul_39"
  input: "training/RMSprop/mul_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_26"
  op: "Assign"
  input: "training/RMSprop/Variable_13"
  input: "training/RMSprop/add_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_13"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_41"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_92"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_93"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_13/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_26"
  input: "training/RMSprop/Const_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_13"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_13/Minimum"
  input: "training/RMSprop/Const_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_13"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_27/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_27"
  op: "Add"
  input: "training/RMSprop/Sqrt_13"
  input: "training/RMSprop/add_27/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_13"
  op: "RealDiv"
  input: "training/RMSprop/mul_41"
  input: "training/RMSprop/add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_27"
  op: "Sub"
  input: "batch_normalization_16/beta/read"
  input: "training/RMSprop/truediv_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_27"
  op: "Assign"
  input: "batch_normalization_16/beta"
  input: "training/RMSprop/sub_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_42"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_14/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_28/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_28"
  op: "Sub"
  input: "training/RMSprop/sub_28/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_14"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_15/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_43"
  op: "Mul"
  input: "training/RMSprop/sub_28"
  input: "training/RMSprop/Square_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_28"
  op: "Add"
  input: "training/RMSprop/mul_42"
  input: "training/RMSprop/mul_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_28"
  op: "Assign"
  input: "training/RMSprop/Variable_14"
  input: "training/RMSprop/add_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_14"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_44"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_15/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_94"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_95"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_14/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_28"
  input: "training/RMSprop/Const_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_14"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_14/Minimum"
  input: "training/RMSprop/Const_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_14"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_29/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_29"
  op: "Add"
  input: "training/RMSprop/Sqrt_14"
  input: "training/RMSprop/add_29/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_14"
  op: "RealDiv"
  input: "training/RMSprop/mul_44"
  input: "training/RMSprop/add_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_29"
  op: "Sub"
  input: "separable_conv2d_15/depthwise_kernel/read"
  input: "training/RMSprop/truediv_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_29"
  op: "Assign"
  input: "separable_conv2d_15/depthwise_kernel"
  input: "training/RMSprop/sub_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_45"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_15/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_30/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_30"
  op: "Sub"
  input: "training/RMSprop/sub_30/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_15"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_15/separable_conv2d_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_46"
  op: "Mul"
  input: "training/RMSprop/sub_30"
  input: "training/RMSprop/Square_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_30"
  op: "Add"
  input: "training/RMSprop/mul_45"
  input: "training/RMSprop/mul_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_30"
  op: "Assign"
  input: "training/RMSprop/Variable_15"
  input: "training/RMSprop/add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_15"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_47"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_15/separable_conv2d_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_96"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_97"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_15/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_30"
  input: "training/RMSprop/Const_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_15"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_15/Minimum"
  input: "training/RMSprop/Const_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_15"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_31/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_31"
  op: "Add"
  input: "training/RMSprop/Sqrt_15"
  input: "training/RMSprop/add_31/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_15"
  op: "RealDiv"
  input: "training/RMSprop/mul_47"
  input: "training/RMSprop/add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_31"
  op: "Sub"
  input: "separable_conv2d_15/pointwise_kernel/read"
  input: "training/RMSprop/truediv_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_31"
  op: "Assign"
  input: "separable_conv2d_15/pointwise_kernel"
  input: "training/RMSprop/sub_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_48"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_16/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_32/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_32"
  op: "Sub"
  input: "training/RMSprop/sub_32/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_16"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_15/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_49"
  op: "Mul"
  input: "training/RMSprop/sub_32"
  input: "training/RMSprop/Square_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_32"
  op: "Add"
  input: "training/RMSprop/mul_48"
  input: "training/RMSprop/mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_32"
  op: "Assign"
  input: "training/RMSprop/Variable_16"
  input: "training/RMSprop/add_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_16"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_50"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_15/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_98"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_99"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_16/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_32"
  input: "training/RMSprop/Const_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_16"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_16/Minimum"
  input: "training/RMSprop/Const_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_16"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_33/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_33"
  op: "Add"
  input: "training/RMSprop/Sqrt_16"
  input: "training/RMSprop/add_33/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_16"
  op: "RealDiv"
  input: "training/RMSprop/mul_50"
  input: "training/RMSprop/add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_33"
  op: "Sub"
  input: "separable_conv2d_15/bias/read"
  input: "training/RMSprop/truediv_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_33"
  op: "Assign"
  input: "separable_conv2d_15/bias"
  input: "training/RMSprop/sub_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_51"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_17/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_34/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_34"
  op: "Sub"
  input: "training/RMSprop/sub_34/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_17"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_52"
  op: "Mul"
  input: "training/RMSprop/sub_34"
  input: "training/RMSprop/Square_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_34"
  op: "Add"
  input: "training/RMSprop/mul_51"
  input: "training/RMSprop/mul_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_34"
  op: "Assign"
  input: "training/RMSprop/Variable_17"
  input: "training/RMSprop/add_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_17"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_53"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_100"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_101"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_17/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_34"
  input: "training/RMSprop/Const_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_17"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_17/Minimum"
  input: "training/RMSprop/Const_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_17"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_35/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_35"
  op: "Add"
  input: "training/RMSprop/Sqrt_17"
  input: "training/RMSprop/add_35/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_17"
  op: "RealDiv"
  input: "training/RMSprop/mul_53"
  input: "training/RMSprop/add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_35"
  op: "Sub"
  input: "batch_normalization_17/gamma/read"
  input: "training/RMSprop/truediv_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_35"
  op: "Assign"
  input: "batch_normalization_17/gamma"
  input: "training/RMSprop/sub_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_54"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_18/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_36/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_36"
  op: "Sub"
  input: "training/RMSprop/sub_36/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_18"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_55"
  op: "Mul"
  input: "training/RMSprop/sub_36"
  input: "training/RMSprop/Square_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_36"
  op: "Add"
  input: "training/RMSprop/mul_54"
  input: "training/RMSprop/mul_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_36"
  op: "Assign"
  input: "training/RMSprop/Variable_18"
  input: "training/RMSprop/add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_18"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_56"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_102"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_103"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_18/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_36"
  input: "training/RMSprop/Const_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_18"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_18/Minimum"
  input: "training/RMSprop/Const_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_18"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_37/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_37"
  op: "Add"
  input: "training/RMSprop/Sqrt_18"
  input: "training/RMSprop/add_37/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_18"
  op: "RealDiv"
  input: "training/RMSprop/mul_56"
  input: "training/RMSprop/add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_37"
  op: "Sub"
  input: "batch_normalization_17/beta/read"
  input: "training/RMSprop/truediv_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_37"
  op: "Assign"
  input: "batch_normalization_17/beta"
  input: "training/RMSprop/sub_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_57"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_19/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_38/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_38"
  op: "Sub"
  input: "training/RMSprop/sub_38/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_19"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_16/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_58"
  op: "Mul"
  input: "training/RMSprop/sub_38"
  input: "training/RMSprop/Square_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_38"
  op: "Add"
  input: "training/RMSprop/mul_57"
  input: "training/RMSprop/mul_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_38"
  op: "Assign"
  input: "training/RMSprop/Variable_19"
  input: "training/RMSprop/add_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_19"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_59"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_16/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_104"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_105"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_19/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_38"
  input: "training/RMSprop/Const_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_19"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_19/Minimum"
  input: "training/RMSprop/Const_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_19"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_39/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_39"
  op: "Add"
  input: "training/RMSprop/Sqrt_19"
  input: "training/RMSprop/add_39/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_19"
  op: "RealDiv"
  input: "training/RMSprop/mul_59"
  input: "training/RMSprop/add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_39"
  op: "Sub"
  input: "separable_conv2d_16/depthwise_kernel/read"
  input: "training/RMSprop/truediv_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_39"
  op: "Assign"
  input: "separable_conv2d_16/depthwise_kernel"
  input: "training/RMSprop/sub_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_60"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_20/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_40/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_40"
  op: "Sub"
  input: "training/RMSprop/sub_40/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_20"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_16/separable_conv2d_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_61"
  op: "Mul"
  input: "training/RMSprop/sub_40"
  input: "training/RMSprop/Square_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_40"
  op: "Add"
  input: "training/RMSprop/mul_60"
  input: "training/RMSprop/mul_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_40"
  op: "Assign"
  input: "training/RMSprop/Variable_20"
  input: "training/RMSprop/add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_20"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_62"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_16/separable_conv2d_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_106"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_107"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_20/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_40"
  input: "training/RMSprop/Const_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_20"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_20/Minimum"
  input: "training/RMSprop/Const_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_20"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_41/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_41"
  op: "Add"
  input: "training/RMSprop/Sqrt_20"
  input: "training/RMSprop/add_41/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_20"
  op: "RealDiv"
  input: "training/RMSprop/mul_62"
  input: "training/RMSprop/add_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_41"
  op: "Sub"
  input: "separable_conv2d_16/pointwise_kernel/read"
  input: "training/RMSprop/truediv_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_41"
  op: "Assign"
  input: "separable_conv2d_16/pointwise_kernel"
  input: "training/RMSprop/sub_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_63"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_21/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_42/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_42"
  op: "Sub"
  input: "training/RMSprop/sub_42/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_21"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_16/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_64"
  op: "Mul"
  input: "training/RMSprop/sub_42"
  input: "training/RMSprop/Square_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_42"
  op: "Add"
  input: "training/RMSprop/mul_63"
  input: "training/RMSprop/mul_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_42"
  op: "Assign"
  input: "training/RMSprop/Variable_21"
  input: "training/RMSprop/add_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_21"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_65"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_16/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_108"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_109"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_21/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_42"
  input: "training/RMSprop/Const_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_21"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_21/Minimum"
  input: "training/RMSprop/Const_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_21"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_43/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_43"
  op: "Add"
  input: "training/RMSprop/Sqrt_21"
  input: "training/RMSprop/add_43/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_21"
  op: "RealDiv"
  input: "training/RMSprop/mul_65"
  input: "training/RMSprop/add_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_43"
  op: "Sub"
  input: "separable_conv2d_16/bias/read"
  input: "training/RMSprop/truediv_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_43"
  op: "Assign"
  input: "separable_conv2d_16/bias"
  input: "training/RMSprop/sub_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_66"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_22/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_44/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_44"
  op: "Sub"
  input: "training/RMSprop/sub_44/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_22"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_67"
  op: "Mul"
  input: "training/RMSprop/sub_44"
  input: "training/RMSprop/Square_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_44"
  op: "Add"
  input: "training/RMSprop/mul_66"
  input: "training/RMSprop/mul_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_44"
  op: "Assign"
  input: "training/RMSprop/Variable_22"
  input: "training/RMSprop/add_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_22"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_68"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_110"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_111"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_22/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_44"
  input: "training/RMSprop/Const_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_22"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_22/Minimum"
  input: "training/RMSprop/Const_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_22"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_45/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_45"
  op: "Add"
  input: "training/RMSprop/Sqrt_22"
  input: "training/RMSprop/add_45/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_22"
  op: "RealDiv"
  input: "training/RMSprop/mul_68"
  input: "training/RMSprop/add_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_45"
  op: "Sub"
  input: "batch_normalization_18/gamma/read"
  input: "training/RMSprop/truediv_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_45"
  op: "Assign"
  input: "batch_normalization_18/gamma"
  input: "training/RMSprop/sub_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_69"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_23/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_46/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_46"
  op: "Sub"
  input: "training/RMSprop/sub_46/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_23"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_70"
  op: "Mul"
  input: "training/RMSprop/sub_46"
  input: "training/RMSprop/Square_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_46"
  op: "Add"
  input: "training/RMSprop/mul_69"
  input: "training/RMSprop/mul_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_46"
  op: "Assign"
  input: "training/RMSprop/Variable_23"
  input: "training/RMSprop/add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_23"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_71"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_112"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_113"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_23/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_46"
  input: "training/RMSprop/Const_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_23"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_23/Minimum"
  input: "training/RMSprop/Const_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_23"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_47/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_47"
  op: "Add"
  input: "training/RMSprop/Sqrt_23"
  input: "training/RMSprop/add_47/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_23"
  op: "RealDiv"
  input: "training/RMSprop/mul_71"
  input: "training/RMSprop/add_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_47"
  op: "Sub"
  input: "batch_normalization_18/beta/read"
  input: "training/RMSprop/truediv_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_47"
  op: "Assign"
  input: "batch_normalization_18/beta"
  input: "training/RMSprop/sub_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_72"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_24/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_48/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_48"
  op: "Sub"
  input: "training/RMSprop/sub_48/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_24"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_17/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_73"
  op: "Mul"
  input: "training/RMSprop/sub_48"
  input: "training/RMSprop/Square_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_48"
  op: "Add"
  input: "training/RMSprop/mul_72"
  input: "training/RMSprop/mul_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_48"
  op: "Assign"
  input: "training/RMSprop/Variable_24"
  input: "training/RMSprop/add_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_24"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_74"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_17/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_114"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_115"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_24/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_48"
  input: "training/RMSprop/Const_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_24"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_24/Minimum"
  input: "training/RMSprop/Const_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_24"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_49/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_49"
  op: "Add"
  input: "training/RMSprop/Sqrt_24"
  input: "training/RMSprop/add_49/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_24"
  op: "RealDiv"
  input: "training/RMSprop/mul_74"
  input: "training/RMSprop/add_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_49"
  op: "Sub"
  input: "separable_conv2d_17/depthwise_kernel/read"
  input: "training/RMSprop/truediv_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_49"
  op: "Assign"
  input: "separable_conv2d_17/depthwise_kernel"
  input: "training/RMSprop/sub_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_75"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_25/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_50/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_50"
  op: "Sub"
  input: "training/RMSprop/sub_50/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_25"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_17/separable_conv2d_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_76"
  op: "Mul"
  input: "training/RMSprop/sub_50"
  input: "training/RMSprop/Square_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_50"
  op: "Add"
  input: "training/RMSprop/mul_75"
  input: "training/RMSprop/mul_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_50"
  op: "Assign"
  input: "training/RMSprop/Variable_25"
  input: "training/RMSprop/add_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_25"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_77"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_17/separable_conv2d_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_116"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_117"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_25/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_50"
  input: "training/RMSprop/Const_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_25"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_25/Minimum"
  input: "training/RMSprop/Const_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_25"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_51/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_51"
  op: "Add"
  input: "training/RMSprop/Sqrt_25"
  input: "training/RMSprop/add_51/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_25"
  op: "RealDiv"
  input: "training/RMSprop/mul_77"
  input: "training/RMSprop/add_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_51"
  op: "Sub"
  input: "separable_conv2d_17/pointwise_kernel/read"
  input: "training/RMSprop/truediv_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_51"
  op: "Assign"
  input: "separable_conv2d_17/pointwise_kernel"
  input: "training/RMSprop/sub_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_78"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_26/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_52/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_52"
  op: "Sub"
  input: "training/RMSprop/sub_52/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_26"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_17/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_79"
  op: "Mul"
  input: "training/RMSprop/sub_52"
  input: "training/RMSprop/Square_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_52"
  op: "Add"
  input: "training/RMSprop/mul_78"
  input: "training/RMSprop/mul_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_52"
  op: "Assign"
  input: "training/RMSprop/Variable_26"
  input: "training/RMSprop/add_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_26"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_80"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_17/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_118"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_119"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_26/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_52"
  input: "training/RMSprop/Const_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_26"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_26/Minimum"
  input: "training/RMSprop/Const_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_26"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_53/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_53"
  op: "Add"
  input: "training/RMSprop/Sqrt_26"
  input: "training/RMSprop/add_53/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_26"
  op: "RealDiv"
  input: "training/RMSprop/mul_80"
  input: "training/RMSprop/add_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_53"
  op: "Sub"
  input: "separable_conv2d_17/bias/read"
  input: "training/RMSprop/truediv_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_53"
  op: "Assign"
  input: "separable_conv2d_17/bias"
  input: "training/RMSprop/sub_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_81"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_27/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_54/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_54"
  op: "Sub"
  input: "training/RMSprop/sub_54/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_27"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_82"
  op: "Mul"
  input: "training/RMSprop/sub_54"
  input: "training/RMSprop/Square_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_54"
  op: "Add"
  input: "training/RMSprop/mul_81"
  input: "training/RMSprop/mul_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_54"
  op: "Assign"
  input: "training/RMSprop/Variable_27"
  input: "training/RMSprop/add_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_27"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_83"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_120"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_121"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_27/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_54"
  input: "training/RMSprop/Const_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_27"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_27/Minimum"
  input: "training/RMSprop/Const_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_27"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_55/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_55"
  op: "Add"
  input: "training/RMSprop/Sqrt_27"
  input: "training/RMSprop/add_55/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_27"
  op: "RealDiv"
  input: "training/RMSprop/mul_83"
  input: "training/RMSprop/add_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_55"
  op: "Sub"
  input: "batch_normalization_19/gamma/read"
  input: "training/RMSprop/truediv_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_55"
  op: "Assign"
  input: "batch_normalization_19/gamma"
  input: "training/RMSprop/sub_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_84"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_28/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_56/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_56"
  op: "Sub"
  input: "training/RMSprop/sub_56/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_28"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_85"
  op: "Mul"
  input: "training/RMSprop/sub_56"
  input: "training/RMSprop/Square_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_56"
  op: "Add"
  input: "training/RMSprop/mul_84"
  input: "training/RMSprop/mul_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_56"
  op: "Assign"
  input: "training/RMSprop/Variable_28"
  input: "training/RMSprop/add_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_28"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_86"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_122"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_123"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_28/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_56"
  input: "training/RMSprop/Const_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_28"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_28/Minimum"
  input: "training/RMSprop/Const_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_28"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_57/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_57"
  op: "Add"
  input: "training/RMSprop/Sqrt_28"
  input: "training/RMSprop/add_57/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_28"
  op: "RealDiv"
  input: "training/RMSprop/mul_86"
  input: "training/RMSprop/add_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_57"
  op: "Sub"
  input: "batch_normalization_19/beta/read"
  input: "training/RMSprop/truediv_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_57"
  op: "Assign"
  input: "batch_normalization_19/beta"
  input: "training/RMSprop/sub_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_87"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_29/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_58/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_58"
  op: "Sub"
  input: "training/RMSprop/sub_58/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_29"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_18/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_88"
  op: "Mul"
  input: "training/RMSprop/sub_58"
  input: "training/RMSprop/Square_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_58"
  op: "Add"
  input: "training/RMSprop/mul_87"
  input: "training/RMSprop/mul_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_58"
  op: "Assign"
  input: "training/RMSprop/Variable_29"
  input: "training/RMSprop/add_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_29"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_89"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_18/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_124"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_125"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_29/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_58"
  input: "training/RMSprop/Const_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_29"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_29/Minimum"
  input: "training/RMSprop/Const_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_29"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_59/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_59"
  op: "Add"
  input: "training/RMSprop/Sqrt_29"
  input: "training/RMSprop/add_59/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_29"
  op: "RealDiv"
  input: "training/RMSprop/mul_89"
  input: "training/RMSprop/add_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_59"
  op: "Sub"
  input: "separable_conv2d_18/depthwise_kernel/read"
  input: "training/RMSprop/truediv_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_59"
  op: "Assign"
  input: "separable_conv2d_18/depthwise_kernel"
  input: "training/RMSprop/sub_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_90"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_30/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_60/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_60"
  op: "Sub"
  input: "training/RMSprop/sub_60/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_30"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_18/separable_conv2d_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_91"
  op: "Mul"
  input: "training/RMSprop/sub_60"
  input: "training/RMSprop/Square_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_60"
  op: "Add"
  input: "training/RMSprop/mul_90"
  input: "training/RMSprop/mul_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_60"
  op: "Assign"
  input: "training/RMSprop/Variable_30"
  input: "training/RMSprop/add_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_30"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_92"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_18/separable_conv2d_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_126"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_127"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_30/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_60"
  input: "training/RMSprop/Const_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_30"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_30/Minimum"
  input: "training/RMSprop/Const_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_30"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_61/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_61"
  op: "Add"
  input: "training/RMSprop/Sqrt_30"
  input: "training/RMSprop/add_61/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_30"
  op: "RealDiv"
  input: "training/RMSprop/mul_92"
  input: "training/RMSprop/add_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_61"
  op: "Sub"
  input: "separable_conv2d_18/pointwise_kernel/read"
  input: "training/RMSprop/truediv_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_61"
  op: "Assign"
  input: "separable_conv2d_18/pointwise_kernel"
  input: "training/RMSprop/sub_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_93"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_31/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_62/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_62"
  op: "Sub"
  input: "training/RMSprop/sub_62/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_31"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_18/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_94"
  op: "Mul"
  input: "training/RMSprop/sub_62"
  input: "training/RMSprop/Square_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_62"
  op: "Add"
  input: "training/RMSprop/mul_93"
  input: "training/RMSprop/mul_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_62"
  op: "Assign"
  input: "training/RMSprop/Variable_31"
  input: "training/RMSprop/add_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_31"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_95"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_18/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_128"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_129"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_31/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_62"
  input: "training/RMSprop/Const_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_31"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_31/Minimum"
  input: "training/RMSprop/Const_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_31"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_63/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_63"
  op: "Add"
  input: "training/RMSprop/Sqrt_31"
  input: "training/RMSprop/add_63/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_31"
  op: "RealDiv"
  input: "training/RMSprop/mul_95"
  input: "training/RMSprop/add_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_63"
  op: "Sub"
  input: "separable_conv2d_18/bias/read"
  input: "training/RMSprop/truediv_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_63"
  op: "Assign"
  input: "separable_conv2d_18/bias"
  input: "training/RMSprop/sub_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_96"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_32/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_64/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_64"
  op: "Sub"
  input: "training/RMSprop/sub_64/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_32"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_97"
  op: "Mul"
  input: "training/RMSprop/sub_64"
  input: "training/RMSprop/Square_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_64"
  op: "Add"
  input: "training/RMSprop/mul_96"
  input: "training/RMSprop/mul_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_64"
  op: "Assign"
  input: "training/RMSprop/Variable_32"
  input: "training/RMSprop/add_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_32"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_98"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_130"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_131"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_32/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_64"
  input: "training/RMSprop/Const_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_32"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_32/Minimum"
  input: "training/RMSprop/Const_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_32"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_65/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_65"
  op: "Add"
  input: "training/RMSprop/Sqrt_32"
  input: "training/RMSprop/add_65/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_32"
  op: "RealDiv"
  input: "training/RMSprop/mul_98"
  input: "training/RMSprop/add_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_65"
  op: "Sub"
  input: "batch_normalization_20/gamma/read"
  input: "training/RMSprop/truediv_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_65"
  op: "Assign"
  input: "batch_normalization_20/gamma"
  input: "training/RMSprop/sub_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_99"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_33/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_66/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_66"
  op: "Sub"
  input: "training/RMSprop/sub_66/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_33"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_100"
  op: "Mul"
  input: "training/RMSprop/sub_66"
  input: "training/RMSprop/Square_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_66"
  op: "Add"
  input: "training/RMSprop/mul_99"
  input: "training/RMSprop/mul_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_66"
  op: "Assign"
  input: "training/RMSprop/Variable_33"
  input: "training/RMSprop/add_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_33"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_101"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_132"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_133"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_33/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_66"
  input: "training/RMSprop/Const_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_33"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_33/Minimum"
  input: "training/RMSprop/Const_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_33"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_67/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_67"
  op: "Add"
  input: "training/RMSprop/Sqrt_33"
  input: "training/RMSprop/add_67/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_33"
  op: "RealDiv"
  input: "training/RMSprop/mul_101"
  input: "training/RMSprop/add_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_67"
  op: "Sub"
  input: "batch_normalization_20/beta/read"
  input: "training/RMSprop/truediv_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_67"
  op: "Assign"
  input: "batch_normalization_20/beta"
  input: "training/RMSprop/sub_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_102"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_34/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_68/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_68"
  op: "Sub"
  input: "training/RMSprop/sub_68/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_34"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_19/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_103"
  op: "Mul"
  input: "training/RMSprop/sub_68"
  input: "training/RMSprop/Square_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_68"
  op: "Add"
  input: "training/RMSprop/mul_102"
  input: "training/RMSprop/mul_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_68"
  op: "Assign"
  input: "training/RMSprop/Variable_34"
  input: "training/RMSprop/add_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_34"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_104"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_19/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_134"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_135"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_34/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_68"
  input: "training/RMSprop/Const_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_34"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_34/Minimum"
  input: "training/RMSprop/Const_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_34"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_69/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_69"
  op: "Add"
  input: "training/RMSprop/Sqrt_34"
  input: "training/RMSprop/add_69/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_34"
  op: "RealDiv"
  input: "training/RMSprop/mul_104"
  input: "training/RMSprop/add_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_69"
  op: "Sub"
  input: "separable_conv2d_19/depthwise_kernel/read"
  input: "training/RMSprop/truediv_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_69"
  op: "Assign"
  input: "separable_conv2d_19/depthwise_kernel"
  input: "training/RMSprop/sub_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_105"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_35/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_70/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_70"
  op: "Sub"
  input: "training/RMSprop/sub_70/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_35"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_19/separable_conv2d_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_106"
  op: "Mul"
  input: "training/RMSprop/sub_70"
  input: "training/RMSprop/Square_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_70"
  op: "Add"
  input: "training/RMSprop/mul_105"
  input: "training/RMSprop/mul_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_70"
  op: "Assign"
  input: "training/RMSprop/Variable_35"
  input: "training/RMSprop/add_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_35"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_107"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_19/separable_conv2d_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_136"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_137"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_35/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_70"
  input: "training/RMSprop/Const_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_35"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_35/Minimum"
  input: "training/RMSprop/Const_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_35"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_71/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_71"
  op: "Add"
  input: "training/RMSprop/Sqrt_35"
  input: "training/RMSprop/add_71/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_35"
  op: "RealDiv"
  input: "training/RMSprop/mul_107"
  input: "training/RMSprop/add_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_71"
  op: "Sub"
  input: "separable_conv2d_19/pointwise_kernel/read"
  input: "training/RMSprop/truediv_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_71"
  op: "Assign"
  input: "separable_conv2d_19/pointwise_kernel"
  input: "training/RMSprop/sub_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_108"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_36/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_72/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_72"
  op: "Sub"
  input: "training/RMSprop/sub_72/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_36"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_19/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_109"
  op: "Mul"
  input: "training/RMSprop/sub_72"
  input: "training/RMSprop/Square_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_72"
  op: "Add"
  input: "training/RMSprop/mul_108"
  input: "training/RMSprop/mul_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_72"
  op: "Assign"
  input: "training/RMSprop/Variable_36"
  input: "training/RMSprop/add_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_36"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_110"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_19/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_138"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_139"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_36/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_72"
  input: "training/RMSprop/Const_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_36"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_36/Minimum"
  input: "training/RMSprop/Const_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_36"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_73/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_73"
  op: "Add"
  input: "training/RMSprop/Sqrt_36"
  input: "training/RMSprop/add_73/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_36"
  op: "RealDiv"
  input: "training/RMSprop/mul_110"
  input: "training/RMSprop/add_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_73"
  op: "Sub"
  input: "separable_conv2d_19/bias/read"
  input: "training/RMSprop/truediv_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_73"
  op: "Assign"
  input: "separable_conv2d_19/bias"
  input: "training/RMSprop/sub_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_111"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_37/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_74/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_74"
  op: "Sub"
  input: "training/RMSprop/sub_74/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_37"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_112"
  op: "Mul"
  input: "training/RMSprop/sub_74"
  input: "training/RMSprop/Square_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_74"
  op: "Add"
  input: "training/RMSprop/mul_111"
  input: "training/RMSprop/mul_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_74"
  op: "Assign"
  input: "training/RMSprop/Variable_37"
  input: "training/RMSprop/add_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_37"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_113"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_140"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_141"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_37/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_74"
  input: "training/RMSprop/Const_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_37"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_37/Minimum"
  input: "training/RMSprop/Const_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_37"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_75/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_75"
  op: "Add"
  input: "training/RMSprop/Sqrt_37"
  input: "training/RMSprop/add_75/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_37"
  op: "RealDiv"
  input: "training/RMSprop/mul_113"
  input: "training/RMSprop/add_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_75"
  op: "Sub"
  input: "batch_normalization_21/gamma/read"
  input: "training/RMSprop/truediv_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_75"
  op: "Assign"
  input: "batch_normalization_21/gamma"
  input: "training/RMSprop/sub_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_114"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_38/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_76/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_76"
  op: "Sub"
  input: "training/RMSprop/sub_76/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_38"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_115"
  op: "Mul"
  input: "training/RMSprop/sub_76"
  input: "training/RMSprop/Square_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_76"
  op: "Add"
  input: "training/RMSprop/mul_114"
  input: "training/RMSprop/mul_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_76"
  op: "Assign"
  input: "training/RMSprop/Variable_38"
  input: "training/RMSprop/add_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_38"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_116"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_142"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_143"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_38/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_76"
  input: "training/RMSprop/Const_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_38"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_38/Minimum"
  input: "training/RMSprop/Const_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_38"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_77/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_77"
  op: "Add"
  input: "training/RMSprop/Sqrt_38"
  input: "training/RMSprop/add_77/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_38"
  op: "RealDiv"
  input: "training/RMSprop/mul_116"
  input: "training/RMSprop/add_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_77"
  op: "Sub"
  input: "batch_normalization_21/beta/read"
  input: "training/RMSprop/truediv_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_77"
  op: "Assign"
  input: "batch_normalization_21/beta"
  input: "training/RMSprop/sub_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_117"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_39/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_78/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_78"
  op: "Sub"
  input: "training/RMSprop/sub_78/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_39"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_20/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_118"
  op: "Mul"
  input: "training/RMSprop/sub_78"
  input: "training/RMSprop/Square_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_78"
  op: "Add"
  input: "training/RMSprop/mul_117"
  input: "training/RMSprop/mul_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_78"
  op: "Assign"
  input: "training/RMSprop/Variable_39"
  input: "training/RMSprop/add_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_39"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_119"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_20/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_144"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_145"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_39/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_78"
  input: "training/RMSprop/Const_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_39"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_39/Minimum"
  input: "training/RMSprop/Const_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_39"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_79/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_79"
  op: "Add"
  input: "training/RMSprop/Sqrt_39"
  input: "training/RMSprop/add_79/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_39"
  op: "RealDiv"
  input: "training/RMSprop/mul_119"
  input: "training/RMSprop/add_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_79"
  op: "Sub"
  input: "separable_conv2d_20/depthwise_kernel/read"
  input: "training/RMSprop/truediv_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_79"
  op: "Assign"
  input: "separable_conv2d_20/depthwise_kernel"
  input: "training/RMSprop/sub_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_120"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_40/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_80/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_80"
  op: "Sub"
  input: "training/RMSprop/sub_80/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_40"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_20/separable_conv2d_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_121"
  op: "Mul"
  input: "training/RMSprop/sub_80"
  input: "training/RMSprop/Square_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_80"
  op: "Add"
  input: "training/RMSprop/mul_120"
  input: "training/RMSprop/mul_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_80"
  op: "Assign"
  input: "training/RMSprop/Variable_40"
  input: "training/RMSprop/add_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_40"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_122"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_20/separable_conv2d_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_146"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_147"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_40/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_80"
  input: "training/RMSprop/Const_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_40"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_40/Minimum"
  input: "training/RMSprop/Const_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_40"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_81/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_81"
  op: "Add"
  input: "training/RMSprop/Sqrt_40"
  input: "training/RMSprop/add_81/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_40"
  op: "RealDiv"
  input: "training/RMSprop/mul_122"
  input: "training/RMSprop/add_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_81"
  op: "Sub"
  input: "separable_conv2d_20/pointwise_kernel/read"
  input: "training/RMSprop/truediv_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_81"
  op: "Assign"
  input: "separable_conv2d_20/pointwise_kernel"
  input: "training/RMSprop/sub_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_123"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_41/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_82/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_82"
  op: "Sub"
  input: "training/RMSprop/sub_82/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_41"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_20/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_124"
  op: "Mul"
  input: "training/RMSprop/sub_82"
  input: "training/RMSprop/Square_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_82"
  op: "Add"
  input: "training/RMSprop/mul_123"
  input: "training/RMSprop/mul_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_82"
  op: "Assign"
  input: "training/RMSprop/Variable_41"
  input: "training/RMSprop/add_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_41"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_125"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_20/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_148"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_149"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_41/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_82"
  input: "training/RMSprop/Const_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_41"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_41/Minimum"
  input: "training/RMSprop/Const_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_41"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_83/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_83"
  op: "Add"
  input: "training/RMSprop/Sqrt_41"
  input: "training/RMSprop/add_83/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_41"
  op: "RealDiv"
  input: "training/RMSprop/mul_125"
  input: "training/RMSprop/add_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_83"
  op: "Sub"
  input: "separable_conv2d_20/bias/read"
  input: "training/RMSprop/truediv_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_83"
  op: "Assign"
  input: "separable_conv2d_20/bias"
  input: "training/RMSprop/sub_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_126"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_42/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_84/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_84"
  op: "Sub"
  input: "training/RMSprop/sub_84/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_42"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_127"
  op: "Mul"
  input: "training/RMSprop/sub_84"
  input: "training/RMSprop/Square_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_84"
  op: "Add"
  input: "training/RMSprop/mul_126"
  input: "training/RMSprop/mul_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_84"
  op: "Assign"
  input: "training/RMSprop/Variable_42"
  input: "training/RMSprop/add_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_42"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_128"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_150"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_151"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_42/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_84"
  input: "training/RMSprop/Const_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_42"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_42/Minimum"
  input: "training/RMSprop/Const_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_42"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_85/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_85"
  op: "Add"
  input: "training/RMSprop/Sqrt_42"
  input: "training/RMSprop/add_85/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_42"
  op: "RealDiv"
  input: "training/RMSprop/mul_128"
  input: "training/RMSprop/add_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_85"
  op: "Sub"
  input: "batch_normalization_22/gamma/read"
  input: "training/RMSprop/truediv_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_85"
  op: "Assign"
  input: "batch_normalization_22/gamma"
  input: "training/RMSprop/sub_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_129"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_43/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_86/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_86"
  op: "Sub"
  input: "training/RMSprop/sub_86/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_43"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_130"
  op: "Mul"
  input: "training/RMSprop/sub_86"
  input: "training/RMSprop/Square_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_86"
  op: "Add"
  input: "training/RMSprop/mul_129"
  input: "training/RMSprop/mul_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_86"
  op: "Assign"
  input: "training/RMSprop/Variable_43"
  input: "training/RMSprop/add_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_43"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_131"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_152"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_153"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_43/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_86"
  input: "training/RMSprop/Const_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_43"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_43/Minimum"
  input: "training/RMSprop/Const_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_43"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_87/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_87"
  op: "Add"
  input: "training/RMSprop/Sqrt_43"
  input: "training/RMSprop/add_87/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_43"
  op: "RealDiv"
  input: "training/RMSprop/mul_131"
  input: "training/RMSprop/add_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_87"
  op: "Sub"
  input: "batch_normalization_22/beta/read"
  input: "training/RMSprop/truediv_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_87"
  op: "Assign"
  input: "batch_normalization_22/beta"
  input: "training/RMSprop/sub_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_132"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_44/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_88/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_88"
  op: "Sub"
  input: "training/RMSprop/sub_88/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_44"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_21/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_133"
  op: "Mul"
  input: "training/RMSprop/sub_88"
  input: "training/RMSprop/Square_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_88"
  op: "Add"
  input: "training/RMSprop/mul_132"
  input: "training/RMSprop/mul_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_88"
  op: "Assign"
  input: "training/RMSprop/Variable_44"
  input: "training/RMSprop/add_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_44"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_134"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_21/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_154"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_155"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_44/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_88"
  input: "training/RMSprop/Const_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_44"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_44/Minimum"
  input: "training/RMSprop/Const_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_44"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_89/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_89"
  op: "Add"
  input: "training/RMSprop/Sqrt_44"
  input: "training/RMSprop/add_89/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_44"
  op: "RealDiv"
  input: "training/RMSprop/mul_134"
  input: "training/RMSprop/add_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_89"
  op: "Sub"
  input: "separable_conv2d_21/depthwise_kernel/read"
  input: "training/RMSprop/truediv_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_89"
  op: "Assign"
  input: "separable_conv2d_21/depthwise_kernel"
  input: "training/RMSprop/sub_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_135"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_45/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_90/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_90"
  op: "Sub"
  input: "training/RMSprop/sub_90/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_45"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_21/separable_conv2d_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_136"
  op: "Mul"
  input: "training/RMSprop/sub_90"
  input: "training/RMSprop/Square_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_90"
  op: "Add"
  input: "training/RMSprop/mul_135"
  input: "training/RMSprop/mul_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_90"
  op: "Assign"
  input: "training/RMSprop/Variable_45"
  input: "training/RMSprop/add_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_45"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_137"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_21/separable_conv2d_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_156"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_157"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_45/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_90"
  input: "training/RMSprop/Const_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_45"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_45/Minimum"
  input: "training/RMSprop/Const_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_45"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_91/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_91"
  op: "Add"
  input: "training/RMSprop/Sqrt_45"
  input: "training/RMSprop/add_91/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_45"
  op: "RealDiv"
  input: "training/RMSprop/mul_137"
  input: "training/RMSprop/add_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_91"
  op: "Sub"
  input: "separable_conv2d_21/pointwise_kernel/read"
  input: "training/RMSprop/truediv_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_91"
  op: "Assign"
  input: "separable_conv2d_21/pointwise_kernel"
  input: "training/RMSprop/sub_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_138"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_46/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_92/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_92"
  op: "Sub"
  input: "training/RMSprop/sub_92/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_46"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_21/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_139"
  op: "Mul"
  input: "training/RMSprop/sub_92"
  input: "training/RMSprop/Square_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_92"
  op: "Add"
  input: "training/RMSprop/mul_138"
  input: "training/RMSprop/mul_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_92"
  op: "Assign"
  input: "training/RMSprop/Variable_46"
  input: "training/RMSprop/add_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_46"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_140"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_21/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_158"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_159"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_46/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_92"
  input: "training/RMSprop/Const_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_46"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_46/Minimum"
  input: "training/RMSprop/Const_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_46"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_93/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_93"
  op: "Add"
  input: "training/RMSprop/Sqrt_46"
  input: "training/RMSprop/add_93/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_46"
  op: "RealDiv"
  input: "training/RMSprop/mul_140"
  input: "training/RMSprop/add_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_93"
  op: "Sub"
  input: "separable_conv2d_21/bias/read"
  input: "training/RMSprop/truediv_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_93"
  op: "Assign"
  input: "separable_conv2d_21/bias"
  input: "training/RMSprop/sub_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_141"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_47/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_94/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_94"
  op: "Sub"
  input: "training/RMSprop/sub_94/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_47"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_142"
  op: "Mul"
  input: "training/RMSprop/sub_94"
  input: "training/RMSprop/Square_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_94"
  op: "Add"
  input: "training/RMSprop/mul_141"
  input: "training/RMSprop/mul_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_94"
  op: "Assign"
  input: "training/RMSprop/Variable_47"
  input: "training/RMSprop/add_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_47"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_143"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_160"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_161"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_47/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_94"
  input: "training/RMSprop/Const_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_47"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_47/Minimum"
  input: "training/RMSprop/Const_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_47"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_95/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_95"
  op: "Add"
  input: "training/RMSprop/Sqrt_47"
  input: "training/RMSprop/add_95/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_47"
  op: "RealDiv"
  input: "training/RMSprop/mul_143"
  input: "training/RMSprop/add_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_95"
  op: "Sub"
  input: "batch_normalization_23/gamma/read"
  input: "training/RMSprop/truediv_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_95"
  op: "Assign"
  input: "batch_normalization_23/gamma"
  input: "training/RMSprop/sub_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_144"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_48/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_96/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_96"
  op: "Sub"
  input: "training/RMSprop/sub_96/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_48"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_145"
  op: "Mul"
  input: "training/RMSprop/sub_96"
  input: "training/RMSprop/Square_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_96"
  op: "Add"
  input: "training/RMSprop/mul_144"
  input: "training/RMSprop/mul_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_96"
  op: "Assign"
  input: "training/RMSprop/Variable_48"
  input: "training/RMSprop/add_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_48"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_146"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_162"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_163"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_48/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_96"
  input: "training/RMSprop/Const_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_48"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_48/Minimum"
  input: "training/RMSprop/Const_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_48"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_97/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_97"
  op: "Add"
  input: "training/RMSprop/Sqrt_48"
  input: "training/RMSprop/add_97/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_48"
  op: "RealDiv"
  input: "training/RMSprop/mul_146"
  input: "training/RMSprop/add_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_97"
  op: "Sub"
  input: "batch_normalization_23/beta/read"
  input: "training/RMSprop/truediv_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_97"
  op: "Assign"
  input: "batch_normalization_23/beta"
  input: "training/RMSprop/sub_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_147"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_49/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_98/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_98"
  op: "Sub"
  input: "training/RMSprop/sub_98/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_49"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_22/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_148"
  op: "Mul"
  input: "training/RMSprop/sub_98"
  input: "training/RMSprop/Square_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_98"
  op: "Add"
  input: "training/RMSprop/mul_147"
  input: "training/RMSprop/mul_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_98"
  op: "Assign"
  input: "training/RMSprop/Variable_49"
  input: "training/RMSprop/add_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_49"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_149"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_22/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_164"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_165"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_49/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_98"
  input: "training/RMSprop/Const_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_49"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_49/Minimum"
  input: "training/RMSprop/Const_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_49"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_99/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_99"
  op: "Add"
  input: "training/RMSprop/Sqrt_49"
  input: "training/RMSprop/add_99/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_49"
  op: "RealDiv"
  input: "training/RMSprop/mul_149"
  input: "training/RMSprop/add_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_99"
  op: "Sub"
  input: "separable_conv2d_22/depthwise_kernel/read"
  input: "training/RMSprop/truediv_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_99"
  op: "Assign"
  input: "separable_conv2d_22/depthwise_kernel"
  input: "training/RMSprop/sub_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_150"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_50/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_100/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_100"
  op: "Sub"
  input: "training/RMSprop/sub_100/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_50"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_22/separable_conv2d_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_151"
  op: "Mul"
  input: "training/RMSprop/sub_100"
  input: "training/RMSprop/Square_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_100"
  op: "Add"
  input: "training/RMSprop/mul_150"
  input: "training/RMSprop/mul_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_100"
  op: "Assign"
  input: "training/RMSprop/Variable_50"
  input: "training/RMSprop/add_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_50"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_152"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_22/separable_conv2d_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_166"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_167"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_50/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_100"
  input: "training/RMSprop/Const_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_50"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_50/Minimum"
  input: "training/RMSprop/Const_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_50"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_101/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_101"
  op: "Add"
  input: "training/RMSprop/Sqrt_50"
  input: "training/RMSprop/add_101/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_50"
  op: "RealDiv"
  input: "training/RMSprop/mul_152"
  input: "training/RMSprop/add_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_101"
  op: "Sub"
  input: "separable_conv2d_22/pointwise_kernel/read"
  input: "training/RMSprop/truediv_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_101"
  op: "Assign"
  input: "separable_conv2d_22/pointwise_kernel"
  input: "training/RMSprop/sub_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_153"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_51/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_102/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_102"
  op: "Sub"
  input: "training/RMSprop/sub_102/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_51"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_22/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_154"
  op: "Mul"
  input: "training/RMSprop/sub_102"
  input: "training/RMSprop/Square_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_102"
  op: "Add"
  input: "training/RMSprop/mul_153"
  input: "training/RMSprop/mul_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_102"
  op: "Assign"
  input: "training/RMSprop/Variable_51"
  input: "training/RMSprop/add_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_51"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_155"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_22/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_168"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_169"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_51/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_102"
  input: "training/RMSprop/Const_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_51"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_51/Minimum"
  input: "training/RMSprop/Const_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_51"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_103/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_103"
  op: "Add"
  input: "training/RMSprop/Sqrt_51"
  input: "training/RMSprop/add_103/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_51"
  op: "RealDiv"
  input: "training/RMSprop/mul_155"
  input: "training/RMSprop/add_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_103"
  op: "Sub"
  input: "separable_conv2d_22/bias/read"
  input: "training/RMSprop/truediv_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_103"
  op: "Assign"
  input: "separable_conv2d_22/bias"
  input: "training/RMSprop/sub_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_156"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_52/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_104/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_104"
  op: "Sub"
  input: "training/RMSprop/sub_104/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_52"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_157"
  op: "Mul"
  input: "training/RMSprop/sub_104"
  input: "training/RMSprop/Square_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_104"
  op: "Add"
  input: "training/RMSprop/mul_156"
  input: "training/RMSprop/mul_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_104"
  op: "Assign"
  input: "training/RMSprop/Variable_52"
  input: "training/RMSprop/add_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_52"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_158"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_170"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_171"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_52/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_104"
  input: "training/RMSprop/Const_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_52"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_52/Minimum"
  input: "training/RMSprop/Const_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_52"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_105/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_105"
  op: "Add"
  input: "training/RMSprop/Sqrt_52"
  input: "training/RMSprop/add_105/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_52"
  op: "RealDiv"
  input: "training/RMSprop/mul_158"
  input: "training/RMSprop/add_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_105"
  op: "Sub"
  input: "batch_normalization_24/gamma/read"
  input: "training/RMSprop/truediv_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_105"
  op: "Assign"
  input: "batch_normalization_24/gamma"
  input: "training/RMSprop/sub_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_159"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_53/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_106/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_106"
  op: "Sub"
  input: "training/RMSprop/sub_106/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_53"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_160"
  op: "Mul"
  input: "training/RMSprop/sub_106"
  input: "training/RMSprop/Square_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_106"
  op: "Add"
  input: "training/RMSprop/mul_159"
  input: "training/RMSprop/mul_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_106"
  op: "Assign"
  input: "training/RMSprop/Variable_53"
  input: "training/RMSprop/add_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_53"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_161"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_172"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_173"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_53/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_106"
  input: "training/RMSprop/Const_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_53"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_53/Minimum"
  input: "training/RMSprop/Const_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_53"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_107/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_107"
  op: "Add"
  input: "training/RMSprop/Sqrt_53"
  input: "training/RMSprop/add_107/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_53"
  op: "RealDiv"
  input: "training/RMSprop/mul_161"
  input: "training/RMSprop/add_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_107"
  op: "Sub"
  input: "batch_normalization_24/beta/read"
  input: "training/RMSprop/truediv_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_107"
  op: "Assign"
  input: "batch_normalization_24/beta"
  input: "training/RMSprop/sub_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_162"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_54/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_108/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_108"
  op: "Sub"
  input: "training/RMSprop/sub_108/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_54"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_23/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_163"
  op: "Mul"
  input: "training/RMSprop/sub_108"
  input: "training/RMSprop/Square_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_108"
  op: "Add"
  input: "training/RMSprop/mul_162"
  input: "training/RMSprop/mul_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_108"
  op: "Assign"
  input: "training/RMSprop/Variable_54"
  input: "training/RMSprop/add_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_54"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_164"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_23/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_174"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_175"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_54/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_108"
  input: "training/RMSprop/Const_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_54"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_54/Minimum"
  input: "training/RMSprop/Const_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_54"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_109/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_109"
  op: "Add"
  input: "training/RMSprop/Sqrt_54"
  input: "training/RMSprop/add_109/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_54"
  op: "RealDiv"
  input: "training/RMSprop/mul_164"
  input: "training/RMSprop/add_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_109"
  op: "Sub"
  input: "separable_conv2d_23/depthwise_kernel/read"
  input: "training/RMSprop/truediv_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_109"
  op: "Assign"
  input: "separable_conv2d_23/depthwise_kernel"
  input: "training/RMSprop/sub_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_165"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_55/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_110/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_110"
  op: "Sub"
  input: "training/RMSprop/sub_110/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_55"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_23/separable_conv2d_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_166"
  op: "Mul"
  input: "training/RMSprop/sub_110"
  input: "training/RMSprop/Square_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_110"
  op: "Add"
  input: "training/RMSprop/mul_165"
  input: "training/RMSprop/mul_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_110"
  op: "Assign"
  input: "training/RMSprop/Variable_55"
  input: "training/RMSprop/add_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_55"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_167"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_23/separable_conv2d_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_176"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_177"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_55/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_110"
  input: "training/RMSprop/Const_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_55"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_55/Minimum"
  input: "training/RMSprop/Const_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_55"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_111/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_111"
  op: "Add"
  input: "training/RMSprop/Sqrt_55"
  input: "training/RMSprop/add_111/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_55"
  op: "RealDiv"
  input: "training/RMSprop/mul_167"
  input: "training/RMSprop/add_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_111"
  op: "Sub"
  input: "separable_conv2d_23/pointwise_kernel/read"
  input: "training/RMSprop/truediv_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_111"
  op: "Assign"
  input: "separable_conv2d_23/pointwise_kernel"
  input: "training/RMSprop/sub_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_168"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_56/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_112/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_112"
  op: "Sub"
  input: "training/RMSprop/sub_112/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_56"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_23/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_169"
  op: "Mul"
  input: "training/RMSprop/sub_112"
  input: "training/RMSprop/Square_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_112"
  op: "Add"
  input: "training/RMSprop/mul_168"
  input: "training/RMSprop/mul_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_112"
  op: "Assign"
  input: "training/RMSprop/Variable_56"
  input: "training/RMSprop/add_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_56"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_170"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_23/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_178"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_179"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_56/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_112"
  input: "training/RMSprop/Const_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_56"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_56/Minimum"
  input: "training/RMSprop/Const_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_56"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_113/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_113"
  op: "Add"
  input: "training/RMSprop/Sqrt_56"
  input: "training/RMSprop/add_113/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_56"
  op: "RealDiv"
  input: "training/RMSprop/mul_170"
  input: "training/RMSprop/add_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_113"
  op: "Sub"
  input: "separable_conv2d_23/bias/read"
  input: "training/RMSprop/truediv_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_113"
  op: "Assign"
  input: "separable_conv2d_23/bias"
  input: "training/RMSprop/sub_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_171"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_57/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_114/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_114"
  op: "Sub"
  input: "training/RMSprop/sub_114/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_57"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_172"
  op: "Mul"
  input: "training/RMSprop/sub_114"
  input: "training/RMSprop/Square_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_114"
  op: "Add"
  input: "training/RMSprop/mul_171"
  input: "training/RMSprop/mul_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_114"
  op: "Assign"
  input: "training/RMSprop/Variable_57"
  input: "training/RMSprop/add_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_57"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_173"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_180"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_181"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_57/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_114"
  input: "training/RMSprop/Const_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_57"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_57/Minimum"
  input: "training/RMSprop/Const_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_57"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_115/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_115"
  op: "Add"
  input: "training/RMSprop/Sqrt_57"
  input: "training/RMSprop/add_115/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_57"
  op: "RealDiv"
  input: "training/RMSprop/mul_173"
  input: "training/RMSprop/add_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_115"
  op: "Sub"
  input: "batch_normalization_25/gamma/read"
  input: "training/RMSprop/truediv_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_115"
  op: "Assign"
  input: "batch_normalization_25/gamma"
  input: "training/RMSprop/sub_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_174"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_58/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_116/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_116"
  op: "Sub"
  input: "training/RMSprop/sub_116/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_58"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_175"
  op: "Mul"
  input: "training/RMSprop/sub_116"
  input: "training/RMSprop/Square_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_116"
  op: "Add"
  input: "training/RMSprop/mul_174"
  input: "training/RMSprop/mul_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_116"
  op: "Assign"
  input: "training/RMSprop/Variable_58"
  input: "training/RMSprop/add_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_58"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_176"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_182"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_183"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_58/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_116"
  input: "training/RMSprop/Const_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_58"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_58/Minimum"
  input: "training/RMSprop/Const_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_58"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_117/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_117"
  op: "Add"
  input: "training/RMSprop/Sqrt_58"
  input: "training/RMSprop/add_117/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_58"
  op: "RealDiv"
  input: "training/RMSprop/mul_176"
  input: "training/RMSprop/add_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_117"
  op: "Sub"
  input: "batch_normalization_25/beta/read"
  input: "training/RMSprop/truediv_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_117"
  op: "Assign"
  input: "batch_normalization_25/beta"
  input: "training/RMSprop/sub_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_177"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_59/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_118/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_118"
  op: "Sub"
  input: "training/RMSprop/sub_118/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_59"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_24/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_178"
  op: "Mul"
  input: "training/RMSprop/sub_118"
  input: "training/RMSprop/Square_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_118"
  op: "Add"
  input: "training/RMSprop/mul_177"
  input: "training/RMSprop/mul_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_118"
  op: "Assign"
  input: "training/RMSprop/Variable_59"
  input: "training/RMSprop/add_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_59"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_179"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_24/separable_conv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_184"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_185"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_59/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_118"
  input: "training/RMSprop/Const_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_59"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_59/Minimum"
  input: "training/RMSprop/Const_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_59"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_119/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_119"
  op: "Add"
  input: "training/RMSprop/Sqrt_59"
  input: "training/RMSprop/add_119/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_59"
  op: "RealDiv"
  input: "training/RMSprop/mul_179"
  input: "training/RMSprop/add_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_119"
  op: "Sub"
  input: "separable_conv2d_24/depthwise_kernel/read"
  input: "training/RMSprop/truediv_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_119"
  op: "Assign"
  input: "separable_conv2d_24/depthwise_kernel"
  input: "training/RMSprop/sub_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_180"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_60/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_120/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_120"
  op: "Sub"
  input: "training/RMSprop/sub_120/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_60"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_24/separable_conv2d_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_181"
  op: "Mul"
  input: "training/RMSprop/sub_120"
  input: "training/RMSprop/Square_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_120"
  op: "Add"
  input: "training/RMSprop/mul_180"
  input: "training/RMSprop/mul_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_120"
  op: "Assign"
  input: "training/RMSprop/Variable_60"
  input: "training/RMSprop/add_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_60"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_182"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_24/separable_conv2d_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_186"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_187"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_60/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_120"
  input: "training/RMSprop/Const_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_60"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_60/Minimum"
  input: "training/RMSprop/Const_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_60"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_121/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_121"
  op: "Add"
  input: "training/RMSprop/Sqrt_60"
  input: "training/RMSprop/add_121/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_60"
  op: "RealDiv"
  input: "training/RMSprop/mul_182"
  input: "training/RMSprop/add_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_121"
  op: "Sub"
  input: "separable_conv2d_24/pointwise_kernel/read"
  input: "training/RMSprop/truediv_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_121"
  op: "Assign"
  input: "separable_conv2d_24/pointwise_kernel"
  input: "training/RMSprop/sub_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_183"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_61/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_122/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_122"
  op: "Sub"
  input: "training/RMSprop/sub_122/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_61"
  op: "Square"
  input: "training/RMSprop/gradients/separable_conv2d_24/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_184"
  op: "Mul"
  input: "training/RMSprop/sub_122"
  input: "training/RMSprop/Square_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_122"
  op: "Add"
  input: "training/RMSprop/mul_183"
  input: "training/RMSprop/mul_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_122"
  op: "Assign"
  input: "training/RMSprop/Variable_61"
  input: "training/RMSprop/add_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_61"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_185"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/separable_conv2d_24/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_188"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_189"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_61/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_122"
  input: "training/RMSprop/Const_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_61"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_61/Minimum"
  input: "training/RMSprop/Const_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_61"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_123/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_123"
  op: "Add"
  input: "training/RMSprop/Sqrt_61"
  input: "training/RMSprop/add_123/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_61"
  op: "RealDiv"
  input: "training/RMSprop/mul_185"
  input: "training/RMSprop/add_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_123"
  op: "Sub"
  input: "separable_conv2d_24/bias/read"
  input: "training/RMSprop/truediv_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_123"
  op: "Assign"
  input: "separable_conv2d_24/bias"
  input: "training/RMSprop/sub_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_186"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_62/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_124/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_124"
  op: "Sub"
  input: "training/RMSprop/sub_124/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_62"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_187"
  op: "Mul"
  input: "training/RMSprop/sub_124"
  input: "training/RMSprop/Square_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_124"
  op: "Add"
  input: "training/RMSprop/mul_186"
  input: "training/RMSprop/mul_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_124"
  op: "Assign"
  input: "training/RMSprop/Variable_62"
  input: "training/RMSprop/add_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_62"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_188"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_190"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_191"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_62/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_124"
  input: "training/RMSprop/Const_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_62"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_62/Minimum"
  input: "training/RMSprop/Const_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_62"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_125/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_125"
  op: "Add"
  input: "training/RMSprop/Sqrt_62"
  input: "training/RMSprop/add_125/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_62"
  op: "RealDiv"
  input: "training/RMSprop/mul_188"
  input: "training/RMSprop/add_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_125"
  op: "Sub"
  input: "batch_normalization_26/gamma/read"
  input: "training/RMSprop/truediv_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_125"
  op: "Assign"
  input: "batch_normalization_26/gamma"
  input: "training/RMSprop/sub_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_189"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_63/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_126/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_126"
  op: "Sub"
  input: "training/RMSprop/sub_126/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_63"
  op: "Square"
  input: "training/RMSprop/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_190"
  op: "Mul"
  input: "training/RMSprop/sub_126"
  input: "training/RMSprop/Square_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_126"
  op: "Add"
  input: "training/RMSprop/mul_189"
  input: "training/RMSprop/mul_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_126"
  op: "Assign"
  input: "training/RMSprop/Variable_63"
  input: "training/RMSprop/add_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_63"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_191"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_192"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_193"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_63/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_126"
  input: "training/RMSprop/Const_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_63"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_63/Minimum"
  input: "training/RMSprop/Const_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_63"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_127/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_127"
  op: "Add"
  input: "training/RMSprop/Sqrt_63"
  input: "training/RMSprop/add_127/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_63"
  op: "RealDiv"
  input: "training/RMSprop/mul_191"
  input: "training/RMSprop/add_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_127"
  op: "Sub"
  input: "batch_normalization_26/beta/read"
  input: "training/RMSprop/truediv_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_127"
  op: "Assign"
  input: "batch_normalization_26/beta"
  input: "training/RMSprop/sub_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_192"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_64/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_128/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_128"
  op: "Sub"
  input: "training/RMSprop/sub_128/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_64"
  op: "Square"
  input: "training/RMSprop/gradients/dense_2/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_193"
  op: "Mul"
  input: "training/RMSprop/sub_128"
  input: "training/RMSprop/Square_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_128"
  op: "Add"
  input: "training/RMSprop/mul_192"
  input: "training/RMSprop/mul_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_128"
  op: "Assign"
  input: "training/RMSprop/Variable_64"
  input: "training/RMSprop/add_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_64"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_194"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/dense_2/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_194"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_195"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_64/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_128"
  input: "training/RMSprop/Const_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_64"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_64/Minimum"
  input: "training/RMSprop/Const_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_64"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_129/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_129"
  op: "Add"
  input: "training/RMSprop/Sqrt_64"
  input: "training/RMSprop/add_129/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_64"
  op: "RealDiv"
  input: "training/RMSprop/mul_194"
  input: "training/RMSprop/add_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_129"
  op: "Sub"
  input: "dense_2/kernel/read"
  input: "training/RMSprop/truediv_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_129"
  op: "Assign"
  input: "dense_2/kernel"
  input: "training/RMSprop/sub_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_195"
  op: "Mul"
  input: "RMSprop/rho/read"
  input: "training/RMSprop/Variable_65/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_130/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub_130"
  op: "Sub"
  input: "training/RMSprop/sub_130/x"
  input: "RMSprop/rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Square_65"
  op: "Square"
  input: "training/RMSprop/gradients/dense_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/mul_196"
  op: "Mul"
  input: "training/RMSprop/sub_130"
  input: "training/RMSprop/Square_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_130"
  op: "Add"
  input: "training/RMSprop/mul_195"
  input: "training/RMSprop/mul_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_130"
  op: "Assign"
  input: "training/RMSprop/Variable_65"
  input: "training/RMSprop/add_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_65"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/mul_197"
  op: "Mul"
  input: "RMSprop/lr/read"
  input: "training/RMSprop/gradients/dense_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const_196"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/Const_197"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_65/Minimum"
  op: "Minimum"
  input: "training/RMSprop/add_130"
  input: "training/RMSprop/Const_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/clip_by_value_65"
  op: "Maximum"
  input: "training/RMSprop/clip_by_value_65/Minimum"
  input: "training/RMSprop/Const_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Sqrt_65"
  op: "Sqrt"
  input: "training/RMSprop/clip_by_value_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/add_131/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training/RMSprop/add_131"
  op: "Add"
  input: "training/RMSprop/Sqrt_65"
  input: "training/RMSprop/add_131/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/truediv_65"
  op: "RealDiv"
  input: "training/RMSprop/mul_197"
  input: "training/RMSprop/add_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub_131"
  op: "Sub"
  input: "dense_2/bias/read"
  input: "training/RMSprop/truediv_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Assign_131"
  op: "Assign"
  input: "dense_2/bias"
  input: "training/RMSprop/sub_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/group_deps"
  op: "NoOp"
  input: "^loss/mul"
  input: "^metrics/acc/Mean"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^training/RMSprop/AssignAdd"
  input: "^training/RMSprop/Assign"
  input: "^training/RMSprop/Assign_1"
  input: "^training/RMSprop/Assign_2"
  input: "^training/RMSprop/Assign_3"
  input: "^training/RMSprop/Assign_4"
  input: "^training/RMSprop/Assign_5"
  input: "^training/RMSprop/Assign_6"
  input: "^training/RMSprop/Assign_7"
  input: "^training/RMSprop/Assign_8"
  input: "^training/RMSprop/Assign_9"
  input: "^training/RMSprop/Assign_10"
  input: "^training/RMSprop/Assign_11"
  input: "^training/RMSprop/Assign_12"
  input: "^training/RMSprop/Assign_13"
  input: "^training/RMSprop/Assign_14"
  input: "^training/RMSprop/Assign_15"
  input: "^training/RMSprop/Assign_16"
  input: "^training/RMSprop/Assign_17"
  input: "^training/RMSprop/Assign_18"
  input: "^training/RMSprop/Assign_19"
  input: "^training/RMSprop/Assign_20"
  input: "^training/RMSprop/Assign_21"
  input: "^training/RMSprop/Assign_22"
  input: "^training/RMSprop/Assign_23"
  input: "^training/RMSprop/Assign_24"
  input: "^training/RMSprop/Assign_25"
  input: "^training/RMSprop/Assign_26"
  input: "^training/RMSprop/Assign_27"
  input: "^training/RMSprop/Assign_28"
  input: "^training/RMSprop/Assign_29"
  input: "^training/RMSprop/Assign_30"
  input: "^training/RMSprop/Assign_31"
  input: "^training/RMSprop/Assign_32"
  input: "^training/RMSprop/Assign_33"
  input: "^training/RMSprop/Assign_34"
  input: "^training/RMSprop/Assign_35"
  input: "^training/RMSprop/Assign_36"
  input: "^training/RMSprop/Assign_37"
  input: "^training/RMSprop/Assign_38"
  input: "^training/RMSprop/Assign_39"
  input: "^training/RMSprop/Assign_40"
  input: "^training/RMSprop/Assign_41"
  input: "^training/RMSprop/Assign_42"
  input: "^training/RMSprop/Assign_43"
  input: "^training/RMSprop/Assign_44"
  input: "^training/RMSprop/Assign_45"
  input: "^training/RMSprop/Assign_46"
  input: "^training/RMSprop/Assign_47"
  input: "^training/RMSprop/Assign_48"
  input: "^training/RMSprop/Assign_49"
  input: "^training/RMSprop/Assign_50"
  input: "^training/RMSprop/Assign_51"
  input: "^training/RMSprop/Assign_52"
  input: "^training/RMSprop/Assign_53"
  input: "^training/RMSprop/Assign_54"
  input: "^training/RMSprop/Assign_55"
  input: "^training/RMSprop/Assign_56"
  input: "^training/RMSprop/Assign_57"
  input: "^training/RMSprop/Assign_58"
  input: "^training/RMSprop/Assign_59"
  input: "^training/RMSprop/Assign_60"
  input: "^training/RMSprop/Assign_61"
  input: "^training/RMSprop/Assign_62"
  input: "^training/RMSprop/Assign_63"
  input: "^training/RMSprop/Assign_64"
  input: "^training/RMSprop/Assign_65"
  input: "^training/RMSprop/Assign_66"
  input: "^training/RMSprop/Assign_67"
  input: "^training/RMSprop/Assign_68"
  input: "^training/RMSprop/Assign_69"
  input: "^training/RMSprop/Assign_70"
  input: "^training/RMSprop/Assign_71"
  input: "^training/RMSprop/Assign_72"
  input: "^training/RMSprop/Assign_73"
  input: "^training/RMSprop/Assign_74"
  input: "^training/RMSprop/Assign_75"
  input: "^training/RMSprop/Assign_76"
  input: "^training/RMSprop/Assign_77"
  input: "^training/RMSprop/Assign_78"
  input: "^training/RMSprop/Assign_79"
  input: "^training/RMSprop/Assign_80"
  input: "^training/RMSprop/Assign_81"
  input: "^training/RMSprop/Assign_82"
  input: "^training/RMSprop/Assign_83"
  input: "^training/RMSprop/Assign_84"
  input: "^training/RMSprop/Assign_85"
  input: "^training/RMSprop/Assign_86"
  input: "^training/RMSprop/Assign_87"
  input: "^training/RMSprop/Assign_88"
  input: "^training/RMSprop/Assign_89"
  input: "^training/RMSprop/Assign_90"
  input: "^training/RMSprop/Assign_91"
  input: "^training/RMSprop/Assign_92"
  input: "^training/RMSprop/Assign_93"
  input: "^training/RMSprop/Assign_94"
  input: "^training/RMSprop/Assign_95"
  input: "^training/RMSprop/Assign_96"
  input: "^training/RMSprop/Assign_97"
  input: "^training/RMSprop/Assign_98"
  input: "^training/RMSprop/Assign_99"
  input: "^training/RMSprop/Assign_100"
  input: "^training/RMSprop/Assign_101"
  input: "^training/RMSprop/Assign_102"
  input: "^training/RMSprop/Assign_103"
  input: "^training/RMSprop/Assign_104"
  input: "^training/RMSprop/Assign_105"
  input: "^training/RMSprop/Assign_106"
  input: "^training/RMSprop/Assign_107"
  input: "^training/RMSprop/Assign_108"
  input: "^training/RMSprop/Assign_109"
  input: "^training/RMSprop/Assign_110"
  input: "^training/RMSprop/Assign_111"
  input: "^training/RMSprop/Assign_112"
  input: "^training/RMSprop/Assign_113"
  input: "^training/RMSprop/Assign_114"
  input: "^training/RMSprop/Assign_115"
  input: "^training/RMSprop/Assign_116"
  input: "^training/RMSprop/Assign_117"
  input: "^training/RMSprop/Assign_118"
  input: "^training/RMSprop/Assign_119"
  input: "^training/RMSprop/Assign_120"
  input: "^training/RMSprop/Assign_121"
  input: "^training/RMSprop/Assign_122"
  input: "^training/RMSprop/Assign_123"
  input: "^training/RMSprop/Assign_124"
  input: "^training/RMSprop/Assign_125"
  input: "^training/RMSprop/Assign_126"
  input: "^training/RMSprop/Assign_127"
  input: "^training/RMSprop/Assign_128"
  input: "^training/RMSprop/Assign_129"
  input: "^training/RMSprop/Assign_130"
  input: "^training/RMSprop/Assign_131"
}
node {
  name: "IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv2d_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "conv2d_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "batch_normalization_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "batch_normalization_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "batch_normalization_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "batch_normalization_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "separable_conv2d_1/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "separable_conv2d_1/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_1/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "separable_conv2d_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "batch_normalization_2/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "batch_normalization_2/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "batch_normalization_2/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "batch_normalization_2/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "separable_conv2d_2/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_2/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "separable_conv2d_2/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_2/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "separable_conv2d_2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "batch_normalization_3/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "batch_normalization_3/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "batch_normalization_3/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "batch_normalization_3/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "separable_conv2d_3/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_3/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "separable_conv2d_3/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_3/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "separable_conv2d_3/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "batch_normalization_4/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "batch_normalization_4/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "batch_normalization_4/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "batch_normalization_4/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "separable_conv2d_4/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_4/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "separable_conv2d_4/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_4/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "separable_conv2d_4/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "batch_normalization_5/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "batch_normalization_5/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "batch_normalization_5/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "batch_normalization_5/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "separable_conv2d_5/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_5/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "separable_conv2d_5/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_5/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "separable_conv2d_5/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "batch_normalization_6/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "batch_normalization_6/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "batch_normalization_6/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "batch_normalization_6/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "separable_conv2d_6/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_6/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "separable_conv2d_6/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_6/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "separable_conv2d_6/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "batch_normalization_7/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "batch_normalization_7/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "batch_normalization_7/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "batch_normalization_7/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "separable_conv2d_7/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_7/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "separable_conv2d_7/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_7/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "separable_conv2d_7/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_7/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "batch_normalization_8/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "batch_normalization_8/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "batch_normalization_8/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "batch_normalization_8/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "separable_conv2d_8/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_8/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "separable_conv2d_8/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_8/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "separable_conv2d_8/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_8/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "batch_normalization_9/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "batch_normalization_9/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "batch_normalization_9/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "batch_normalization_9/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "separable_conv2d_9/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_9/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "separable_conv2d_9/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_9/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "separable_conv2d_9/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_9/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "batch_normalization_10/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "batch_normalization_10/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "batch_normalization_10/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "batch_normalization_10/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "separable_conv2d_10/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_10/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "separable_conv2d_10/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_10/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "separable_conv2d_10/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_10/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "batch_normalization_11/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "batch_normalization_11/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "batch_normalization_11/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "batch_normalization_11/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "separable_conv2d_11/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_11/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "separable_conv2d_11/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_11/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "separable_conv2d_11/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_11/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "batch_normalization_12/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "batch_normalization_12/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "batch_normalization_12/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "batch_normalization_12/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "separable_conv2d_12/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_12/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "separable_conv2d_12/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_12/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "separable_conv2d_12/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_12/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_86"
  op: "IsVariableInitialized"
  input: "batch_normalization_13/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_87"
  op: "IsVariableInitialized"
  input: "batch_normalization_13/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_88"
  op: "IsVariableInitialized"
  input: "batch_normalization_13/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_89"
  op: "IsVariableInitialized"
  input: "batch_normalization_13/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_90"
  op: "IsVariableInitialized"
  input: "dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_91"
  op: "IsVariableInitialized"
  input: "dense_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_92"
  op: "IsVariableInitialized"
  input: "conv2d_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_93"
  op: "IsVariableInitialized"
  input: "conv2d_2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_94"
  op: "IsVariableInitialized"
  input: "batch_normalization_14/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_95"
  op: "IsVariableInitialized"
  input: "batch_normalization_14/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_96"
  op: "IsVariableInitialized"
  input: "batch_normalization_14/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_97"
  op: "IsVariableInitialized"
  input: "batch_normalization_14/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_98"
  op: "IsVariableInitialized"
  input: "separable_conv2d_13/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_99"
  op: "IsVariableInitialized"
  input: "separable_conv2d_13/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_100"
  op: "IsVariableInitialized"
  input: "separable_conv2d_13/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_13/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_101"
  op: "IsVariableInitialized"
  input: "batch_normalization_15/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_102"
  op: "IsVariableInitialized"
  input: "batch_normalization_15/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_103"
  op: "IsVariableInitialized"
  input: "batch_normalization_15/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_104"
  op: "IsVariableInitialized"
  input: "batch_normalization_15/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_105"
  op: "IsVariableInitialized"
  input: "separable_conv2d_14/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_106"
  op: "IsVariableInitialized"
  input: "separable_conv2d_14/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_107"
  op: "IsVariableInitialized"
  input: "separable_conv2d_14/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_14/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_108"
  op: "IsVariableInitialized"
  input: "batch_normalization_16/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_109"
  op: "IsVariableInitialized"
  input: "batch_normalization_16/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_110"
  op: "IsVariableInitialized"
  input: "batch_normalization_16/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_111"
  op: "IsVariableInitialized"
  input: "batch_normalization_16/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_112"
  op: "IsVariableInitialized"
  input: "separable_conv2d_15/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_113"
  op: "IsVariableInitialized"
  input: "separable_conv2d_15/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_114"
  op: "IsVariableInitialized"
  input: "separable_conv2d_15/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_15/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_115"
  op: "IsVariableInitialized"
  input: "batch_normalization_17/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_116"
  op: "IsVariableInitialized"
  input: "batch_normalization_17/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_117"
  op: "IsVariableInitialized"
  input: "batch_normalization_17/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_118"
  op: "IsVariableInitialized"
  input: "batch_normalization_17/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_119"
  op: "IsVariableInitialized"
  input: "separable_conv2d_16/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_120"
  op: "IsVariableInitialized"
  input: "separable_conv2d_16/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_121"
  op: "IsVariableInitialized"
  input: "separable_conv2d_16/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_16/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_122"
  op: "IsVariableInitialized"
  input: "batch_normalization_18/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_123"
  op: "IsVariableInitialized"
  input: "batch_normalization_18/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_124"
  op: "IsVariableInitialized"
  input: "batch_normalization_18/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_125"
  op: "IsVariableInitialized"
  input: "batch_normalization_18/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_126"
  op: "IsVariableInitialized"
  input: "separable_conv2d_17/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_127"
  op: "IsVariableInitialized"
  input: "separable_conv2d_17/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_128"
  op: "IsVariableInitialized"
  input: "separable_conv2d_17/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_17/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_129"
  op: "IsVariableInitialized"
  input: "batch_normalization_19/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_130"
  op: "IsVariableInitialized"
  input: "batch_normalization_19/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_131"
  op: "IsVariableInitialized"
  input: "batch_normalization_19/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_132"
  op: "IsVariableInitialized"
  input: "batch_normalization_19/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_133"
  op: "IsVariableInitialized"
  input: "separable_conv2d_18/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_134"
  op: "IsVariableInitialized"
  input: "separable_conv2d_18/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_135"
  op: "IsVariableInitialized"
  input: "separable_conv2d_18/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_18/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_136"
  op: "IsVariableInitialized"
  input: "batch_normalization_20/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_137"
  op: "IsVariableInitialized"
  input: "batch_normalization_20/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_138"
  op: "IsVariableInitialized"
  input: "batch_normalization_20/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_139"
  op: "IsVariableInitialized"
  input: "batch_normalization_20/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_140"
  op: "IsVariableInitialized"
  input: "separable_conv2d_19/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_141"
  op: "IsVariableInitialized"
  input: "separable_conv2d_19/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_142"
  op: "IsVariableInitialized"
  input: "separable_conv2d_19/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_19/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_143"
  op: "IsVariableInitialized"
  input: "batch_normalization_21/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_144"
  op: "IsVariableInitialized"
  input: "batch_normalization_21/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_145"
  op: "IsVariableInitialized"
  input: "batch_normalization_21/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_146"
  op: "IsVariableInitialized"
  input: "batch_normalization_21/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_147"
  op: "IsVariableInitialized"
  input: "separable_conv2d_20/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_148"
  op: "IsVariableInitialized"
  input: "separable_conv2d_20/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_149"
  op: "IsVariableInitialized"
  input: "separable_conv2d_20/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_20/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_150"
  op: "IsVariableInitialized"
  input: "batch_normalization_22/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_151"
  op: "IsVariableInitialized"
  input: "batch_normalization_22/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_152"
  op: "IsVariableInitialized"
  input: "batch_normalization_22/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_153"
  op: "IsVariableInitialized"
  input: "batch_normalization_22/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_154"
  op: "IsVariableInitialized"
  input: "separable_conv2d_21/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_155"
  op: "IsVariableInitialized"
  input: "separable_conv2d_21/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_156"
  op: "IsVariableInitialized"
  input: "separable_conv2d_21/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_21/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_157"
  op: "IsVariableInitialized"
  input: "batch_normalization_23/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_158"
  op: "IsVariableInitialized"
  input: "batch_normalization_23/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_159"
  op: "IsVariableInitialized"
  input: "batch_normalization_23/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_160"
  op: "IsVariableInitialized"
  input: "batch_normalization_23/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_161"
  op: "IsVariableInitialized"
  input: "separable_conv2d_22/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_162"
  op: "IsVariableInitialized"
  input: "separable_conv2d_22/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_163"
  op: "IsVariableInitialized"
  input: "separable_conv2d_22/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_22/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_164"
  op: "IsVariableInitialized"
  input: "batch_normalization_24/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_165"
  op: "IsVariableInitialized"
  input: "batch_normalization_24/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_166"
  op: "IsVariableInitialized"
  input: "batch_normalization_24/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_167"
  op: "IsVariableInitialized"
  input: "batch_normalization_24/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_168"
  op: "IsVariableInitialized"
  input: "separable_conv2d_23/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_169"
  op: "IsVariableInitialized"
  input: "separable_conv2d_23/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_170"
  op: "IsVariableInitialized"
  input: "separable_conv2d_23/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_23/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_171"
  op: "IsVariableInitialized"
  input: "batch_normalization_25/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_172"
  op: "IsVariableInitialized"
  input: "batch_normalization_25/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_173"
  op: "IsVariableInitialized"
  input: "batch_normalization_25/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_174"
  op: "IsVariableInitialized"
  input: "batch_normalization_25/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_175"
  op: "IsVariableInitialized"
  input: "separable_conv2d_24/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_176"
  op: "IsVariableInitialized"
  input: "separable_conv2d_24/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_177"
  op: "IsVariableInitialized"
  input: "separable_conv2d_24/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_24/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_178"
  op: "IsVariableInitialized"
  input: "batch_normalization_26/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_179"
  op: "IsVariableInitialized"
  input: "batch_normalization_26/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_180"
  op: "IsVariableInitialized"
  input: "batch_normalization_26/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_181"
  op: "IsVariableInitialized"
  input: "batch_normalization_26/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_182"
  op: "IsVariableInitialized"
  input: "dense_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_183"
  op: "IsVariableInitialized"
  input: "dense_2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_184"
  op: "IsVariableInitialized"
  input: "RMSprop/lr"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/lr"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_185"
  op: "IsVariableInitialized"
  input: "RMSprop/rho"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/rho"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_186"
  op: "IsVariableInitialized"
  input: "RMSprop/decay"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_187"
  op: "IsVariableInitialized"
  input: "RMSprop/iterations"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/iterations"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "IsVariableInitialized_188"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_189"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_190"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_191"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_192"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_193"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_194"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_6"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_6"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_195"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_7"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_7"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_196"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_8"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_8"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_197"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_9"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_9"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_198"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_10"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_10"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_199"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_11"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_11"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_200"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_12"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_12"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_201"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_13"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_13"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_202"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_14"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_14"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_203"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_15"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_15"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_204"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_16"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_16"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_205"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_17"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_17"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_206"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_18"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_18"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_207"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_19"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_19"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_208"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_20"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_20"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_209"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_21"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_21"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_210"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_22"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_22"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_211"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_23"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_23"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_212"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_24"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_24"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_213"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_25"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_25"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_214"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_26"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_26"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_215"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_27"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_27"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_216"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_28"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_28"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_217"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_29"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_29"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_218"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_30"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_30"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_219"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_31"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_31"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_220"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_32"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_32"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_221"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_33"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_33"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_222"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_34"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_34"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_223"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_35"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_35"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_224"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_36"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_36"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_225"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_37"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_37"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_226"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_38"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_38"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_227"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_39"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_39"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_228"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_40"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_40"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_229"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_41"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_41"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_230"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_42"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_42"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_231"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_43"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_43"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_232"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_44"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_44"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_233"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_45"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_45"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_234"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_46"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_46"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_235"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_47"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_47"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_236"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_48"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_48"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_237"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_49"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_49"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_238"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_50"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_50"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_239"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_51"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_51"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_240"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_52"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_52"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_241"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_53"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_53"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_242"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_54"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_54"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_243"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_55"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_55"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_244"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_56"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_56"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_245"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_57"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_57"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_246"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_58"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_58"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_247"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_59"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_59"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_248"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_60"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_60"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_249"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_61"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_61"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_250"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_62"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_62"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_251"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_63"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_63"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_252"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_64"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_64"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_253"
  op: "IsVariableInitialized"
  input: "training/RMSprop/Variable_65"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/Variable_65"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^conv2d_1/kernel/Assign"
  input: "^conv2d_1/bias/Assign"
  input: "^batch_normalization_1/gamma/Assign"
  input: "^batch_normalization_1/beta/Assign"
  input: "^batch_normalization_1/moving_mean/Assign"
  input: "^batch_normalization_1/moving_variance/Assign"
  input: "^separable_conv2d_1/depthwise_kernel/Assign"
  input: "^separable_conv2d_1/pointwise_kernel/Assign"
  input: "^separable_conv2d_1/bias/Assign"
  input: "^batch_normalization_2/gamma/Assign"
  input: "^batch_normalization_2/beta/Assign"
  input: "^batch_normalization_2/moving_mean/Assign"
  input: "^batch_normalization_2/moving_variance/Assign"
  input: "^separable_conv2d_2/depthwise_kernel/Assign"
  input: "^separable_conv2d_2/pointwise_kernel/Assign"
  input: "^separable_conv2d_2/bias/Assign"
  input: "^batch_normalization_3/gamma/Assign"
  input: "^batch_normalization_3/beta/Assign"
  input: "^batch_normalization_3/moving_mean/Assign"
  input: "^batch_normalization_3/moving_variance/Assign"
  input: "^separable_conv2d_3/depthwise_kernel/Assign"
  input: "^separable_conv2d_3/pointwise_kernel/Assign"
  input: "^separable_conv2d_3/bias/Assign"
  input: "^batch_normalization_4/gamma/Assign"
  input: "^batch_normalization_4/beta/Assign"
  input: "^batch_normalization_4/moving_mean/Assign"
  input: "^batch_normalization_4/moving_variance/Assign"
  input: "^separable_conv2d_4/depthwise_kernel/Assign"
  input: "^separable_conv2d_4/pointwise_kernel/Assign"
  input: "^separable_conv2d_4/bias/Assign"
  input: "^batch_normalization_5/gamma/Assign"
  input: "^batch_normalization_5/beta/Assign"
  input: "^batch_normalization_5/moving_mean/Assign"
  input: "^batch_normalization_5/moving_variance/Assign"
  input: "^separable_conv2d_5/depthwise_kernel/Assign"
  input: "^separable_conv2d_5/pointwise_kernel/Assign"
  input: "^separable_conv2d_5/bias/Assign"
  input: "^batch_normalization_6/gamma/Assign"
  input: "^batch_normalization_6/beta/Assign"
  input: "^batch_normalization_6/moving_mean/Assign"
  input: "^batch_normalization_6/moving_variance/Assign"
  input: "^separable_conv2d_6/depthwise_kernel/Assign"
  input: "^separable_conv2d_6/pointwise_kernel/Assign"
  input: "^separable_conv2d_6/bias/Assign"
  input: "^batch_normalization_7/gamma/Assign"
  input: "^batch_normalization_7/beta/Assign"
  input: "^batch_normalization_7/moving_mean/Assign"
  input: "^batch_normalization_7/moving_variance/Assign"
  input: "^separable_conv2d_7/depthwise_kernel/Assign"
  input: "^separable_conv2d_7/pointwise_kernel/Assign"
  input: "^separable_conv2d_7/bias/Assign"
  input: "^batch_normalization_8/gamma/Assign"
  input: "^batch_normalization_8/beta/Assign"
  input: "^batch_normalization_8/moving_mean/Assign"
  input: "^batch_normalization_8/moving_variance/Assign"
  input: "^separable_conv2d_8/depthwise_kernel/Assign"
  input: "^separable_conv2d_8/pointwise_kernel/Assign"
  input: "^separable_conv2d_8/bias/Assign"
  input: "^batch_normalization_9/gamma/Assign"
  input: "^batch_normalization_9/beta/Assign"
  input: "^batch_normalization_9/moving_mean/Assign"
  input: "^batch_normalization_9/moving_variance/Assign"
  input: "^separable_conv2d_9/depthwise_kernel/Assign"
  input: "^separable_conv2d_9/pointwise_kernel/Assign"
  input: "^separable_conv2d_9/bias/Assign"
  input: "^batch_normalization_10/gamma/Assign"
  input: "^batch_normalization_10/beta/Assign"
  input: "^batch_normalization_10/moving_mean/Assign"
  input: "^batch_normalization_10/moving_variance/Assign"
  input: "^separable_conv2d_10/depthwise_kernel/Assign"
  input: "^separable_conv2d_10/pointwise_kernel/Assign"
  input: "^separable_conv2d_10/bias/Assign"
  input: "^batch_normalization_11/gamma/Assign"
  input: "^batch_normalization_11/beta/Assign"
  input: "^batch_normalization_11/moving_mean/Assign"
  input: "^batch_normalization_11/moving_variance/Assign"
  input: "^separable_conv2d_11/depthwise_kernel/Assign"
  input: "^separable_conv2d_11/pointwise_kernel/Assign"
  input: "^separable_conv2d_11/bias/Assign"
  input: "^batch_normalization_12/gamma/Assign"
  input: "^batch_normalization_12/beta/Assign"
  input: "^batch_normalization_12/moving_mean/Assign"
  input: "^batch_normalization_12/moving_variance/Assign"
  input: "^separable_conv2d_12/depthwise_kernel/Assign"
  input: "^separable_conv2d_12/pointwise_kernel/Assign"
  input: "^separable_conv2d_12/bias/Assign"
  input: "^batch_normalization_13/gamma/Assign"
  input: "^batch_normalization_13/beta/Assign"
  input: "^batch_normalization_13/moving_mean/Assign"
  input: "^batch_normalization_13/moving_variance/Assign"
  input: "^dense_1/kernel/Assign"
  input: "^dense_1/bias/Assign"
  input: "^conv2d_2/kernel/Assign"
  input: "^conv2d_2/bias/Assign"
  input: "^batch_normalization_14/gamma/Assign"
  input: "^batch_normalization_14/beta/Assign"
  input: "^batch_normalization_14/moving_mean/Assign"
  input: "^batch_normalization_14/moving_variance/Assign"
  input: "^separable_conv2d_13/depthwise_kernel/Assign"
  input: "^separable_conv2d_13/pointwise_kernel/Assign"
  input: "^separable_conv2d_13/bias/Assign"
  input: "^batch_normalization_15/gamma/Assign"
  input: "^batch_normalization_15/beta/Assign"
  input: "^batch_normalization_15/moving_mean/Assign"
  input: "^batch_normalization_15/moving_variance/Assign"
  input: "^separable_conv2d_14/depthwise_kernel/Assign"
  input: "^separable_conv2d_14/pointwise_kernel/Assign"
  input: "^separable_conv2d_14/bias/Assign"
  input: "^batch_normalization_16/gamma/Assign"
  input: "^batch_normalization_16/beta/Assign"
  input: "^batch_normalization_16/moving_mean/Assign"
  input: "^batch_normalization_16/moving_variance/Assign"
  input: "^separable_conv2d_15/depthwise_kernel/Assign"
  input: "^separable_conv2d_15/pointwise_kernel/Assign"
  input: "^separable_conv2d_15/bias/Assign"
  input: "^batch_normalization_17/gamma/Assign"
  input: "^batch_normalization_17/beta/Assign"
  input: "^batch_normalization_17/moving_mean/Assign"
  input: "^batch_normalization_17/moving_variance/Assign"
  input: "^separable_conv2d_16/depthwise_kernel/Assign"
  input: "^separable_conv2d_16/pointwise_kernel/Assign"
  input: "^separable_conv2d_16/bias/Assign"
  input: "^batch_normalization_18/gamma/Assign"
  input: "^batch_normalization_18/beta/Assign"
  input: "^batch_normalization_18/moving_mean/Assign"
  input: "^batch_normalization_18/moving_variance/Assign"
  input: "^separable_conv2d_17/depthwise_kernel/Assign"
  input: "^separable_conv2d_17/pointwise_kernel/Assign"
  input: "^separable_conv2d_17/bias/Assign"
  input: "^batch_normalization_19/gamma/Assign"
  input: "^batch_normalization_19/beta/Assign"
  input: "^batch_normalization_19/moving_mean/Assign"
  input: "^batch_normalization_19/moving_variance/Assign"
  input: "^separable_conv2d_18/depthwise_kernel/Assign"
  input: "^separable_conv2d_18/pointwise_kernel/Assign"
  input: "^separable_conv2d_18/bias/Assign"
  input: "^batch_normalization_20/gamma/Assign"
  input: "^batch_normalization_20/beta/Assign"
  input: "^batch_normalization_20/moving_mean/Assign"
  input: "^batch_normalization_20/moving_variance/Assign"
  input: "^separable_conv2d_19/depthwise_kernel/Assign"
  input: "^separable_conv2d_19/pointwise_kernel/Assign"
  input: "^separable_conv2d_19/bias/Assign"
  input: "^batch_normalization_21/gamma/Assign"
  input: "^batch_normalization_21/beta/Assign"
  input: "^batch_normalization_21/moving_mean/Assign"
  input: "^batch_normalization_21/moving_variance/Assign"
  input: "^separable_conv2d_20/depthwise_kernel/Assign"
  input: "^separable_conv2d_20/pointwise_kernel/Assign"
  input: "^separable_conv2d_20/bias/Assign"
  input: "^batch_normalization_22/gamma/Assign"
  input: "^batch_normalization_22/beta/Assign"
  input: "^batch_normalization_22/moving_mean/Assign"
  input: "^batch_normalization_22/moving_variance/Assign"
  input: "^separable_conv2d_21/depthwise_kernel/Assign"
  input: "^separable_conv2d_21/pointwise_kernel/Assign"
  input: "^separable_conv2d_21/bias/Assign"
  input: "^batch_normalization_23/gamma/Assign"
  input: "^batch_normalization_23/beta/Assign"
  input: "^batch_normalization_23/moving_mean/Assign"
  input: "^batch_normalization_23/moving_variance/Assign"
  input: "^separable_conv2d_22/depthwise_kernel/Assign"
  input: "^separable_conv2d_22/pointwise_kernel/Assign"
  input: "^separable_conv2d_22/bias/Assign"
  input: "^batch_normalization_24/gamma/Assign"
  input: "^batch_normalization_24/beta/Assign"
  input: "^batch_normalization_24/moving_mean/Assign"
  input: "^batch_normalization_24/moving_variance/Assign"
  input: "^separable_conv2d_23/depthwise_kernel/Assign"
  input: "^separable_conv2d_23/pointwise_kernel/Assign"
  input: "^separable_conv2d_23/bias/Assign"
  input: "^batch_normalization_25/gamma/Assign"
  input: "^batch_normalization_25/beta/Assign"
  input: "^batch_normalization_25/moving_mean/Assign"
  input: "^batch_normalization_25/moving_variance/Assign"
  input: "^separable_conv2d_24/depthwise_kernel/Assign"
  input: "^separable_conv2d_24/pointwise_kernel/Assign"
  input: "^separable_conv2d_24/bias/Assign"
  input: "^batch_normalization_26/gamma/Assign"
  input: "^batch_normalization_26/beta/Assign"
  input: "^batch_normalization_26/moving_mean/Assign"
  input: "^batch_normalization_26/moving_variance/Assign"
  input: "^dense_2/kernel/Assign"
  input: "^dense_2/bias/Assign"
  input: "^RMSprop/lr/Assign"
  input: "^RMSprop/rho/Assign"
  input: "^RMSprop/decay/Assign"
  input: "^RMSprop/iterations/Assign"
  input: "^training/RMSprop/Variable/Assign"
  input: "^training/RMSprop/Variable_1/Assign"
  input: "^training/RMSprop/Variable_2/Assign"
  input: "^training/RMSprop/Variable_3/Assign"
  input: "^training/RMSprop/Variable_4/Assign"
  input: "^training/RMSprop/Variable_5/Assign"
  input: "^training/RMSprop/Variable_6/Assign"
  input: "^training/RMSprop/Variable_7/Assign"
  input: "^training/RMSprop/Variable_8/Assign"
  input: "^training/RMSprop/Variable_9/Assign"
  input: "^training/RMSprop/Variable_10/Assign"
  input: "^training/RMSprop/Variable_11/Assign"
  input: "^training/RMSprop/Variable_12/Assign"
  input: "^training/RMSprop/Variable_13/Assign"
  input: "^training/RMSprop/Variable_14/Assign"
  input: "^training/RMSprop/Variable_15/Assign"
  input: "^training/RMSprop/Variable_16/Assign"
  input: "^training/RMSprop/Variable_17/Assign"
  input: "^training/RMSprop/Variable_18/Assign"
  input: "^training/RMSprop/Variable_19/Assign"
  input: "^training/RMSprop/Variable_20/Assign"
  input: "^training/RMSprop/Variable_21/Assign"
  input: "^training/RMSprop/Variable_22/Assign"
  input: "^training/RMSprop/Variable_23/Assign"
  input: "^training/RMSprop/Variable_24/Assign"
  input: "^training/RMSprop/Variable_25/Assign"
  input: "^training/RMSprop/Variable_26/Assign"
  input: "^training/RMSprop/Variable_27/Assign"
  input: "^training/RMSprop/Variable_28/Assign"
  input: "^training/RMSprop/Variable_29/Assign"
  input: "^training/RMSprop/Variable_30/Assign"
  input: "^training/RMSprop/Variable_31/Assign"
  input: "^training/RMSprop/Variable_32/Assign"
  input: "^training/RMSprop/Variable_33/Assign"
  input: "^training/RMSprop/Variable_34/Assign"
  input: "^training/RMSprop/Variable_35/Assign"
  input: "^training/RMSprop/Variable_36/Assign"
  input: "^training/RMSprop/Variable_37/Assign"
  input: "^training/RMSprop/Variable_38/Assign"
  input: "^training/RMSprop/Variable_39/Assign"
  input: "^training/RMSprop/Variable_40/Assign"
  input: "^training/RMSprop/Variable_41/Assign"
  input: "^training/RMSprop/Variable_42/Assign"
  input: "^training/RMSprop/Variable_43/Assign"
  input: "^training/RMSprop/Variable_44/Assign"
  input: "^training/RMSprop/Variable_45/Assign"
  input: "^training/RMSprop/Variable_46/Assign"
  input: "^training/RMSprop/Variable_47/Assign"
  input: "^training/RMSprop/Variable_48/Assign"
  input: "^training/RMSprop/Variable_49/Assign"
  input: "^training/RMSprop/Variable_50/Assign"
  input: "^training/RMSprop/Variable_51/Assign"
  input: "^training/RMSprop/Variable_52/Assign"
  input: "^training/RMSprop/Variable_53/Assign"
  input: "^training/RMSprop/Variable_54/Assign"
  input: "^training/RMSprop/Variable_55/Assign"
  input: "^training/RMSprop/Variable_56/Assign"
  input: "^training/RMSprop/Variable_57/Assign"
  input: "^training/RMSprop/Variable_58/Assign"
  input: "^training/RMSprop/Variable_59/Assign"
  input: "^training/RMSprop/Variable_60/Assign"
  input: "^training/RMSprop/Variable_61/Assign"
  input: "^training/RMSprop/Variable_62/Assign"
  input: "^training/RMSprop/Variable_63/Assign"
  input: "^training/RMSprop/Variable_64/Assign"
  input: "^training/RMSprop/Variable_65/Assign"
}
node {
  name: "conv2d_3_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 224
        }
        dim {
          size: 224
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "conv2d_3/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_3/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "conv2d_3/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "conv2d_3/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_3/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4719900
    }
  }
}
node {
  name: "conv2d_3/random_uniform/sub"
  op: "Sub"
  input: "conv2d_3/random_uniform/max"
  input: "conv2d_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_3/random_uniform/mul"
  op: "Mul"
  input: "conv2d_3/random_uniform/RandomUniform"
  input: "conv2d_3/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_3/random_uniform"
  op: "Add"
  input: "conv2d_3/random_uniform/mul"
  input: "conv2d_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_3/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_3/kernel/Assign"
  op: "Assign"
  input: "conv2d_3/kernel"
  input: "conv2d_3/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_3/kernel/read"
  op: "Identity"
  input: "conv2d_3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
}
node {
  name: "conv2d_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_3/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_3/bias/Assign"
  op: "Assign"
  input: "conv2d_3/bias"
  input: "conv2d_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_3/bias/read"
  op: "Identity"
  input: "conv2d_3/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/bias"
      }
    }
  }
}
node {
  name: "conv2d_3/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_3/convolution"
  op: "Conv2D"
  input: "conv2d_3_input"
  input: "conv2d_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_3/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_3/convolution"
  input: "conv2d_3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_27/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_27/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_27/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_27/gamma"
  input: "batch_normalization_27/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_27/gamma/read"
  op: "Identity"
  input: "batch_normalization_27/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_27/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_27/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_27/beta/Assign"
  op: "Assign"
  input: "batch_normalization_27/beta"
  input: "batch_normalization_27/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_27/beta/read"
  op: "Identity"
  input: "batch_normalization_27/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_27/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_27/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_27/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_27/moving_mean"
  input: "batch_normalization_27/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_27/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_27/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_27/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_27/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_27/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_27/moving_variance"
  input: "batch_normalization_27/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_27/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_27/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_27/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_27/moments/mean"
  op: "Mean"
  input: "conv2d_3/BiasAdd"
  input: "batch_normalization_27/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_27/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_27/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_27/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "conv2d_3/BiasAdd"
  input: "batch_normalization_27/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_27/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_27/moments/variance"
  op: "Mean"
  input: "batch_normalization_27/moments/SquaredDifference"
  input: "batch_normalization_27/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_27/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_27/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_27/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_27/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_27/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_27/batchnorm/add"
  op: "Add"
  input: "batch_normalization_27/moments/Squeeze_1"
  input: "batch_normalization_27/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_27/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_27/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_27/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_27/batchnorm/Rsqrt"
  input: "batch_normalization_27/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_27/batchnorm/mul_1"
  op: "Mul"
  input: "conv2d_3/BiasAdd"
  input: "batch_normalization_27/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_27/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_27/moments/Squeeze"
  input: "batch_normalization_27/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_27/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_27/beta/read"
  input: "batch_normalization_27/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_27/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_27/batchnorm/mul_1"
  input: "batch_normalization_27/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_27/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_27/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_27/moving_mean/read"
  input: "batch_normalization_27/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_27/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_27/AssignMovingAvg/sub"
  input: "batch_normalization_27/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_27/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_27/moving_mean"
  input: "batch_normalization_27/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_27/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_27/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_27/moving_variance/read"
  input: "batch_normalization_27/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_27/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_27/AssignMovingAvg_1/sub"
  input: "batch_normalization_27/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_27/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_27/moving_variance"
  input: "batch_normalization_27/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_27/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_27/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_27/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_27/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_27/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_27/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_27/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_27/batchnorm/add_1"
  input: "batch_normalization_27/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_27/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_27/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_27/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_27/cond/batchnorm/add/Switch"
  input: "batch_normalization_27/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_27/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_27/moving_variance/read"
  input: "batch_normalization_27/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_27/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_27/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_27/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_27/cond/batchnorm/Rsqrt"
  input: "batch_normalization_27/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_27/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_27/gamma/read"
  input: "batch_normalization_27/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_27/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_27/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_27/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_27/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "conv2d_3/BiasAdd"
  input: "batch_normalization_27/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_27/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_27/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_27/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_27/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_27/moving_mean/read"
  input: "batch_normalization_27/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_27/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_27/cond/batchnorm/sub/Switch"
  input: "batch_normalization_27/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_27/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_27/beta/read"
  input: "batch_normalization_27/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_27/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_27/cond/batchnorm/mul_1"
  input: "batch_normalization_27/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_27/cond/Merge"
  op: "Merge"
  input: "batch_normalization_27/cond/batchnorm/add_1"
  input: "batch_normalization_27/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_27/Elu"
  op: "Elu"
  input: "batch_normalization_27/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "max_pooling2d_5/MaxPool"
  op: "MaxPool"
  input: "activation_27/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_25/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_25/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "separable_conv2d_25/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "separable_conv2d_25/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_25/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9949202
    }
  }
}
node {
  name: "separable_conv2d_25/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_25/random_uniform/max"
  input: "separable_conv2d_25/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_25/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_25/random_uniform/RandomUniform"
  input: "separable_conv2d_25/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_25/random_uniform"
  op: "Add"
  input: "separable_conv2d_25/random_uniform/mul"
  input: "separable_conv2d_25/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_25/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_25/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_25/depthwise_kernel"
  input: "separable_conv2d_25/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_25/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_25/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_25/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_25/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_25/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_25/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "separable_conv2d_25/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "separable_conv2d_25/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_25/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5622676
    }
  }
}
node {
  name: "separable_conv2d_25/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_25/random_uniform_1/max"
  input: "separable_conv2d_25/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_25/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_25/random_uniform_1/RandomUniform"
  input: "separable_conv2d_25/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_25/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_25/random_uniform_1/mul"
  input: "separable_conv2d_25/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_25/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_25/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_25/pointwise_kernel"
  input: "separable_conv2d_25/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_25/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_25/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_25/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_25/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_25/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_25/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_25/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_25/bias"
  input: "separable_conv2d_25/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_25/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_25/bias/read"
  op: "Identity"
  input: "separable_conv2d_25/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_25/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_25/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_25/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_25/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "max_pooling2d_5/MaxPool"
  input: "separable_conv2d_25/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_25/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_25/separable_conv2d/depthwise"
  input: "separable_conv2d_25/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_25/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_25/separable_conv2d"
  input: "separable_conv2d_25/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_28/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_28/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_28/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_28/gamma"
  input: "batch_normalization_28/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_28/gamma/read"
  op: "Identity"
  input: "batch_normalization_28/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_28/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_28/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_28/beta/Assign"
  op: "Assign"
  input: "batch_normalization_28/beta"
  input: "batch_normalization_28/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_28/beta/read"
  op: "Identity"
  input: "batch_normalization_28/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_28/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_28/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_28/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_28/moving_mean"
  input: "batch_normalization_28/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_28/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_28/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_28/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_28/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_28/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_28/moving_variance"
  input: "batch_normalization_28/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_28/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_28/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_28/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_28/moments/mean"
  op: "Mean"
  input: "separable_conv2d_25/BiasAdd"
  input: "batch_normalization_28/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_28/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_28/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_28/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_25/BiasAdd"
  input: "batch_normalization_28/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_28/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_28/moments/variance"
  op: "Mean"
  input: "batch_normalization_28/moments/SquaredDifference"
  input: "batch_normalization_28/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_28/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_28/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_28/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_28/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_28/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_28/batchnorm/add"
  op: "Add"
  input: "batch_normalization_28/moments/Squeeze_1"
  input: "batch_normalization_28/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_28/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_28/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_28/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_28/batchnorm/Rsqrt"
  input: "batch_normalization_28/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_28/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_25/BiasAdd"
  input: "batch_normalization_28/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_28/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_28/moments/Squeeze"
  input: "batch_normalization_28/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_28/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_28/beta/read"
  input: "batch_normalization_28/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_28/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_28/batchnorm/mul_1"
  input: "batch_normalization_28/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_28/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_28/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_28/moving_mean/read"
  input: "batch_normalization_28/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_28/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_28/AssignMovingAvg/sub"
  input: "batch_normalization_28/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_28/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_28/moving_mean"
  input: "batch_normalization_28/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_28/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_28/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_28/moving_variance/read"
  input: "batch_normalization_28/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_28/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_28/AssignMovingAvg_1/sub"
  input: "batch_normalization_28/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_28/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_28/moving_variance"
  input: "batch_normalization_28/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_28/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_28/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_28/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_28/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_28/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_28/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_28/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_28/batchnorm/add_1"
  input: "batch_normalization_28/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_28/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_28/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_28/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_28/cond/batchnorm/add/Switch"
  input: "batch_normalization_28/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_28/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_28/moving_variance/read"
  input: "batch_normalization_28/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_28/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_28/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_28/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_28/cond/batchnorm/Rsqrt"
  input: "batch_normalization_28/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_28/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_28/gamma/read"
  input: "batch_normalization_28/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_28/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_28/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_28/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_28/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_25/BiasAdd"
  input: "batch_normalization_28/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_25/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_28/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_28/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_28/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_28/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_28/moving_mean/read"
  input: "batch_normalization_28/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_28/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_28/cond/batchnorm/sub/Switch"
  input: "batch_normalization_28/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_28/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_28/beta/read"
  input: "batch_normalization_28/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_28/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_28/cond/batchnorm/mul_1"
  input: "batch_normalization_28/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_28/cond/Merge"
  op: "Merge"
  input: "batch_normalization_28/cond/batchnorm/add_1"
  input: "batch_normalization_28/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_28/Elu"
  op: "Elu"
  input: "batch_normalization_28/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "max_pooling2d_6/MaxPool"
  op: "MaxPool"
  input: "activation_28/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_26/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_26/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "separable_conv2d_26/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "separable_conv2d_26/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_26/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1122384
    }
  }
}
node {
  name: "separable_conv2d_26/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_26/random_uniform/max"
  input: "separable_conv2d_26/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_26/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_26/random_uniform/RandomUniform"
  input: "separable_conv2d_26/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_26/random_uniform"
  op: "Add"
  input: "separable_conv2d_26/random_uniform/mul"
  input: "separable_conv2d_26/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_26/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_26/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_26/depthwise_kernel"
  input: "separable_conv2d_26/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_26/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_26/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_26/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_26/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_26/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_26/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1767766922712326
      }
    }
  }
}
node {
  name: "separable_conv2d_26/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "separable_conv2d_26/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_26/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6533668
    }
  }
}
node {
  name: "separable_conv2d_26/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_26/random_uniform_1/max"
  input: "separable_conv2d_26/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_26/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_26/random_uniform_1/RandomUniform"
  input: "separable_conv2d_26/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_26/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_26/random_uniform_1/mul"
  input: "separable_conv2d_26/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_26/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_26/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_26/pointwise_kernel"
  input: "separable_conv2d_26/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_26/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_26/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_26/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_26/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_26/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_26/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_26/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_26/bias"
  input: "separable_conv2d_26/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_26/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_26/bias/read"
  op: "Identity"
  input: "separable_conv2d_26/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_26/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_26/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_26/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_26/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "max_pooling2d_6/MaxPool"
  input: "separable_conv2d_26/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_26/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_26/separable_conv2d/depthwise"
  input: "separable_conv2d_26/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_26/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_26/separable_conv2d"
  input: "separable_conv2d_26/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_29/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_29/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_29/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_29/gamma"
  input: "batch_normalization_29/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_29/gamma/read"
  op: "Identity"
  input: "batch_normalization_29/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_29/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_29/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_29/beta/Assign"
  op: "Assign"
  input: "batch_normalization_29/beta"
  input: "batch_normalization_29/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_29/beta/read"
  op: "Identity"
  input: "batch_normalization_29/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_29/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_29/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_29/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_29/moving_mean"
  input: "batch_normalization_29/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_29/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_29/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_29/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_29/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_29/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_29/moving_variance"
  input: "batch_normalization_29/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_29/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_29/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_29/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_29/moments/mean"
  op: "Mean"
  input: "separable_conv2d_26/BiasAdd"
  input: "batch_normalization_29/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_29/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_29/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_29/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_26/BiasAdd"
  input: "batch_normalization_29/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_29/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_29/moments/variance"
  op: "Mean"
  input: "batch_normalization_29/moments/SquaredDifference"
  input: "batch_normalization_29/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_29/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_29/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_29/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_29/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_29/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_29/batchnorm/add"
  op: "Add"
  input: "batch_normalization_29/moments/Squeeze_1"
  input: "batch_normalization_29/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_29/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_29/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_29/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_29/batchnorm/Rsqrt"
  input: "batch_normalization_29/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_29/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_26/BiasAdd"
  input: "batch_normalization_29/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_29/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_29/moments/Squeeze"
  input: "batch_normalization_29/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_29/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_29/beta/read"
  input: "batch_normalization_29/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_29/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_29/batchnorm/mul_1"
  input: "batch_normalization_29/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_29/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_29/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_29/moving_mean/read"
  input: "batch_normalization_29/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_29/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_29/AssignMovingAvg/sub"
  input: "batch_normalization_29/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_29/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_29/moving_mean"
  input: "batch_normalization_29/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_29/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_29/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_29/moving_variance/read"
  input: "batch_normalization_29/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_29/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_29/AssignMovingAvg_1/sub"
  input: "batch_normalization_29/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_29/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_29/moving_variance"
  input: "batch_normalization_29/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_29/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_29/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_29/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_29/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_29/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_29/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_29/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_29/batchnorm/add_1"
  input: "batch_normalization_29/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_29/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_29/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_29/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_29/cond/batchnorm/add/Switch"
  input: "batch_normalization_29/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_29/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_29/moving_variance/read"
  input: "batch_normalization_29/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_29/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_29/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_29/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_29/cond/batchnorm/Rsqrt"
  input: "batch_normalization_29/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_29/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_29/gamma/read"
  input: "batch_normalization_29/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_29/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_29/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_29/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_29/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_26/BiasAdd"
  input: "batch_normalization_29/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_26/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_29/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_29/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_29/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_29/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_29/moving_mean/read"
  input: "batch_normalization_29/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_29/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_29/cond/batchnorm/sub/Switch"
  input: "batch_normalization_29/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_29/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_29/beta/read"
  input: "batch_normalization_29/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_29/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_29/cond/batchnorm/mul_1"
  input: "batch_normalization_29/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_29/cond/Merge"
  op: "Merge"
  input: "batch_normalization_29/cond/batchnorm/add_1"
  input: "batch_normalization_29/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_29/Elu"
  op: "Elu"
  input: "batch_normalization_29/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_27/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_27/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0718885138630867
      }
    }
  }
}
node {
  name: "separable_conv2d_27/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0718885138630867
      }
    }
  }
}
node {
  name: "separable_conv2d_27/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_27/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6172766
    }
  }
}
node {
  name: "separable_conv2d_27/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_27/random_uniform/max"
  input: "separable_conv2d_27/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_27/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_27/random_uniform/RandomUniform"
  input: "separable_conv2d_27/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_27/random_uniform"
  op: "Add"
  input: "separable_conv2d_27/random_uniform/mul"
  input: "separable_conv2d_27/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_27/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_27/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_27/depthwise_kernel"
  input: "separable_conv2d_27/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_27/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_27/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_27/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_27/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_27/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_27/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "separable_conv2d_27/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "separable_conv2d_27/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_27/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4930903
    }
  }
}
node {
  name: "separable_conv2d_27/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_27/random_uniform_1/max"
  input: "separable_conv2d_27/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_27/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_27/random_uniform_1/RandomUniform"
  input: "separable_conv2d_27/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_27/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_27/random_uniform_1/mul"
  input: "separable_conv2d_27/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_27/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_27/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_27/pointwise_kernel"
  input: "separable_conv2d_27/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_27/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_27/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_27/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_27/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_27/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_27/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_27/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_27/bias"
  input: "separable_conv2d_27/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_27/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_27/bias/read"
  op: "Identity"
  input: "separable_conv2d_27/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_27/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_27/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_27/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_27/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_29/Elu"
  input: "separable_conv2d_27/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_27/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_27/separable_conv2d/depthwise"
  input: "separable_conv2d_27/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_27/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_27/separable_conv2d"
  input: "separable_conv2d_27/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_30/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_30/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_30/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_30/gamma"
  input: "batch_normalization_30/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_30/gamma/read"
  op: "Identity"
  input: "batch_normalization_30/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_30/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_30/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_30/beta/Assign"
  op: "Assign"
  input: "batch_normalization_30/beta"
  input: "batch_normalization_30/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_30/beta/read"
  op: "Identity"
  input: "batch_normalization_30/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_30/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_30/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_30/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_30/moving_mean"
  input: "batch_normalization_30/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_30/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_30/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_30/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_30/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_30/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_30/moving_variance"
  input: "batch_normalization_30/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_30/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_30/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_30/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_30/moments/mean"
  op: "Mean"
  input: "separable_conv2d_27/BiasAdd"
  input: "batch_normalization_30/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_30/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_30/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_30/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_27/BiasAdd"
  input: "batch_normalization_30/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_30/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_30/moments/variance"
  op: "Mean"
  input: "batch_normalization_30/moments/SquaredDifference"
  input: "batch_normalization_30/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_30/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_30/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_30/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_30/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_30/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_30/batchnorm/add"
  op: "Add"
  input: "batch_normalization_30/moments/Squeeze_1"
  input: "batch_normalization_30/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_30/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_30/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_30/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_30/batchnorm/Rsqrt"
  input: "batch_normalization_30/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_30/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_27/BiasAdd"
  input: "batch_normalization_30/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_30/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_30/moments/Squeeze"
  input: "batch_normalization_30/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_30/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_30/beta/read"
  input: "batch_normalization_30/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_30/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_30/batchnorm/mul_1"
  input: "batch_normalization_30/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_30/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_30/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_30/moving_mean/read"
  input: "batch_normalization_30/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_30/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_30/AssignMovingAvg/sub"
  input: "batch_normalization_30/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_30/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_30/moving_mean"
  input: "batch_normalization_30/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_30/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_30/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_30/moving_variance/read"
  input: "batch_normalization_30/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_30/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_30/AssignMovingAvg_1/sub"
  input: "batch_normalization_30/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_30/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_30/moving_variance"
  input: "batch_normalization_30/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_30/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_30/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_30/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_30/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_30/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_30/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_30/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_30/batchnorm/add_1"
  input: "batch_normalization_30/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_30/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_30/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_30/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_30/cond/batchnorm/add/Switch"
  input: "batch_normalization_30/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_30/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_30/moving_variance/read"
  input: "batch_normalization_30/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_30/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_30/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_30/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_30/cond/batchnorm/Rsqrt"
  input: "batch_normalization_30/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_30/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_30/gamma/read"
  input: "batch_normalization_30/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_30/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_30/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_30/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_30/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_27/BiasAdd"
  input: "batch_normalization_30/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_27/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_30/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_30/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_30/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_30/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_30/moving_mean/read"
  input: "batch_normalization_30/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_30/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_30/cond/batchnorm/sub/Switch"
  input: "batch_normalization_30/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_30/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_30/beta/read"
  input: "batch_normalization_30/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_30/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_30/cond/batchnorm/mul_1"
  input: "batch_normalization_30/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_30/cond/Merge"
  op: "Merge"
  input: "batch_normalization_30/cond/batchnorm/add_1"
  input: "batch_normalization_30/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_30/Elu"
  op: "Elu"
  input: "batch_normalization_30/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_28/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_28/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0718885138630867
      }
    }
  }
}
node {
  name: "separable_conv2d_28/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0718885138630867
      }
    }
  }
}
node {
  name: "separable_conv2d_28/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_28/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6773772
    }
  }
}
node {
  name: "separable_conv2d_28/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_28/random_uniform/max"
  input: "separable_conv2d_28/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_28/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_28/random_uniform/RandomUniform"
  input: "separable_conv2d_28/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_28/random_uniform"
  op: "Add"
  input: "separable_conv2d_28/random_uniform/mul"
  input: "separable_conv2d_28/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_28/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_28/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_28/depthwise_kernel"
  input: "separable_conv2d_28/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_28/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_28/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_28/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_28/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_28/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_28/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "separable_conv2d_28/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "separable_conv2d_28/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_28/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5076932
    }
  }
}
node {
  name: "separable_conv2d_28/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_28/random_uniform_1/max"
  input: "separable_conv2d_28/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_28/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_28/random_uniform_1/RandomUniform"
  input: "separable_conv2d_28/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_28/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_28/random_uniform_1/mul"
  input: "separable_conv2d_28/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_28/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_28/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_28/pointwise_kernel"
  input: "separable_conv2d_28/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_28/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_28/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_28/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_28/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_28/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_28/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_28/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_28/bias"
  input: "separable_conv2d_28/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_28/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_28/bias/read"
  op: "Identity"
  input: "separable_conv2d_28/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_28/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_28/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_28/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_28/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_30/Elu"
  input: "separable_conv2d_28/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_28/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_28/separable_conv2d/depthwise"
  input: "separable_conv2d_28/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_28/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_28/separable_conv2d"
  input: "separable_conv2d_28/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_31/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_31/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_31/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_31/gamma"
  input: "batch_normalization_31/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_31/gamma/read"
  op: "Identity"
  input: "batch_normalization_31/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_31/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_31/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_31/beta/Assign"
  op: "Assign"
  input: "batch_normalization_31/beta"
  input: "batch_normalization_31/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_31/beta/read"
  op: "Identity"
  input: "batch_normalization_31/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_31/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_31/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_31/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_31/moving_mean"
  input: "batch_normalization_31/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_31/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_31/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_31/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_31/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_31/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_31/moving_variance"
  input: "batch_normalization_31/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_31/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_31/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_31/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_31/moments/mean"
  op: "Mean"
  input: "separable_conv2d_28/BiasAdd"
  input: "batch_normalization_31/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_31/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_31/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_31/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_28/BiasAdd"
  input: "batch_normalization_31/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_31/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_31/moments/variance"
  op: "Mean"
  input: "batch_normalization_31/moments/SquaredDifference"
  input: "batch_normalization_31/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_31/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_31/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_31/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_31/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_31/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_31/batchnorm/add"
  op: "Add"
  input: "batch_normalization_31/moments/Squeeze_1"
  input: "batch_normalization_31/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_31/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_31/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_31/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_31/batchnorm/Rsqrt"
  input: "batch_normalization_31/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_31/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_28/BiasAdd"
  input: "batch_normalization_31/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_31/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_31/moments/Squeeze"
  input: "batch_normalization_31/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_31/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_31/beta/read"
  input: "batch_normalization_31/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_31/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_31/batchnorm/mul_1"
  input: "batch_normalization_31/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_31/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_31/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_31/moving_mean/read"
  input: "batch_normalization_31/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_31/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_31/AssignMovingAvg/sub"
  input: "batch_normalization_31/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_31/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_31/moving_mean"
  input: "batch_normalization_31/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_31/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_31/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_31/moving_variance/read"
  input: "batch_normalization_31/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_31/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_31/AssignMovingAvg_1/sub"
  input: "batch_normalization_31/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_31/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_31/moving_variance"
  input: "batch_normalization_31/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_31/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_31/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_31/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_31/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_31/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_31/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_31/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_31/batchnorm/add_1"
  input: "batch_normalization_31/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_31/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_31/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_31/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_31/cond/batchnorm/add/Switch"
  input: "batch_normalization_31/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_31/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_31/moving_variance/read"
  input: "batch_normalization_31/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_31/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_31/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_31/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_31/cond/batchnorm/Rsqrt"
  input: "batch_normalization_31/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_31/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_31/gamma/read"
  input: "batch_normalization_31/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_31/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_31/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_31/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_31/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_28/BiasAdd"
  input: "batch_normalization_31/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_28/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_31/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_31/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_31/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_31/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_31/moving_mean/read"
  input: "batch_normalization_31/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_31/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_31/cond/batchnorm/sub/Switch"
  input: "batch_normalization_31/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_31/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_31/beta/read"
  input: "batch_normalization_31/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_31/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_31/cond/batchnorm/mul_1"
  input: "batch_normalization_31/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_31/cond/Merge"
  op: "Merge"
  input: "batch_normalization_31/cond/batchnorm/add_1"
  input: "batch_normalization_31/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_31/Elu"
  op: "Elu"
  input: "batch_normalization_31/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_29/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_29/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958004
      }
    }
  }
}
node {
  name: "separable_conv2d_29/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958004
      }
    }
  }
}
node {
  name: "separable_conv2d_29/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_29/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6575695
    }
  }
}
node {
  name: "separable_conv2d_29/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_29/random_uniform/max"
  input: "separable_conv2d_29/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_29/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_29/random_uniform/RandomUniform"
  input: "separable_conv2d_29/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_29/random_uniform"
  op: "Add"
  input: "separable_conv2d_29/random_uniform/mul"
  input: "separable_conv2d_29/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_29/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_29/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_29/depthwise_kernel"
  input: "separable_conv2d_29/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_29/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_29/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_29/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_29/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_29/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_29/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "separable_conv2d_29/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "separable_conv2d_29/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_29/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5583020
    }
  }
}
node {
  name: "separable_conv2d_29/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_29/random_uniform_1/max"
  input: "separable_conv2d_29/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_29/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_29/random_uniform_1/RandomUniform"
  input: "separable_conv2d_29/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_29/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_29/random_uniform_1/mul"
  input: "separable_conv2d_29/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_29/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_29/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_29/pointwise_kernel"
  input: "separable_conv2d_29/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_29/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_29/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_29/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_29/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_29/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_29/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_29/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_29/bias"
  input: "separable_conv2d_29/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_29/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_29/bias/read"
  op: "Identity"
  input: "separable_conv2d_29/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_29/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_29/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_29/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_29/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_31/Elu"
  input: "separable_conv2d_29/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_29/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_29/separable_conv2d/depthwise"
  input: "separable_conv2d_29/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_29/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_29/separable_conv2d"
  input: "separable_conv2d_29/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_32/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_32/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_32/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_32/gamma"
  input: "batch_normalization_32/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_32/gamma/read"
  op: "Identity"
  input: "batch_normalization_32/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_32/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_32/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_32/beta/Assign"
  op: "Assign"
  input: "batch_normalization_32/beta"
  input: "batch_normalization_32/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_32/beta/read"
  op: "Identity"
  input: "batch_normalization_32/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_32/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_32/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_32/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_32/moving_mean"
  input: "batch_normalization_32/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_32/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_32/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_32/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_32/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_32/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_32/moving_variance"
  input: "batch_normalization_32/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_32/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_32/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_32/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_32/moments/mean"
  op: "Mean"
  input: "separable_conv2d_29/BiasAdd"
  input: "batch_normalization_32/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_32/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_32/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_32/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_29/BiasAdd"
  input: "batch_normalization_32/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_32/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_32/moments/variance"
  op: "Mean"
  input: "batch_normalization_32/moments/SquaredDifference"
  input: "batch_normalization_32/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_32/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_32/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_32/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_32/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_32/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_32/batchnorm/add"
  op: "Add"
  input: "batch_normalization_32/moments/Squeeze_1"
  input: "batch_normalization_32/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_32/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_32/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_32/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_32/batchnorm/Rsqrt"
  input: "batch_normalization_32/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_32/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_29/BiasAdd"
  input: "batch_normalization_32/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_32/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_32/moments/Squeeze"
  input: "batch_normalization_32/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_32/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_32/beta/read"
  input: "batch_normalization_32/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_32/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_32/batchnorm/mul_1"
  input: "batch_normalization_32/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_32/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_32/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_32/moving_mean/read"
  input: "batch_normalization_32/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_32/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_32/AssignMovingAvg/sub"
  input: "batch_normalization_32/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_32/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_32/moving_mean"
  input: "batch_normalization_32/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_32/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_32/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_32/moving_variance/read"
  input: "batch_normalization_32/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_32/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_32/AssignMovingAvg_1/sub"
  input: "batch_normalization_32/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_32/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_32/moving_variance"
  input: "batch_normalization_32/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_32/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_32/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_32/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_32/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_32/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_32/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_32/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_32/batchnorm/add_1"
  input: "batch_normalization_32/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_32/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_32/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_32/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_32/cond/batchnorm/add/Switch"
  input: "batch_normalization_32/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_32/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_32/moving_variance/read"
  input: "batch_normalization_32/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_32/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_32/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_32/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_32/cond/batchnorm/Rsqrt"
  input: "batch_normalization_32/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_32/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_32/gamma/read"
  input: "batch_normalization_32/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_32/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_32/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_32/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_32/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_29/BiasAdd"
  input: "batch_normalization_32/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_29/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_32/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_32/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_32/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_32/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_32/moving_mean/read"
  input: "batch_normalization_32/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_32/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_32/cond/batchnorm/sub/Switch"
  input: "batch_normalization_32/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_32/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_32/beta/read"
  input: "batch_normalization_32/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_32/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_32/cond/batchnorm/mul_1"
  input: "batch_normalization_32/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_32/cond/Merge"
  op: "Merge"
  input: "batch_normalization_32/cond/batchnorm/add_1"
  input: "batch_normalization_32/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_32/Elu"
  op: "Elu"
  input: "batch_normalization_32/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_30/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_30/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958004
      }
    }
  }
}
node {
  name: "separable_conv2d_30/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958004
      }
    }
  }
}
node {
  name: "separable_conv2d_30/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_30/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5120587
    }
  }
}
node {
  name: "separable_conv2d_30/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_30/random_uniform/max"
  input: "separable_conv2d_30/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_30/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_30/random_uniform/RandomUniform"
  input: "separable_conv2d_30/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_30/random_uniform"
  op: "Add"
  input: "separable_conv2d_30/random_uniform/mul"
  input: "separable_conv2d_30/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_30/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_30/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_30/depthwise_kernel"
  input: "separable_conv2d_30/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_30/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_30/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_30/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_30/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_30/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_30/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "separable_conv2d_30/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "separable_conv2d_30/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_30/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9920096
    }
  }
}
node {
  name: "separable_conv2d_30/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_30/random_uniform_1/max"
  input: "separable_conv2d_30/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_30/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_30/random_uniform_1/RandomUniform"
  input: "separable_conv2d_30/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_30/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_30/random_uniform_1/mul"
  input: "separable_conv2d_30/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_30/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_30/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_30/pointwise_kernel"
  input: "separable_conv2d_30/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_30/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_30/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_30/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_30/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_30/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_30/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_30/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_30/bias"
  input: "separable_conv2d_30/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_30/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_30/bias/read"
  op: "Identity"
  input: "separable_conv2d_30/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_30/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_30/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_30/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_30/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_32/Elu"
  input: "separable_conv2d_30/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_30/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_30/separable_conv2d/depthwise"
  input: "separable_conv2d_30/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_30/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_30/separable_conv2d"
  input: "separable_conv2d_30/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_33/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_33/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_33/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_33/gamma"
  input: "batch_normalization_33/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_33/gamma/read"
  op: "Identity"
  input: "batch_normalization_33/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_33/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_33/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_33/beta/Assign"
  op: "Assign"
  input: "batch_normalization_33/beta"
  input: "batch_normalization_33/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_33/beta/read"
  op: "Identity"
  input: "batch_normalization_33/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_33/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_33/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_33/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_33/moving_mean"
  input: "batch_normalization_33/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_33/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_33/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_33/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_33/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_33/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_33/moving_variance"
  input: "batch_normalization_33/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_33/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_33/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_33/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_33/moments/mean"
  op: "Mean"
  input: "separable_conv2d_30/BiasAdd"
  input: "batch_normalization_33/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_33/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_33/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_33/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_30/BiasAdd"
  input: "batch_normalization_33/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_33/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_33/moments/variance"
  op: "Mean"
  input: "batch_normalization_33/moments/SquaredDifference"
  input: "batch_normalization_33/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_33/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_33/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_33/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_33/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_33/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_33/batchnorm/add"
  op: "Add"
  input: "batch_normalization_33/moments/Squeeze_1"
  input: "batch_normalization_33/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_33/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_33/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_33/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_33/batchnorm/Rsqrt"
  input: "batch_normalization_33/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_33/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_30/BiasAdd"
  input: "batch_normalization_33/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_33/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_33/moments/Squeeze"
  input: "batch_normalization_33/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_33/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_33/beta/read"
  input: "batch_normalization_33/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_33/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_33/batchnorm/mul_1"
  input: "batch_normalization_33/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_33/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_33/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_33/moving_mean/read"
  input: "batch_normalization_33/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_33/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_33/AssignMovingAvg/sub"
  input: "batch_normalization_33/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_33/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_33/moving_mean"
  input: "batch_normalization_33/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_33/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_33/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_33/moving_variance/read"
  input: "batch_normalization_33/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_33/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_33/AssignMovingAvg_1/sub"
  input: "batch_normalization_33/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_33/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_33/moving_variance"
  input: "batch_normalization_33/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_33/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_33/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_33/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_33/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_33/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_33/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_33/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_33/batchnorm/add_1"
  input: "batch_normalization_33/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_33/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_33/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_33/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_33/cond/batchnorm/add/Switch"
  input: "batch_normalization_33/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_33/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_33/moving_variance/read"
  input: "batch_normalization_33/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_33/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_33/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_33/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_33/cond/batchnorm/Rsqrt"
  input: "batch_normalization_33/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_33/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_33/gamma/read"
  input: "batch_normalization_33/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_33/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_33/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_33/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_33/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_30/BiasAdd"
  input: "batch_normalization_33/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_30/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_33/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_33/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_33/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_33/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_33/moving_mean/read"
  input: "batch_normalization_33/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_33/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_33/cond/batchnorm/sub/Switch"
  input: "batch_normalization_33/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_33/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_33/beta/read"
  input: "batch_normalization_33/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_33/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_33/cond/batchnorm/mul_1"
  input: "batch_normalization_33/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_33/cond/Merge"
  op: "Merge"
  input: "batch_normalization_33/cond/batchnorm/add_1"
  input: "batch_normalization_33/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_33/Elu"
  op: "Elu"
  input: "batch_normalization_33/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_31/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_31/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_31/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_31/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_31/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9352837
    }
  }
}
node {
  name: "separable_conv2d_31/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_31/random_uniform/max"
  input: "separable_conv2d_31/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_31/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_31/random_uniform/RandomUniform"
  input: "separable_conv2d_31/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_31/random_uniform"
  op: "Add"
  input: "separable_conv2d_31/random_uniform/mul"
  input: "separable_conv2d_31/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_31/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_31/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_31/depthwise_kernel"
  input: "separable_conv2d_31/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_31/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_31/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_31/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_31/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_31/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_31/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_31/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_31/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_31/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6512583
    }
  }
}
node {
  name: "separable_conv2d_31/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_31/random_uniform_1/max"
  input: "separable_conv2d_31/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_31/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_31/random_uniform_1/RandomUniform"
  input: "separable_conv2d_31/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_31/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_31/random_uniform_1/mul"
  input: "separable_conv2d_31/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_31/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_31/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_31/pointwise_kernel"
  input: "separable_conv2d_31/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_31/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_31/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_31/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_31/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_31/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_31/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_31/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_31/bias"
  input: "separable_conv2d_31/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_31/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_31/bias/read"
  op: "Identity"
  input: "separable_conv2d_31/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_31/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_31/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_31/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_31/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_33/Elu"
  input: "separable_conv2d_31/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_31/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_31/separable_conv2d/depthwise"
  input: "separable_conv2d_31/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_31/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_31/separable_conv2d"
  input: "separable_conv2d_31/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_34/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_34/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_34/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_34/gamma"
  input: "batch_normalization_34/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_34/gamma/read"
  op: "Identity"
  input: "batch_normalization_34/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_34/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_34/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_34/beta/Assign"
  op: "Assign"
  input: "batch_normalization_34/beta"
  input: "batch_normalization_34/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_34/beta/read"
  op: "Identity"
  input: "batch_normalization_34/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_34/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_34/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_34/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_34/moving_mean"
  input: "batch_normalization_34/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_34/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_34/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_34/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_34/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_34/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_34/moving_variance"
  input: "batch_normalization_34/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_34/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_34/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_34/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_34/moments/mean"
  op: "Mean"
  input: "separable_conv2d_31/BiasAdd"
  input: "batch_normalization_34/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_34/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_34/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_34/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_31/BiasAdd"
  input: "batch_normalization_34/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_34/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_34/moments/variance"
  op: "Mean"
  input: "batch_normalization_34/moments/SquaredDifference"
  input: "batch_normalization_34/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_34/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_34/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_34/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_34/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_34/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_34/batchnorm/add"
  op: "Add"
  input: "batch_normalization_34/moments/Squeeze_1"
  input: "batch_normalization_34/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_34/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_34/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_34/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_34/batchnorm/Rsqrt"
  input: "batch_normalization_34/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_34/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_31/BiasAdd"
  input: "batch_normalization_34/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_34/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_34/moments/Squeeze"
  input: "batch_normalization_34/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_34/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_34/beta/read"
  input: "batch_normalization_34/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_34/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_34/batchnorm/mul_1"
  input: "batch_normalization_34/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_34/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_34/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_34/moving_mean/read"
  input: "batch_normalization_34/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_34/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_34/AssignMovingAvg/sub"
  input: "batch_normalization_34/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_34/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_34/moving_mean"
  input: "batch_normalization_34/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_34/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_34/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_34/moving_variance/read"
  input: "batch_normalization_34/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_34/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_34/AssignMovingAvg_1/sub"
  input: "batch_normalization_34/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_34/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_34/moving_variance"
  input: "batch_normalization_34/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_34/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_34/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_34/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_34/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_34/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_34/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_34/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_34/batchnorm/add_1"
  input: "batch_normalization_34/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_34/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_34/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_34/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_34/cond/batchnorm/add/Switch"
  input: "batch_normalization_34/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_34/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_34/moving_variance/read"
  input: "batch_normalization_34/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_34/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_34/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_34/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_34/cond/batchnorm/Rsqrt"
  input: "batch_normalization_34/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_34/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_34/gamma/read"
  input: "batch_normalization_34/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_34/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_34/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_34/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_34/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_31/BiasAdd"
  input: "batch_normalization_34/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_31/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_34/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_34/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_34/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_34/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_34/moving_mean/read"
  input: "batch_normalization_34/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_34/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_34/cond/batchnorm/sub/Switch"
  input: "batch_normalization_34/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_34/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_34/beta/read"
  input: "batch_normalization_34/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_34/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_34/cond/batchnorm/mul_1"
  input: "batch_normalization_34/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_34/cond/Merge"
  op: "Merge"
  input: "batch_normalization_34/cond/batchnorm/add_1"
  input: "batch_normalization_34/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_34/Elu"
  op: "Elu"
  input: "batch_normalization_34/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_32/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_32/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_32/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_32/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_32/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7663012
    }
  }
}
node {
  name: "separable_conv2d_32/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_32/random_uniform/max"
  input: "separable_conv2d_32/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_32/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_32/random_uniform/RandomUniform"
  input: "separable_conv2d_32/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_32/random_uniform"
  op: "Add"
  input: "separable_conv2d_32/random_uniform/mul"
  input: "separable_conv2d_32/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_32/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_32/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_32/depthwise_kernel"
  input: "separable_conv2d_32/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_32/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_32/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_32/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_32/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_32/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_32/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_32/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_32/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_32/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5828572
    }
  }
}
node {
  name: "separable_conv2d_32/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_32/random_uniform_1/max"
  input: "separable_conv2d_32/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_32/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_32/random_uniform_1/RandomUniform"
  input: "separable_conv2d_32/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_32/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_32/random_uniform_1/mul"
  input: "separable_conv2d_32/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_32/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_32/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_32/pointwise_kernel"
  input: "separable_conv2d_32/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_32/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_32/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_32/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_32/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_32/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_32/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_32/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_32/bias"
  input: "separable_conv2d_32/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_32/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_32/bias/read"
  op: "Identity"
  input: "separable_conv2d_32/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_32/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_32/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_32/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_32/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_34/Elu"
  input: "separable_conv2d_32/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_32/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_32/separable_conv2d/depthwise"
  input: "separable_conv2d_32/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_32/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_32/separable_conv2d"
  input: "separable_conv2d_32/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_35/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_35/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_35/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_35/gamma"
  input: "batch_normalization_35/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_35/gamma/read"
  op: "Identity"
  input: "batch_normalization_35/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_35/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_35/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_35/beta/Assign"
  op: "Assign"
  input: "batch_normalization_35/beta"
  input: "batch_normalization_35/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_35/beta/read"
  op: "Identity"
  input: "batch_normalization_35/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_35/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_35/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_35/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_35/moving_mean"
  input: "batch_normalization_35/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_35/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_35/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_35/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_35/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_35/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_35/moving_variance"
  input: "batch_normalization_35/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_35/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_35/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_35/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_35/moments/mean"
  op: "Mean"
  input: "separable_conv2d_32/BiasAdd"
  input: "batch_normalization_35/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_35/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_35/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_35/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_32/BiasAdd"
  input: "batch_normalization_35/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_35/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_35/moments/variance"
  op: "Mean"
  input: "batch_normalization_35/moments/SquaredDifference"
  input: "batch_normalization_35/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_35/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_35/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_35/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_35/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_35/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_35/batchnorm/add"
  op: "Add"
  input: "batch_normalization_35/moments/Squeeze_1"
  input: "batch_normalization_35/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_35/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_35/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_35/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_35/batchnorm/Rsqrt"
  input: "batch_normalization_35/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_35/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_32/BiasAdd"
  input: "batch_normalization_35/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_35/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_35/moments/Squeeze"
  input: "batch_normalization_35/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_35/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_35/beta/read"
  input: "batch_normalization_35/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_35/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_35/batchnorm/mul_1"
  input: "batch_normalization_35/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_35/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_35/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_35/moving_mean/read"
  input: "batch_normalization_35/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_35/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_35/AssignMovingAvg/sub"
  input: "batch_normalization_35/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_35/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_35/moving_mean"
  input: "batch_normalization_35/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_35/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_35/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_35/moving_variance/read"
  input: "batch_normalization_35/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_35/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_35/AssignMovingAvg_1/sub"
  input: "batch_normalization_35/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_35/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_35/moving_variance"
  input: "batch_normalization_35/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_35/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_35/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_35/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_35/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_35/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_35/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_35/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_35/batchnorm/add_1"
  input: "batch_normalization_35/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_35/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_35/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_35/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_35/cond/batchnorm/add/Switch"
  input: "batch_normalization_35/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_35/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_35/moving_variance/read"
  input: "batch_normalization_35/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_35/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_35/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_35/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_35/cond/batchnorm/Rsqrt"
  input: "batch_normalization_35/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_35/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_35/gamma/read"
  input: "batch_normalization_35/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_35/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_35/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_35/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_35/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_32/BiasAdd"
  input: "batch_normalization_35/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_32/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_35/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_35/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_35/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_35/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_35/moving_mean/read"
  input: "batch_normalization_35/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_35/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_35/cond/batchnorm/sub/Switch"
  input: "batch_normalization_35/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_35/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_35/beta/read"
  input: "batch_normalization_35/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_35/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_35/cond/batchnorm/mul_1"
  input: "batch_normalization_35/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_35/cond/Merge"
  op: "Merge"
  input: "batch_normalization_35/cond/batchnorm/add_1"
  input: "batch_normalization_35/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_35/Elu"
  op: "Elu"
  input: "batch_normalization_35/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_33/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_33/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_33/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_33/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_33/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3176635
    }
  }
}
node {
  name: "separable_conv2d_33/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_33/random_uniform/max"
  input: "separable_conv2d_33/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_33/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_33/random_uniform/RandomUniform"
  input: "separable_conv2d_33/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_33/random_uniform"
  op: "Add"
  input: "separable_conv2d_33/random_uniform/mul"
  input: "separable_conv2d_33/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_33/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_33/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_33/depthwise_kernel"
  input: "separable_conv2d_33/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_33/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_33/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_33/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_33/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_33/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_33/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_33/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_33/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_33/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7803368
    }
  }
}
node {
  name: "separable_conv2d_33/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_33/random_uniform_1/max"
  input: "separable_conv2d_33/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_33/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_33/random_uniform_1/RandomUniform"
  input: "separable_conv2d_33/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_33/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_33/random_uniform_1/mul"
  input: "separable_conv2d_33/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_33/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_33/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_33/pointwise_kernel"
  input: "separable_conv2d_33/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_33/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_33/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_33/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_33/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_33/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_33/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_33/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_33/bias"
  input: "separable_conv2d_33/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_33/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_33/bias/read"
  op: "Identity"
  input: "separable_conv2d_33/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_33/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_33/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_33/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_33/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_35/Elu"
  input: "separable_conv2d_33/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_33/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_33/separable_conv2d/depthwise"
  input: "separable_conv2d_33/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_33/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_33/separable_conv2d"
  input: "separable_conv2d_33/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_36/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_36/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_36/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_36/gamma"
  input: "batch_normalization_36/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_36/gamma/read"
  op: "Identity"
  input: "batch_normalization_36/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_36/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_36/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_36/beta/Assign"
  op: "Assign"
  input: "batch_normalization_36/beta"
  input: "batch_normalization_36/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_36/beta/read"
  op: "Identity"
  input: "batch_normalization_36/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_36/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_36/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_36/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_36/moving_mean"
  input: "batch_normalization_36/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_36/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_36/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_36/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_36/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_36/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_36/moving_variance"
  input: "batch_normalization_36/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_36/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_36/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_36/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_36/moments/mean"
  op: "Mean"
  input: "separable_conv2d_33/BiasAdd"
  input: "batch_normalization_36/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_36/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_36/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_36/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_33/BiasAdd"
  input: "batch_normalization_36/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_36/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_36/moments/variance"
  op: "Mean"
  input: "batch_normalization_36/moments/SquaredDifference"
  input: "batch_normalization_36/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_36/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_36/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_36/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_36/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_36/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_36/batchnorm/add"
  op: "Add"
  input: "batch_normalization_36/moments/Squeeze_1"
  input: "batch_normalization_36/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_36/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_36/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_36/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_36/batchnorm/Rsqrt"
  input: "batch_normalization_36/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_36/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_33/BiasAdd"
  input: "batch_normalization_36/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_36/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_36/moments/Squeeze"
  input: "batch_normalization_36/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_36/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_36/beta/read"
  input: "batch_normalization_36/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_36/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_36/batchnorm/mul_1"
  input: "batch_normalization_36/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_36/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_36/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_36/moving_mean/read"
  input: "batch_normalization_36/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_36/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_36/AssignMovingAvg/sub"
  input: "batch_normalization_36/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_36/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_36/moving_mean"
  input: "batch_normalization_36/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_36/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_36/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_36/moving_variance/read"
  input: "batch_normalization_36/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_36/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_36/AssignMovingAvg_1/sub"
  input: "batch_normalization_36/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_36/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_36/moving_variance"
  input: "batch_normalization_36/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_36/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_36/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_36/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_36/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_36/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_36/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_36/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_36/batchnorm/add_1"
  input: "batch_normalization_36/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_36/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_36/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_36/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_36/cond/batchnorm/add/Switch"
  input: "batch_normalization_36/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_36/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_36/moving_variance/read"
  input: "batch_normalization_36/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_36/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_36/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_36/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_36/cond/batchnorm/Rsqrt"
  input: "batch_normalization_36/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_36/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_36/gamma/read"
  input: "batch_normalization_36/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_36/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_36/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_36/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_36/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_33/BiasAdd"
  input: "batch_normalization_36/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_33/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_36/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_36/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_36/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_36/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_36/moving_mean/read"
  input: "batch_normalization_36/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_36/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_36/cond/batchnorm/sub/Switch"
  input: "batch_normalization_36/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_36/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_36/beta/read"
  input: "batch_normalization_36/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_36/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_36/cond/batchnorm/mul_1"
  input: "batch_normalization_36/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_36/cond/Merge"
  op: "Merge"
  input: "batch_normalization_36/cond/batchnorm/add_1"
  input: "batch_normalization_36/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_36/Elu"
  op: "Elu"
  input: "batch_normalization_36/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_34/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_34/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_34/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_34/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_34/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5084426
    }
  }
}
node {
  name: "separable_conv2d_34/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_34/random_uniform/max"
  input: "separable_conv2d_34/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_34/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_34/random_uniform/RandomUniform"
  input: "separable_conv2d_34/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_34/random_uniform"
  op: "Add"
  input: "separable_conv2d_34/random_uniform/mul"
  input: "separable_conv2d_34/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_34/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_34/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_34/depthwise_kernel"
  input: "separable_conv2d_34/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_34/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_34/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_34/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_34/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_34/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_34/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_34/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_34/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_34/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5927891
    }
  }
}
node {
  name: "separable_conv2d_34/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_34/random_uniform_1/max"
  input: "separable_conv2d_34/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_34/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_34/random_uniform_1/RandomUniform"
  input: "separable_conv2d_34/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_34/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_34/random_uniform_1/mul"
  input: "separable_conv2d_34/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_34/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_34/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_34/pointwise_kernel"
  input: "separable_conv2d_34/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_34/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_34/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_34/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_34/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_34/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_34/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_34/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_34/bias"
  input: "separable_conv2d_34/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_34/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_34/bias/read"
  op: "Identity"
  input: "separable_conv2d_34/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_34/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_34/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_34/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_34/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_36/Elu"
  input: "separable_conv2d_34/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_34/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_34/separable_conv2d/depthwise"
  input: "separable_conv2d_34/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_34/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_34/separable_conv2d"
  input: "separable_conv2d_34/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_37/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_37/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_37/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_37/gamma"
  input: "batch_normalization_37/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_37/gamma/read"
  op: "Identity"
  input: "batch_normalization_37/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_37/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_37/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_37/beta/Assign"
  op: "Assign"
  input: "batch_normalization_37/beta"
  input: "batch_normalization_37/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_37/beta/read"
  op: "Identity"
  input: "batch_normalization_37/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_37/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_37/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_37/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_37/moving_mean"
  input: "batch_normalization_37/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_37/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_37/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_37/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_37/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_37/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_37/moving_variance"
  input: "batch_normalization_37/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_37/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_37/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_37/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_37/moments/mean"
  op: "Mean"
  input: "separable_conv2d_34/BiasAdd"
  input: "batch_normalization_37/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_37/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_37/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_37/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_34/BiasAdd"
  input: "batch_normalization_37/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_37/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_37/moments/variance"
  op: "Mean"
  input: "batch_normalization_37/moments/SquaredDifference"
  input: "batch_normalization_37/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_37/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_37/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_37/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_37/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_37/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_37/batchnorm/add"
  op: "Add"
  input: "batch_normalization_37/moments/Squeeze_1"
  input: "batch_normalization_37/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_37/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_37/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_37/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_37/batchnorm/Rsqrt"
  input: "batch_normalization_37/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_37/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_34/BiasAdd"
  input: "batch_normalization_37/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_37/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_37/moments/Squeeze"
  input: "batch_normalization_37/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_37/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_37/beta/read"
  input: "batch_normalization_37/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_37/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_37/batchnorm/mul_1"
  input: "batch_normalization_37/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_37/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_37/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_37/moving_mean/read"
  input: "batch_normalization_37/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_37/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_37/AssignMovingAvg/sub"
  input: "batch_normalization_37/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_37/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_37/moving_mean"
  input: "batch_normalization_37/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_37/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_37/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_37/moving_variance/read"
  input: "batch_normalization_37/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_37/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_37/AssignMovingAvg_1/sub"
  input: "batch_normalization_37/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_37/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_37/moving_variance"
  input: "batch_normalization_37/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_37/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_37/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_37/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_37/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_37/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_37/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_37/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_37/batchnorm/add_1"
  input: "batch_normalization_37/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_37/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_37/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_37/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_37/cond/batchnorm/add/Switch"
  input: "batch_normalization_37/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_37/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_37/moving_variance/read"
  input: "batch_normalization_37/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_37/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_37/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_37/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_37/cond/batchnorm/Rsqrt"
  input: "batch_normalization_37/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_37/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_37/gamma/read"
  input: "batch_normalization_37/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_37/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_37/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_37/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_37/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_34/BiasAdd"
  input: "batch_normalization_37/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_34/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_37/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_37/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_37/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_37/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_37/moving_mean/read"
  input: "batch_normalization_37/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_37/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_37/cond/batchnorm/sub/Switch"
  input: "batch_normalization_37/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_37/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_37/beta/read"
  input: "batch_normalization_37/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_37/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_37/cond/batchnorm/mul_1"
  input: "batch_normalization_37/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_37/cond/Merge"
  op: "Merge"
  input: "batch_normalization_37/cond/batchnorm/add_1"
  input: "batch_normalization_37/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_37/Elu"
  op: "Elu"
  input: "batch_normalization_37/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_35/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_35/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_35/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_35/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_35/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4624596
    }
  }
}
node {
  name: "separable_conv2d_35/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_35/random_uniform/max"
  input: "separable_conv2d_35/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_35/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_35/random_uniform/RandomUniform"
  input: "separable_conv2d_35/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_35/random_uniform"
  op: "Add"
  input: "separable_conv2d_35/random_uniform/mul"
  input: "separable_conv2d_35/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_35/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_35/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_35/depthwise_kernel"
  input: "separable_conv2d_35/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_35/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_35/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_35/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_35/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_35/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_35/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_35/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "separable_conv2d_35/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_35/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1762967
    }
  }
}
node {
  name: "separable_conv2d_35/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_35/random_uniform_1/max"
  input: "separable_conv2d_35/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_35/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_35/random_uniform_1/RandomUniform"
  input: "separable_conv2d_35/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_35/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_35/random_uniform_1/mul"
  input: "separable_conv2d_35/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_35/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_35/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_35/pointwise_kernel"
  input: "separable_conv2d_35/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_35/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_35/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_35/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_35/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_35/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_35/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_35/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_35/bias"
  input: "separable_conv2d_35/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_35/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_35/bias/read"
  op: "Identity"
  input: "separable_conv2d_35/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_35/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_35/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_35/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_35/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_37/Elu"
  input: "separable_conv2d_35/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_35/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_35/separable_conv2d/depthwise"
  input: "separable_conv2d_35/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_35/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_35/separable_conv2d"
  input: "separable_conv2d_35/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_38/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_38/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_38/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_38/gamma"
  input: "batch_normalization_38/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_38/gamma/read"
  op: "Identity"
  input: "batch_normalization_38/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_38/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_38/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_38/beta/Assign"
  op: "Assign"
  input: "batch_normalization_38/beta"
  input: "batch_normalization_38/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_38/beta/read"
  op: "Identity"
  input: "batch_normalization_38/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_38/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_38/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_38/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_38/moving_mean"
  input: "batch_normalization_38/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_38/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_38/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_38/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_38/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_38/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_38/moving_variance"
  input: "batch_normalization_38/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_38/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_38/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_38/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_38/moments/mean"
  op: "Mean"
  input: "separable_conv2d_35/BiasAdd"
  input: "batch_normalization_38/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_38/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_38/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_38/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_35/BiasAdd"
  input: "batch_normalization_38/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_38/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_38/moments/variance"
  op: "Mean"
  input: "batch_normalization_38/moments/SquaredDifference"
  input: "batch_normalization_38/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_38/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_38/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_38/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_38/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_38/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_38/batchnorm/add"
  op: "Add"
  input: "batch_normalization_38/moments/Squeeze_1"
  input: "batch_normalization_38/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_38/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_38/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_38/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_38/batchnorm/Rsqrt"
  input: "batch_normalization_38/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_38/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_35/BiasAdd"
  input: "batch_normalization_38/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_38/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_38/moments/Squeeze"
  input: "batch_normalization_38/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_38/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_38/beta/read"
  input: "batch_normalization_38/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_38/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_38/batchnorm/mul_1"
  input: "batch_normalization_38/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_38/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_38/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_38/moving_mean/read"
  input: "batch_normalization_38/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_38/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_38/AssignMovingAvg/sub"
  input: "batch_normalization_38/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_38/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_38/moving_mean"
  input: "batch_normalization_38/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_38/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_38/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_38/moving_variance/read"
  input: "batch_normalization_38/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_38/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_38/AssignMovingAvg_1/sub"
  input: "batch_normalization_38/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_38/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_38/moving_variance"
  input: "batch_normalization_38/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_38/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_38/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_38/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_38/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_38/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_38/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_38/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_38/batchnorm/add_1"
  input: "batch_normalization_38/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_38/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_38/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_38/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_38/cond/batchnorm/add/Switch"
  input: "batch_normalization_38/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_38/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_38/moving_variance/read"
  input: "batch_normalization_38/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_38/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_38/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_38/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_38/cond/batchnorm/Rsqrt"
  input: "batch_normalization_38/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_38/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_38/gamma/read"
  input: "batch_normalization_38/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_38/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_38/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_38/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_38/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_35/BiasAdd"
  input: "batch_normalization_38/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_35/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_38/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_38/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_38/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_38/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_38/moving_mean/read"
  input: "batch_normalization_38/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_38/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_38/cond/batchnorm/sub/Switch"
  input: "batch_normalization_38/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_38/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_38/beta/read"
  input: "batch_normalization_38/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_38/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_38/cond/batchnorm/mul_1"
  input: "batch_normalization_38/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_38/cond/Merge"
  op: "Merge"
  input: "batch_normalization_38/cond/batchnorm/add_1"
  input: "batch_normalization_38/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_38/Elu"
  op: "Elu"
  input: "batch_normalization_38/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_36/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_36/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_36/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "separable_conv2d_36/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_36/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3024268
    }
  }
}
node {
  name: "separable_conv2d_36/random_uniform/sub"
  op: "Sub"
  input: "separable_conv2d_36/random_uniform/max"
  input: "separable_conv2d_36/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_36/random_uniform/mul"
  op: "Mul"
  input: "separable_conv2d_36/random_uniform/RandomUniform"
  input: "separable_conv2d_36/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_36/random_uniform"
  op: "Add"
  input: "separable_conv2d_36/random_uniform/mul"
  input: "separable_conv2d_36/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_36/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_36/depthwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_36/depthwise_kernel"
  input: "separable_conv2d_36/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_36/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_36/depthwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_36/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_36/depthwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_36/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_36/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0625
      }
    }
  }
}
node {
  name: "separable_conv2d_36/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "separable_conv2d_36/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "separable_conv2d_36/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1509605
    }
  }
}
node {
  name: "separable_conv2d_36/random_uniform_1/sub"
  op: "Sub"
  input: "separable_conv2d_36/random_uniform_1/max"
  input: "separable_conv2d_36/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_36/random_uniform_1/mul"
  op: "Mul"
  input: "separable_conv2d_36/random_uniform_1/RandomUniform"
  input: "separable_conv2d_36/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_36/random_uniform_1"
  op: "Add"
  input: "separable_conv2d_36/random_uniform_1/mul"
  input: "separable_conv2d_36/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "separable_conv2d_36/pointwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_36/pointwise_kernel/Assign"
  op: "Assign"
  input: "separable_conv2d_36/pointwise_kernel"
  input: "separable_conv2d_36/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_36/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_36/pointwise_kernel/read"
  op: "Identity"
  input: "separable_conv2d_36/pointwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_36/pointwise_kernel"
      }
    }
  }
}
node {
  name: "separable_conv2d_36/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "separable_conv2d_36/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "separable_conv2d_36/bias/Assign"
  op: "Assign"
  input: "separable_conv2d_36/bias"
  input: "separable_conv2d_36/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_36/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_36/bias/read"
  op: "Identity"
  input: "separable_conv2d_36/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_36/bias"
      }
    }
  }
}
node {
  name: "separable_conv2d_36/separable_conv2d/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_36/separable_conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "separable_conv2d_36/separable_conv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_38/Elu"
  input: "separable_conv2d_36/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "separable_conv2d_36/separable_conv2d"
  op: "Conv2D"
  input: "separable_conv2d_36/separable_conv2d/depthwise"
  input: "separable_conv2d_36/pointwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "separable_conv2d_36/BiasAdd"
  op: "BiasAdd"
  input: "separable_conv2d_36/separable_conv2d"
  input: "separable_conv2d_36/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "batch_normalization_39/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_39/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_39/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_39/gamma"
  input: "batch_normalization_39/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_39/gamma/read"
  op: "Identity"
  input: "batch_normalization_39/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_39/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_39/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_39/beta/Assign"
  op: "Assign"
  input: "batch_normalization_39/beta"
  input: "batch_normalization_39/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_39/beta/read"
  op: "Identity"
  input: "batch_normalization_39/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_39/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_39/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_39/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_39/moving_mean"
  input: "batch_normalization_39/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_39/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_39/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_39/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_39/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_39/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_39/moving_variance"
  input: "batch_normalization_39/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_39/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_39/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_39/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_39/moments/mean"
  op: "Mean"
  input: "separable_conv2d_36/BiasAdd"
  input: "batch_normalization_39/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_39/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_39/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_39/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "separable_conv2d_36/BiasAdd"
  input: "batch_normalization_39/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_39/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "batch_normalization_39/moments/variance"
  op: "Mean"
  input: "batch_normalization_39/moments/SquaredDifference"
  input: "batch_normalization_39/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_39/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_39/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_39/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_39/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "batch_normalization_39/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_39/batchnorm/add"
  op: "Add"
  input: "batch_normalization_39/moments/Squeeze_1"
  input: "batch_normalization_39/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_39/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_39/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_39/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_39/batchnorm/Rsqrt"
  input: "batch_normalization_39/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_39/batchnorm/mul_1"
  op: "Mul"
  input: "separable_conv2d_36/BiasAdd"
  input: "batch_normalization_39/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_39/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_39/moments/Squeeze"
  input: "batch_normalization_39/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_39/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_39/beta/read"
  input: "batch_normalization_39/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_39/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_39/batchnorm/mul_1"
  input: "batch_normalization_39/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_39/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_39/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_39/moving_mean/read"
  input: "batch_normalization_39/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_39/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_39/AssignMovingAvg/sub"
  input: "batch_normalization_39/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_39/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_39/moving_mean"
  input: "batch_normalization_39/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_39/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_39/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_39/moving_variance/read"
  input: "batch_normalization_39/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_39/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_39/AssignMovingAvg_1/sub"
  input: "batch_normalization_39/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_39/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_39/moving_variance"
  input: "batch_normalization_39/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_39/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_39/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_39/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_39/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_39/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_39/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_39/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_39/batchnorm/add_1"
  input: "batch_normalization_39/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_39/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_39/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_39/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_39/cond/batchnorm/add/Switch"
  input: "batch_normalization_39/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_39/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_39/moving_variance/read"
  input: "batch_normalization_39/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_39/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_39/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_39/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_39/cond/batchnorm/Rsqrt"
  input: "batch_normalization_39/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_39/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_39/gamma/read"
  input: "batch_normalization_39/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_39/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_39/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_39/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_39/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "separable_conv2d_36/BiasAdd"
  input: "batch_normalization_39/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_36/BiasAdd"
      }
    }
  }
}
node {
  name: "batch_normalization_39/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_39/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_39/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_39/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_39/moving_mean/read"
  input: "batch_normalization_39/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_39/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_39/cond/batchnorm/sub/Switch"
  input: "batch_normalization_39/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_39/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_39/beta/read"
  input: "batch_normalization_39/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_39/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_39/cond/batchnorm/mul_1"
  input: "batch_normalization_39/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_39/cond/Merge"
  op: "Merge"
  input: "batch_normalization_39/cond/batchnorm/add_1"
  input: "batch_normalization_39/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_39/Elu"
  op: "Elu"
  input: "batch_normalization_39/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_average_pooling2d_3/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "global_average_pooling2d_3/Mean"
  op: "Mean"
  input: "activation_39/Elu"
  input: "global_average_pooling2d_3/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_3/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1/keras_learning_phase"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_3/cond/switch_t"
  op: "Identity"
  input: "dropout_3/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_3/cond/switch_f"
  op: "Identity"
  input: "dropout_3/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_3/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_3/cond/mul/y"
  op: "Const"
  input: "^dropout_3/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_3/cond/mul"
  op: "Mul"
  input: "dropout_3/cond/mul/Switch:1"
  input: "dropout_3/cond/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/mul/Switch"
  op: "Switch"
  input: "global_average_pooling2d_3/Mean"
  input: "dropout_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_3/Mean"
      }
    }
  }
}
node {
  name: "dropout_3/cond/dropout/keep_prob"
  op: "Const"
  input: "^dropout_3/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.75
      }
    }
  }
}
node {
  name: "dropout_3/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_3/cond/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_3/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_3/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_3/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_3/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_3/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_3/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 568594
    }
  }
}
node {
  name: "dropout_3/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_3/cond/dropout/random_uniform/max"
  input: "dropout_3/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_3/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_3/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_3/cond/dropout/random_uniform/mul"
  input: "dropout_3/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/dropout/add"
  op: "Add"
  input: "dropout_3/cond/dropout/keep_prob"
  input: "dropout_3/cond/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/dropout/Floor"
  op: "Floor"
  input: "dropout_3/cond/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/dropout/div"
  op: "RealDiv"
  input: "dropout_3/cond/mul"
  input: "dropout_3/cond/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/dropout/mul"
  op: "Mul"
  input: "dropout_3/cond/dropout/div"
  input: "dropout_3/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/Switch_1"
  op: "Switch"
  input: "global_average_pooling2d_3/Mean"
  input: "dropout_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_3/Mean"
      }
    }
  }
}
node {
  name: "dropout_3/cond/Merge"
  op: "Merge"
  input: "dropout_3/cond/Switch_1"
  input: "dropout_3/cond/dropout/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "dense_3/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07639748603105545
      }
    }
  }
}
node {
  name: "dense_3/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07639748603105545
      }
    }
  }
}
node {
  name: "dense_3/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_3/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7549829
    }
  }
}
node {
  name: "dense_3/random_uniform/sub"
  op: "Sub"
  input: "dense_3/random_uniform/max"
  input: "dense_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/random_uniform/mul"
  op: "Mul"
  input: "dense_3/random_uniform/RandomUniform"
  input: "dense_3/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/random_uniform"
  op: "Add"
  input: "dense_3/random_uniform/mul"
  input: "dense_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense_3/kernel/Assign"
  op: "Assign"
  input: "dense_3/kernel"
  input: "dense_3/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense_3/kernel/read"
  op: "Identity"
  input: "dense_3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
}
node {
  name: "dense_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_3/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense_3/bias/Assign"
  op: "Assign"
  input: "dense_3/bias"
  input: "dense_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense_3/bias/read"
  op: "Identity"
  input: "dense_3/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
}
node {
  name: "dense_3/MatMul"
  op: "MatMul"
  input: "dropout_3/cond/Merge"
  input: "dense_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_3/BiasAdd"
  op: "BiasAdd"
  input: "dense_3/MatMul"
  input: "dense_3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_3/Softmax"
  op: "Softmax"
  input: "dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign"
  op: "Assign"
  input: "conv2d_3/kernel"
  input: "Placeholder"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_1"
  op: "Assign"
  input: "conv2d_3/bias"
  input: "Placeholder_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_2"
  op: "Assign"
  input: "batch_normalization_27/gamma"
  input: "Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_3"
  op: "Assign"
  input: "batch_normalization_27/beta"
  input: "Placeholder_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_4"
  op: "Assign"
  input: "batch_normalization_27/moving_mean"
  input: "Placeholder_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_5"
  op: "Assign"
  input: "batch_normalization_27/moving_variance"
  input: "Placeholder_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_6"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_6"
  op: "Assign"
  input: "separable_conv2d_25/depthwise_kernel"
  input: "Placeholder_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_25/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_7"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_7"
  op: "Assign"
  input: "separable_conv2d_25/pointwise_kernel"
  input: "Placeholder_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_25/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_8"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_8"
  op: "Assign"
  input: "separable_conv2d_25/bias"
  input: "Placeholder_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_25/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_9"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_9"
  op: "Assign"
  input: "batch_normalization_28/gamma"
  input: "Placeholder_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_10"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_10"
  op: "Assign"
  input: "batch_normalization_28/beta"
  input: "Placeholder_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_11"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_11"
  op: "Assign"
  input: "batch_normalization_28/moving_mean"
  input: "Placeholder_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_12"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_12"
  op: "Assign"
  input: "batch_normalization_28/moving_variance"
  input: "Placeholder_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_13"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_13"
  op: "Assign"
  input: "separable_conv2d_26/depthwise_kernel"
  input: "Placeholder_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_26/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_14"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_14"
  op: "Assign"
  input: "separable_conv2d_26/pointwise_kernel"
  input: "Placeholder_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_26/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_15"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_15"
  op: "Assign"
  input: "separable_conv2d_26/bias"
  input: "Placeholder_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_26/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_16"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_16"
  op: "Assign"
  input: "batch_normalization_29/gamma"
  input: "Placeholder_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_17"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_17"
  op: "Assign"
  input: "batch_normalization_29/beta"
  input: "Placeholder_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_18"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_18"
  op: "Assign"
  input: "batch_normalization_29/moving_mean"
  input: "Placeholder_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_19"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_19"
  op: "Assign"
  input: "batch_normalization_29/moving_variance"
  input: "Placeholder_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_20"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_20"
  op: "Assign"
  input: "separable_conv2d_27/depthwise_kernel"
  input: "Placeholder_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_27/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_21"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_21"
  op: "Assign"
  input: "separable_conv2d_27/pointwise_kernel"
  input: "Placeholder_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_27/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_22"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_22"
  op: "Assign"
  input: "separable_conv2d_27/bias"
  input: "Placeholder_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_27/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_23"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_23"
  op: "Assign"
  input: "batch_normalization_30/gamma"
  input: "Placeholder_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_24"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_24"
  op: "Assign"
  input: "batch_normalization_30/beta"
  input: "Placeholder_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_25"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_25"
  op: "Assign"
  input: "batch_normalization_30/moving_mean"
  input: "Placeholder_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_26"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_26"
  op: "Assign"
  input: "batch_normalization_30/moving_variance"
  input: "Placeholder_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_27"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_27"
  op: "Assign"
  input: "separable_conv2d_28/depthwise_kernel"
  input: "Placeholder_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_28/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_28"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_28"
  op: "Assign"
  input: "separable_conv2d_28/pointwise_kernel"
  input: "Placeholder_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_28/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_29"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_29"
  op: "Assign"
  input: "separable_conv2d_28/bias"
  input: "Placeholder_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_28/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_30"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_30"
  op: "Assign"
  input: "batch_normalization_31/gamma"
  input: "Placeholder_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_31"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_31"
  op: "Assign"
  input: "batch_normalization_31/beta"
  input: "Placeholder_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_32"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_32"
  op: "Assign"
  input: "batch_normalization_31/moving_mean"
  input: "Placeholder_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_33"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_33"
  op: "Assign"
  input: "batch_normalization_31/moving_variance"
  input: "Placeholder_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_34"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_34"
  op: "Assign"
  input: "separable_conv2d_29/depthwise_kernel"
  input: "Placeholder_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_29/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_35"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_35"
  op: "Assign"
  input: "separable_conv2d_29/pointwise_kernel"
  input: "Placeholder_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_29/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_36"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_36"
  op: "Assign"
  input: "separable_conv2d_29/bias"
  input: "Placeholder_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_29/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_37"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_37"
  op: "Assign"
  input: "batch_normalization_32/gamma"
  input: "Placeholder_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_38"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_38"
  op: "Assign"
  input: "batch_normalization_32/beta"
  input: "Placeholder_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_39"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_39"
  op: "Assign"
  input: "batch_normalization_32/moving_mean"
  input: "Placeholder_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_40"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_40"
  op: "Assign"
  input: "batch_normalization_32/moving_variance"
  input: "Placeholder_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_41"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_41"
  op: "Assign"
  input: "separable_conv2d_30/depthwise_kernel"
  input: "Placeholder_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_30/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_42"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_42"
  op: "Assign"
  input: "separable_conv2d_30/pointwise_kernel"
  input: "Placeholder_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_30/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_43"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_43"
  op: "Assign"
  input: "separable_conv2d_30/bias"
  input: "Placeholder_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_30/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_44"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_44"
  op: "Assign"
  input: "batch_normalization_33/gamma"
  input: "Placeholder_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_45"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_45"
  op: "Assign"
  input: "batch_normalization_33/beta"
  input: "Placeholder_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_46"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_46"
  op: "Assign"
  input: "batch_normalization_33/moving_mean"
  input: "Placeholder_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_47"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_47"
  op: "Assign"
  input: "batch_normalization_33/moving_variance"
  input: "Placeholder_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_48"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_48"
  op: "Assign"
  input: "separable_conv2d_31/depthwise_kernel"
  input: "Placeholder_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_31/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_49"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_49"
  op: "Assign"
  input: "separable_conv2d_31/pointwise_kernel"
  input: "Placeholder_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_31/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_50"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_50"
  op: "Assign"
  input: "separable_conv2d_31/bias"
  input: "Placeholder_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_31/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_51"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_51"
  op: "Assign"
  input: "batch_normalization_34/gamma"
  input: "Placeholder_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_52"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_52"
  op: "Assign"
  input: "batch_normalization_34/beta"
  input: "Placeholder_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_53"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_53"
  op: "Assign"
  input: "batch_normalization_34/moving_mean"
  input: "Placeholder_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_54"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_54"
  op: "Assign"
  input: "batch_normalization_34/moving_variance"
  input: "Placeholder_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_55"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_55"
  op: "Assign"
  input: "separable_conv2d_32/depthwise_kernel"
  input: "Placeholder_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_32/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_56"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_56"
  op: "Assign"
  input: "separable_conv2d_32/pointwise_kernel"
  input: "Placeholder_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_32/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_57"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_57"
  op: "Assign"
  input: "separable_conv2d_32/bias"
  input: "Placeholder_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_32/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_58"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_58"
  op: "Assign"
  input: "batch_normalization_35/gamma"
  input: "Placeholder_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_59"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_59"
  op: "Assign"
  input: "batch_normalization_35/beta"
  input: "Placeholder_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_60"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_60"
  op: "Assign"
  input: "batch_normalization_35/moving_mean"
  input: "Placeholder_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_61"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_61"
  op: "Assign"
  input: "batch_normalization_35/moving_variance"
  input: "Placeholder_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_62"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_62"
  op: "Assign"
  input: "separable_conv2d_33/depthwise_kernel"
  input: "Placeholder_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_33/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_63"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_63"
  op: "Assign"
  input: "separable_conv2d_33/pointwise_kernel"
  input: "Placeholder_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_33/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_64"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_64"
  op: "Assign"
  input: "separable_conv2d_33/bias"
  input: "Placeholder_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_33/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_65"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_65"
  op: "Assign"
  input: "batch_normalization_36/gamma"
  input: "Placeholder_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_66"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_66"
  op: "Assign"
  input: "batch_normalization_36/beta"
  input: "Placeholder_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_67"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_67"
  op: "Assign"
  input: "batch_normalization_36/moving_mean"
  input: "Placeholder_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_68"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_68"
  op: "Assign"
  input: "batch_normalization_36/moving_variance"
  input: "Placeholder_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_69"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_69"
  op: "Assign"
  input: "separable_conv2d_34/depthwise_kernel"
  input: "Placeholder_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_34/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_70"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_70"
  op: "Assign"
  input: "separable_conv2d_34/pointwise_kernel"
  input: "Placeholder_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_34/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_71"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_71"
  op: "Assign"
  input: "separable_conv2d_34/bias"
  input: "Placeholder_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_34/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_72"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_72"
  op: "Assign"
  input: "batch_normalization_37/gamma"
  input: "Placeholder_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_73"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_73"
  op: "Assign"
  input: "batch_normalization_37/beta"
  input: "Placeholder_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_74"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_74"
  op: "Assign"
  input: "batch_normalization_37/moving_mean"
  input: "Placeholder_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_75"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_75"
  op: "Assign"
  input: "batch_normalization_37/moving_variance"
  input: "Placeholder_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_76"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_76"
  op: "Assign"
  input: "separable_conv2d_35/depthwise_kernel"
  input: "Placeholder_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_35/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_77"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_77"
  op: "Assign"
  input: "separable_conv2d_35/pointwise_kernel"
  input: "Placeholder_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_35/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_78"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_78"
  op: "Assign"
  input: "separable_conv2d_35/bias"
  input: "Placeholder_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_35/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_79"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_79"
  op: "Assign"
  input: "batch_normalization_38/gamma"
  input: "Placeholder_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_80"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_80"
  op: "Assign"
  input: "batch_normalization_38/beta"
  input: "Placeholder_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_81"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_81"
  op: "Assign"
  input: "batch_normalization_38/moving_mean"
  input: "Placeholder_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_82"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_82"
  op: "Assign"
  input: "batch_normalization_38/moving_variance"
  input: "Placeholder_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_83"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_83"
  op: "Assign"
  input: "separable_conv2d_36/depthwise_kernel"
  input: "Placeholder_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_36/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_84"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_84"
  op: "Assign"
  input: "separable_conv2d_36/pointwise_kernel"
  input: "Placeholder_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_36/pointwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_85"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_85"
  op: "Assign"
  input: "separable_conv2d_36/bias"
  input: "Placeholder_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_36/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_86"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_86"
  op: "Assign"
  input: "batch_normalization_39/gamma"
  input: "Placeholder_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_87"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_87"
  op: "Assign"
  input: "batch_normalization_39/beta"
  input: "Placeholder_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_88"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_88"
  op: "Assign"
  input: "batch_normalization_39/moving_mean"
  input: "Placeholder_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_89"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_89"
  op: "Assign"
  input: "batch_normalization_39/moving_variance"
  input: "Placeholder_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_90"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "Assign_90"
  op: "Assign"
  input: "dense_3/kernel"
  input: "Placeholder_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_91"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "Assign_91"
  op: "Assign"
  input: "dense_3/bias"
  input: "Placeholder_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "IsVariableInitialized_254"
  op: "IsVariableInitialized"
  input: "conv2d_3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_255"
  op: "IsVariableInitialized"
  input: "conv2d_3/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_256"
  op: "IsVariableInitialized"
  input: "batch_normalization_27/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_257"
  op: "IsVariableInitialized"
  input: "batch_normalization_27/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_258"
  op: "IsVariableInitialized"
  input: "batch_normalization_27/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_259"
  op: "IsVariableInitialized"
  input: "batch_normalization_27/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_260"
  op: "IsVariableInitialized"
  input: "separable_conv2d_25/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_25/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_261"
  op: "IsVariableInitialized"
  input: "separable_conv2d_25/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_25/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_262"
  op: "IsVariableInitialized"
  input: "separable_conv2d_25/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_25/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_263"
  op: "IsVariableInitialized"
  input: "batch_normalization_28/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_264"
  op: "IsVariableInitialized"
  input: "batch_normalization_28/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_265"
  op: "IsVariableInitialized"
  input: "batch_normalization_28/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_266"
  op: "IsVariableInitialized"
  input: "batch_normalization_28/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_267"
  op: "IsVariableInitialized"
  input: "separable_conv2d_26/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_26/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_268"
  op: "IsVariableInitialized"
  input: "separable_conv2d_26/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_26/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_269"
  op: "IsVariableInitialized"
  input: "separable_conv2d_26/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_26/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_270"
  op: "IsVariableInitialized"
  input: "batch_normalization_29/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_271"
  op: "IsVariableInitialized"
  input: "batch_normalization_29/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_272"
  op: "IsVariableInitialized"
  input: "batch_normalization_29/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_273"
  op: "IsVariableInitialized"
  input: "batch_normalization_29/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_274"
  op: "IsVariableInitialized"
  input: "separable_conv2d_27/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_27/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_275"
  op: "IsVariableInitialized"
  input: "separable_conv2d_27/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_27/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_276"
  op: "IsVariableInitialized"
  input: "separable_conv2d_27/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_27/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_277"
  op: "IsVariableInitialized"
  input: "batch_normalization_30/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_278"
  op: "IsVariableInitialized"
  input: "batch_normalization_30/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_279"
  op: "IsVariableInitialized"
  input: "batch_normalization_30/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_280"
  op: "IsVariableInitialized"
  input: "batch_normalization_30/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_281"
  op: "IsVariableInitialized"
  input: "separable_conv2d_28/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_28/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_282"
  op: "IsVariableInitialized"
  input: "separable_conv2d_28/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_28/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_283"
  op: "IsVariableInitialized"
  input: "separable_conv2d_28/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_28/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_284"
  op: "IsVariableInitialized"
  input: "batch_normalization_31/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_285"
  op: "IsVariableInitialized"
  input: "batch_normalization_31/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_286"
  op: "IsVariableInitialized"
  input: "batch_normalization_31/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_287"
  op: "IsVariableInitialized"
  input: "batch_normalization_31/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_31/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_288"
  op: "IsVariableInitialized"
  input: "separable_conv2d_29/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_29/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_289"
  op: "IsVariableInitialized"
  input: "separable_conv2d_29/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_29/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_290"
  op: "IsVariableInitialized"
  input: "separable_conv2d_29/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_29/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_291"
  op: "IsVariableInitialized"
  input: "batch_normalization_32/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_292"
  op: "IsVariableInitialized"
  input: "batch_normalization_32/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_293"
  op: "IsVariableInitialized"
  input: "batch_normalization_32/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_294"
  op: "IsVariableInitialized"
  input: "batch_normalization_32/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_32/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_295"
  op: "IsVariableInitialized"
  input: "separable_conv2d_30/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_30/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_296"
  op: "IsVariableInitialized"
  input: "separable_conv2d_30/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_30/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_297"
  op: "IsVariableInitialized"
  input: "separable_conv2d_30/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_30/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_298"
  op: "IsVariableInitialized"
  input: "batch_normalization_33/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_299"
  op: "IsVariableInitialized"
  input: "batch_normalization_33/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_300"
  op: "IsVariableInitialized"
  input: "batch_normalization_33/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_301"
  op: "IsVariableInitialized"
  input: "batch_normalization_33/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_33/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_302"
  op: "IsVariableInitialized"
  input: "separable_conv2d_31/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_31/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_303"
  op: "IsVariableInitialized"
  input: "separable_conv2d_31/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_31/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_304"
  op: "IsVariableInitialized"
  input: "separable_conv2d_31/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_31/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_305"
  op: "IsVariableInitialized"
  input: "batch_normalization_34/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_306"
  op: "IsVariableInitialized"
  input: "batch_normalization_34/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_307"
  op: "IsVariableInitialized"
  input: "batch_normalization_34/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_308"
  op: "IsVariableInitialized"
  input: "batch_normalization_34/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_34/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_309"
  op: "IsVariableInitialized"
  input: "separable_conv2d_32/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_32/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_310"
  op: "IsVariableInitialized"
  input: "separable_conv2d_32/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_32/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_311"
  op: "IsVariableInitialized"
  input: "separable_conv2d_32/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_32/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_312"
  op: "IsVariableInitialized"
  input: "batch_normalization_35/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_313"
  op: "IsVariableInitialized"
  input: "batch_normalization_35/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_314"
  op: "IsVariableInitialized"
  input: "batch_normalization_35/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_315"
  op: "IsVariableInitialized"
  input: "batch_normalization_35/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_35/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_316"
  op: "IsVariableInitialized"
  input: "separable_conv2d_33/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_33/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_317"
  op: "IsVariableInitialized"
  input: "separable_conv2d_33/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_33/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_318"
  op: "IsVariableInitialized"
  input: "separable_conv2d_33/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_33/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_319"
  op: "IsVariableInitialized"
  input: "batch_normalization_36/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_320"
  op: "IsVariableInitialized"
  input: "batch_normalization_36/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_321"
  op: "IsVariableInitialized"
  input: "batch_normalization_36/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_322"
  op: "IsVariableInitialized"
  input: "batch_normalization_36/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_36/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_323"
  op: "IsVariableInitialized"
  input: "separable_conv2d_34/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_34/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_324"
  op: "IsVariableInitialized"
  input: "separable_conv2d_34/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_34/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_325"
  op: "IsVariableInitialized"
  input: "separable_conv2d_34/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_34/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_326"
  op: "IsVariableInitialized"
  input: "batch_normalization_37/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_327"
  op: "IsVariableInitialized"
  input: "batch_normalization_37/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_328"
  op: "IsVariableInitialized"
  input: "batch_normalization_37/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_329"
  op: "IsVariableInitialized"
  input: "batch_normalization_37/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_37/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_330"
  op: "IsVariableInitialized"
  input: "separable_conv2d_35/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_35/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_331"
  op: "IsVariableInitialized"
  input: "separable_conv2d_35/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_35/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_332"
  op: "IsVariableInitialized"
  input: "separable_conv2d_35/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_35/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_333"
  op: "IsVariableInitialized"
  input: "batch_normalization_38/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_334"
  op: "IsVariableInitialized"
  input: "batch_normalization_38/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_335"
  op: "IsVariableInitialized"
  input: "batch_normalization_38/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_336"
  op: "IsVariableInitialized"
  input: "batch_normalization_38/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_38/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_337"
  op: "IsVariableInitialized"
  input: "separable_conv2d_36/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_36/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_338"
  op: "IsVariableInitialized"
  input: "separable_conv2d_36/pointwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_36/pointwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_339"
  op: "IsVariableInitialized"
  input: "separable_conv2d_36/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@separable_conv2d_36/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_340"
  op: "IsVariableInitialized"
  input: "batch_normalization_39/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_341"
  op: "IsVariableInitialized"
  input: "batch_normalization_39/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_342"
  op: "IsVariableInitialized"
  input: "batch_normalization_39/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_343"
  op: "IsVariableInitialized"
  input: "batch_normalization_39/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_39/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_344"
  op: "IsVariableInitialized"
  input: "dense_3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_345"
  op: "IsVariableInitialized"
  input: "dense_3/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^conv2d_3/kernel/Assign"
  input: "^conv2d_3/bias/Assign"
  input: "^batch_normalization_27/gamma/Assign"
  input: "^batch_normalization_27/beta/Assign"
  input: "^batch_normalization_27/moving_mean/Assign"
  input: "^batch_normalization_27/moving_variance/Assign"
  input: "^separable_conv2d_25/depthwise_kernel/Assign"
  input: "^separable_conv2d_25/pointwise_kernel/Assign"
  input: "^separable_conv2d_25/bias/Assign"
  input: "^batch_normalization_28/gamma/Assign"
  input: "^batch_normalization_28/beta/Assign"
  input: "^batch_normalization_28/moving_mean/Assign"
  input: "^batch_normalization_28/moving_variance/Assign"
  input: "^separable_conv2d_26/depthwise_kernel/Assign"
  input: "^separable_conv2d_26/pointwise_kernel/Assign"
  input: "^separable_conv2d_26/bias/Assign"
  input: "^batch_normalization_29/gamma/Assign"
  input: "^batch_normalization_29/beta/Assign"
  input: "^batch_normalization_29/moving_mean/Assign"
  input: "^batch_normalization_29/moving_variance/Assign"
  input: "^separable_conv2d_27/depthwise_kernel/Assign"
  input: "^separable_conv2d_27/pointwise_kernel/Assign"
  input: "^separable_conv2d_27/bias/Assign"
  input: "^batch_normalization_30/gamma/Assign"
  input: "^batch_normalization_30/beta/Assign"
  input: "^batch_normalization_30/moving_mean/Assign"
  input: "^batch_normalization_30/moving_variance/Assign"
  input: "^separable_conv2d_28/depthwise_kernel/Assign"
  input: "^separable_conv2d_28/pointwise_kernel/Assign"
  input: "^separable_conv2d_28/bias/Assign"
  input: "^batch_normalization_31/gamma/Assign"
  input: "^batch_normalization_31/beta/Assign"
  input: "^batch_normalization_31/moving_mean/Assign"
  input: "^batch_normalization_31/moving_variance/Assign"
  input: "^separable_conv2d_29/depthwise_kernel/Assign"
  input: "^separable_conv2d_29/pointwise_kernel/Assign"
  input: "^separable_conv2d_29/bias/Assign"
  input: "^batch_normalization_32/gamma/Assign"
  input: "^batch_normalization_32/beta/Assign"
  input: "^batch_normalization_32/moving_mean/Assign"
  input: "^batch_normalization_32/moving_variance/Assign"
  input: "^separable_conv2d_30/depthwise_kernel/Assign"
  input: "^separable_conv2d_30/pointwise_kernel/Assign"
  input: "^separable_conv2d_30/bias/Assign"
  input: "^batch_normalization_33/gamma/Assign"
  input: "^batch_normalization_33/beta/Assign"
  input: "^batch_normalization_33/moving_mean/Assign"
  input: "^batch_normalization_33/moving_variance/Assign"
  input: "^separable_conv2d_31/depthwise_kernel/Assign"
  input: "^separable_conv2d_31/pointwise_kernel/Assign"
  input: "^separable_conv2d_31/bias/Assign"
  input: "^batch_normalization_34/gamma/Assign"
  input: "^batch_normalization_34/beta/Assign"
  input: "^batch_normalization_34/moving_mean/Assign"
  input: "^batch_normalization_34/moving_variance/Assign"
  input: "^separable_conv2d_32/depthwise_kernel/Assign"
  input: "^separable_conv2d_32/pointwise_kernel/Assign"
  input: "^separable_conv2d_32/bias/Assign"
  input: "^batch_normalization_35/gamma/Assign"
  input: "^batch_normalization_35/beta/Assign"
  input: "^batch_normalization_35/moving_mean/Assign"
  input: "^batch_normalization_35/moving_variance/Assign"
  input: "^separable_conv2d_33/depthwise_kernel/Assign"
  input: "^separable_conv2d_33/pointwise_kernel/Assign"
  input: "^separable_conv2d_33/bias/Assign"
  input: "^batch_normalization_36/gamma/Assign"
  input: "^batch_normalization_36/beta/Assign"
  input: "^batch_normalization_36/moving_mean/Assign"
  input: "^batch_normalization_36/moving_variance/Assign"
  input: "^separable_conv2d_34/depthwise_kernel/Assign"
  input: "^separable_conv2d_34/pointwise_kernel/Assign"
  input: "^separable_conv2d_34/bias/Assign"
  input: "^batch_normalization_37/gamma/Assign"
  input: "^batch_normalization_37/beta/Assign"
  input: "^batch_normalization_37/moving_mean/Assign"
  input: "^batch_normalization_37/moving_variance/Assign"
  input: "^separable_conv2d_35/depthwise_kernel/Assign"
  input: "^separable_conv2d_35/pointwise_kernel/Assign"
  input: "^separable_conv2d_35/bias/Assign"
  input: "^batch_normalization_38/gamma/Assign"
  input: "^batch_normalization_38/beta/Assign"
  input: "^batch_normalization_38/moving_mean/Assign"
  input: "^batch_normalization_38/moving_variance/Assign"
  input: "^separable_conv2d_36/depthwise_kernel/Assign"
  input: "^separable_conv2d_36/pointwise_kernel/Assign"
  input: "^separable_conv2d_36/bias/Assign"
  input: "^batch_normalization_39/gamma/Assign"
  input: "^batch_normalization_39/beta/Assign"
  input: "^batch_normalization_39/moving_mean/Assign"
  input: "^batch_normalization_39/moving_variance/Assign"
  input: "^dense_3/kernel/Assign"
  input: "^dense_3/bias/Assign"
}
node {
  name: "reshape_20"
  op: "Identity"
  input: "dense_3/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
versions {
  producer: 24
}
